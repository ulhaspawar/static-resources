/*! For license information please see orbo-smart-capture.js.LICENSE.txt */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.OrboSmartCapture=t():e.OrboSmartCapture=t()}(self,()=>(()=>{var e={4:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},31:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},67:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},72:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},74:()=>{},108:()=>{},123:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},159:(e,t,n)=>{"use strict";(r=n(540))&&"object"==typeof r&&"default"in r&&r.default;var r,a=n(576),s=new a,i=s.getBrowser(),o=(s.getCPU(),s.getDevice()),u=s.getEngine(),l=s.getOS(),c=s.getUA();var d="mobile",h="tablet",p="Chrome",f="Firefox",m="Opera",g="Yandex",y="Safari",b="Internet Explorer",x="Edge",w="Chromium",v="IE",k="Mobile Safari",I="MIUI Browser",S="Samsung Browser",N="iOS",T="Android",C="Windows Phone",$="Windows",E="Mac OS",_=function(e){return e||(arguments.length>1&&void 0!==arguments[1]?arguments[1]:"none")},A=function(){return!("undefined"==typeof window||!window.navigator&&!navigator)&&(window.navigator||navigator)},R=function(e){var t=A();return t&&t.platform&&(-1!==t.platform.indexOf(e)||"MacIntel"===t.platform&&t.maxTouchPoints>1&&!window.MSStream)},F=function(e){return e.type===d},D=function(e){return e.type===h},M=function(e){var t=e.type;return t===d||t===h},O=function(e){return"smarttv"===e.type},L=function(e){return undefined===e.type},z=function(e){return"wearable"===e.type},P=function(e){return"console"===e.type},B=function(e){return"embedded"===e.type},W=function(e){var t=e.vendor;return _(t)},V=function(e){var t=e.model;return _(t)},U=function(e){var t=e.type;return _(t,"browser")},G=function(e){return e.name===T},H=function(e){return e.name===$},j=function(e){return e.name===E},q=function(e){return e.name===C},K=function(e){return e.name===N},X=function(e){var t=e.version;return _(t)},Y=function(e){var t=e.name;return _(t)},Z=function(e){return e.name===p},J=function(e){return e.name===f},Q=function(e){return e.name===w},ee=function(e){return e.name===x},te=function(e){return e.name===g},ne=function(e){var t=e.name;return t===y||t===k},re=function(e){return e.name===k},ae=function(e){return e.name===m},se=function(e){var t=e.name;return t===b||t===v},ie=function(e){return e.name===I},oe=function(e){return e.name===S},ue=function(e){var t=e.version;return _(t)},le=function(e){var t=e.major;return _(t)},ce=function(e){var t=e.name;return _(t)},de=function(e){var t=e.name;return _(t)},he=function(e){var t=e.version;return _(t)},pe=function(){var e=A(),t=e&&e.userAgent&&e.userAgent.toLowerCase();return"string"==typeof t&&/electron/.test(t)},fe=function(e){return"string"==typeof e&&-1!==e.indexOf("Edg/")},me=function(){var e=A();return e&&(/iPad|iPhone|iPod/.test(e.platform)||"MacIntel"===e.platform&&e.maxTouchPoints>1)&&!window.MSStream},ge=function(){return R("iPad")},ye=function(){return R("iPhone")},be=function(){return R("iPod")},xe=function(e){return _(e)};O(o),P(o),z(o),B(o),re(i)||ge(),Q(i);var we=M(o)||ge();F(o),D(o)||ge(),L(o),L(o),G(l),q(l),K(l)||ge(),Z(i),J(i),ne(i),ae(i),se(i),X(l),Y(l),ue(i),le(i),ce(i),W(o),V(o),de(u),he(u),xe(c),ee(i)||fe(c),te(i),U(o),me(),ge(),ye(),be(),pe(),fe(c),ee(i)&&fe(c),H(l),j(l),ie(i),oe(i);t.Fr=we},180:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},181:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},234:()=>{},242:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},244:()=>{},264:(e,t,n)=>{var r=n(297),a=n(72),s=n(950),i=n(436),o=n(242),u=n(668),l=n(456);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},281:()=>{},297:function(e,t,n){var r;!function(e,a){function s(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function i(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function o(e,t){var n=new s(e),r=t&&t.state,a=n.next;return a.int32=function(){return 4294967296*n.next()|0},a.double=function(){return a()+11102230246251565e-32*(2097152*a()|0)},a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.alea=o}(0,e=n.nmd(e),n.amdD)},316:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)},351:()=>{},391:(e,t,n)=>{var r=n(180),a=n(181),s=n(31),i=n(67),o=n(833),u=n(717),l=n(801);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},392:e=>{var t,n=(t="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0,function(e){var n,r;(e=e||{})||(e=void 0!==e?e:{}),e.ready=new Promise(function(e,t){n=e,r=t});var a,s={};for(a in e)e.hasOwnProperty(a)&&(s[a]=e[a]);var i=[],o="./this.program",u="";"undefined"!=typeof document&&document.currentScript&&(u=document.currentScript.src),t&&(u=t),u=0!==u.indexOf("blob:")?u.substr(0,u.lastIndexOf("/")+1):"";var l,c,d=e.print||console.log.bind(console),h=e.printErr||console.warn.bind(console);for(a in s)s.hasOwnProperty(a)&&(e[a]=s[a]);s=null,e.arguments&&(i=e.arguments),e.thisProgram&&(o=e.thisProgram),e.quit&&e.quit,e.wasmBinary&&(l=e.wasmBinary),e.noExitRuntime,"object"!=typeof WebAssembly&&q("no native wasm support detected");var p=!1,f="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function m(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&f)return f.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function g(e,t){return e?m(v,e,t):""}function y(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}function b(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}var x,w,v,k,I,S,N,T,C,$="undefined"!=typeof TextDecoder?new TextDecoder("utf-16le"):void 0;function E(e,t){for(var n=e,r=n>>1,a=r+t/2;!(r>=a)&&I[r];)++r;if((n=r<<1)-e>32&&$)return $.decode(v.subarray(e,n));for(var s="",i=0;!(i>=t/2);++i){var o=k[e+2*i>>1];if(0==o)break;s+=String.fromCharCode(o)}return s}function _(e,t,n){if(void 0===n&&(n=2147483647),n<2)return 0;for(var r=t,a=(n-=2)<2*e.length?n/2:e.length,s=0;s<a;++s){var i=e.charCodeAt(s);k[t>>1]=i,t+=2}return k[t>>1]=0,t-r}function A(e){return 2*e.length}function R(e,t){for(var n=0,r="";!(n>=t/4);){var a=S[e+4*n>>2];if(0==a)break;if(++n,a>=65536){var s=a-65536;r+=String.fromCharCode(55296|s>>10,56320|1023&s)}else r+=String.fromCharCode(a)}return r}function F(e,t,n){if(void 0===n&&(n=2147483647),n<4)return 0;for(var r=t,a=r+n-4,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),S[t>>2]=i,(t+=4)+4>a)break}return S[t>>2]=0,t-r}function D(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&++n,t+=4}return t}function M(e,t){return e%t>0&&(e+=t-e%t),e}function O(t){x=t,e.HEAP8=w=new Int8Array(t),e.HEAP16=k=new Int16Array(t),e.HEAP32=S=new Int32Array(t),e.HEAPU8=v=new Uint8Array(t),e.HEAPU16=I=new Uint16Array(t),e.HEAPU32=N=new Uint32Array(t),e.HEAPF32=T=new Float32Array(t),e.HEAPF64=C=new Float64Array(t)}e.INITIAL_MEMORY;var L,z=[],P=[],B=[],W=[];function V(e){z.unshift(e)}function U(e){W.unshift(e)}P.push({func:function(){Pe()}});var G=0,H=null,j=null;function q(t){e.onAbort&&e.onAbort(t),h(t+=""),p=!0,t="abort("+t+"). Build with -s ASSERTIONS=1 for more info.";var n=new WebAssembly.RuntimeError(t);throw r(n),n}function K(e){return t=e,n="data:application/octet-stream;base64,",String.prototype.startsWith?t.startsWith(n):0===t.indexOf(n);var t,n}e.preloadedImages={},e.preloadedAudios={};var X,Y="orbo-smart-capture.wasm";function Z(e){try{if(e==Y&&l)return new Uint8Array(l);throw"both async and sync fetching of the wasm failed"}catch(e){q(e)}}function J(t){for(;t.length>0;){var n=t.shift();if("function"!=typeof n){var r=n.func;"number"==typeof r?void 0===n.arg?L.get(r)():L.get(r)(n.arg):r(void 0===n.arg?null:n.arg)}else n(e)}}K(Y)||(X=Y,Y=e.locateFile?e.locateFile(X,u):u+X);function Q(e){this.excPtr=e,this.ptr=e-16,this.set_type=function(e){S[this.ptr+8>>2]=e},this.get_type=function(){return S[this.ptr+8>>2]},this.set_destructor=function(e){S[this.ptr+0>>2]=e},this.get_destructor=function(){return S[this.ptr+0>>2]},this.set_refcount=function(e){S[this.ptr+4>>2]=e},this.set_caught=function(e){e=e?1:0,w[this.ptr+12|0]=e},this.get_caught=function(){return 0!=w[this.ptr+12|0]},this.set_rethrown=function(e){e=e?1:0,w[this.ptr+13|0]=e},this.get_rethrown=function(){return 0!=w[this.ptr+13|0]},this.init=function(e,t){this.set_type(e),this.set_destructor(t),this.set_refcount(0),this.set_caught(!1),this.set_rethrown(!1)},this.add_ref=function(){var e=S[this.ptr+4>>2];S[this.ptr+4>>2]=e+1},this.release_ref=function(){var e=S[this.ptr+4>>2];return S[this.ptr+4>>2]=e-1,1===e}}var ee={};function te(e){for(;e.length;){var t=e.pop();e.pop()(t)}}function ne(e){return this.fromWireType(N[e>>2])}var re={},ae={},se={};function ie(e){if(void 0===e)return"_unknown";var t=(e=e.replace(/[^a-zA-Z0-9_]/g,"$")).charCodeAt(0);return t>=48&&t<=57?"_"+e:e}function oe(e,t){return e=ie(e),new Function("body","return function "+e+'() {\n    "use strict";    return body.apply(this, arguments);\n};\n')(t)}function ue(e,t){var n=oe(t,function(e){this.name=t,this.message=e;var n=new Error(e).stack;void 0!==n&&(this.stack=this.toString()+"\n"+n.replace(/^Error(:[^\n]*)?\n/,""))});return n.prototype=Object.create(e.prototype),n.prototype.constructor=n,n.prototype.toString=function(){return void 0===this.message?this.name:this.name+": "+this.message},n}var le=void 0;function ce(e){throw new le(e)}function de(e,t,n){function r(t){var r=n(t);r.length!==e.length&&ce("Mismatched type converter count");for(var a=0;a<e.length;++a)ye(e[a],r[a])}e.forEach(function(e){se[e]=t});var a=new Array(t.length),s=[],i=0;t.forEach(function(e,t){ae.hasOwnProperty(e)?a[t]=ae[e]:(s.push(e),re.hasOwnProperty(e)||(re[e]=[]),re[e].push(function(){a[t]=ae[e],++i===s.length&&r(a)}))}),0===s.length&&r(a)}function he(e){switch(e){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError("Unknown type size: "+e)}}var pe=void 0;function fe(e){for(var t="",n=e;v[n];)t+=pe[v[n++]];return t}var me=void 0;function ge(e){throw new me(e)}function ye(e,t,n){if(n=n||{},!("argPackAdvance"in t))throw new TypeError("registerType registeredInstance requires argPackAdvance");var r=t.name;if(e||ge('type "'+r+'" must have a positive integer typeid pointer'),ae.hasOwnProperty(e)){if(n.ignoreDuplicateRegistrations)return;ge("Cannot register type '"+r+"' twice")}if(ae[e]=t,delete se[e],re.hasOwnProperty(e)){var a=re[e];delete re[e],a.forEach(function(e){e()})}}var be=[],xe=[{},{value:void 0},{value:null},{value:!0},{value:!1}];function we(e){e>4&&0===--xe[e].refcount&&(xe[e]=void 0,be.push(e))}function ve(e){switch(e){case void 0:return 1;case null:return 2;case!0:return 3;case!1:return 4;default:var t=be.length?be.pop():xe.length;return xe[t]={refcount:1,value:e},t}}function ke(e){if(null===e)return"null";var t=typeof e;return"object"===t||"array"===t||"function"===t?e.toString():""+e}function Ie(e,t){switch(t){case 2:return function(e){return this.fromWireType(T[e>>2])};case 3:return function(e){return this.fromWireType(C[e>>3])};default:throw new TypeError("Unknown float type: "+e)}}function Se(t,n){var r,a,s,i=-1!=(t=fe(t)).indexOf("j")?(r=t,a=n,s=[],function(){s.length=arguments.length;for(var t=0;t<arguments.length;t++)s[t]=arguments[t];return function(t,n,r){return-1!=t.indexOf("j")?function(t,n,r){var a=e["dynCall_"+t];return r&&r.length?a.apply(null,[n].concat(r)):a.call(null,n)}(t,n,r):L.get(n).apply(null,r)}(r,a,s)}):L.get(n);return"function"!=typeof i&&ge("unknown function pointer with signature "+t+": "+n),i}var Ne=void 0;function Te(e){var t=Ve(e),n=fe(t);return We(t),n}function Ce(e,t,n){switch(t){case 0:return n?function(e){return w[e]}:function(e){return v[e]};case 1:return n?function(e){return k[e>>1]}:function(e){return I[e>>1]};case 2:return n?function(e){return S[e>>2]}:function(e){return N[e>>2]};default:throw new TypeError("Unknown integer type: "+e)}}function $e(e){try{return c.grow(e-x.byteLength+65535>>>16),O(c.buffer),1}catch(e){}}var Ee={};function _e(){if(!_e.strings){var e={USER:"web_user",LOGNAME:"web_user",PATH:"/",PWD:"/",HOME:"/home/web_user",LANG:("object"==typeof navigator&&navigator.languages&&navigator.languages[0]||"C").replace("-","_")+".UTF-8",_:o||"./this.program"};for(var t in Ee)e[t]=Ee[t];var n=[];for(var t in e)n.push(t+"="+e[t]);_e.strings=n}return _e.strings}var Ae={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Ae.buffers[e];0===t||10===t?((1===e?d:h)(m(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Ae.varargs+=4,S[Ae.varargs-4>>2]},getStr:function(e){return g(e)},get64:function(e,t){return e}};function Re(e){return e%4==0&&(e%100!=0||e%400==0)}function Fe(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var De=[31,29,31,30,31,30,31,31,30,31,30,31],Me=[31,28,31,30,31,30,31,31,30,31,30,31];function Oe(e,t){for(var n=new Date(e.getTime());t>0;){var r=Re(n.getFullYear()),a=n.getMonth(),s=(r?De:Me)[a];if(!(t>s-n.getDate()))return n.setDate(n.getDate()+t),n;t-=s-n.getDate()+1,n.setDate(1),a<11?n.setMonth(a+1):(n.setMonth(0),n.setFullYear(n.getFullYear()+1))}return n}le=e.InternalError=ue(Error,"InternalError"),function(){for(var e=new Array(256),t=0;t<256;++t)e[t]=String.fromCharCode(t);pe=e}(),me=e.BindingError=ue(Error,"BindingError"),e.count_emval_handles=function(){for(var e=0,t=5;t<xe.length;++t)void 0!==xe[t]&&++e;return e},e.get_first_emval=function(){for(var e=5;e<xe.length;++e)if(void 0!==xe[e])return xe[e];return null},Ne=e.UnboundTypeError=ue(Error,"UnboundTypeError");var Le,ze={f:function(e){return Be(e+16)+16},e:function(e,t,n){throw new Q(e).init(t,n),e},p:function(e){var t=ee[e];delete ee[e];var n=t.rawConstructor,r=t.rawDestructor,a=t.fields;de([e],a.map(function(e){return e.getterReturnType}).concat(a.map(function(e){return e.setterArgumentType})),function(e){var s={};return a.forEach(function(t,n){var r=t.fieldName,i=e[n],o=t.getter,u=t.getterContext,l=e[n+a.length],c=t.setter,d=t.setterContext;s[r]={read:function(e){return i.fromWireType(o(u,e))},write:function(e,t){var n=[];c(d,e,l.toWireType(n,t)),te(n)}}}),[{name:t.name,fromWireType:function(e){var t={};for(var n in s)t[n]=s[n].read(e);return r(e),t},toWireType:function(e,t){for(var a in s)if(!(a in t))throw new TypeError('Missing field:  "'+a+'"');var i=n();for(a in s)s[a].write(i,t[a]);return null!==e&&e.push(r,i),i},argPackAdvance:8,readValueFromPointer:ne,destructorFunction:r}]})},A:function(e,t,n,r,a){var s=he(n);ye(e,{name:t=fe(t),fromWireType:function(e){return!!e},toWireType:function(e,t){return t?r:a},argPackAdvance:8,readValueFromPointer:function(e){var r;if(1===n)r=w;else if(2===n)r=k;else{if(4!==n)throw new TypeError("Unknown boolean type size: "+t);r=S}return this.fromWireType(r[e>>s])},destructorFunction:null})},z:function(e,t){ye(e,{name:t=fe(t),fromWireType:function(e){var t=xe[e].value;return we(e),t},toWireType:function(e,t){return ve(t)},argPackAdvance:8,readValueFromPointer:ne,destructorFunction:null})},j:function(e,t,n){var r=he(n);ye(e,{name:t=fe(t),fromWireType:function(e){return e},toWireType:function(e,t){if("number"!=typeof t&&"boolean"!=typeof t)throw new TypeError('Cannot convert "'+ke(t)+'" to '+this.name);return t},argPackAdvance:8,readValueFromPointer:Ie(t,r),destructorFunction:null})},l:function(t,n,r,a,s,i){var o=function(e,t){for(var n=[],r=0;r<e;r++)n.push(S[(t>>2)+r]);return n}(n,r);t=fe(t),s=Se(a,s),function(t,n,r){e.hasOwnProperty(t)?((void 0===r||void 0!==e[t].overloadTable&&void 0!==e[t].overloadTable[r])&&ge("Cannot register public name '"+t+"' twice"),function(e,t,n){if(void 0===e[t].overloadTable){var r=e[t];e[t]=function(){return e[t].overloadTable.hasOwnProperty(arguments.length)||ge("Function '"+n+"' called with an invalid number of arguments ("+arguments.length+") - expects one of ("+e[t].overloadTable+")!"),e[t].overloadTable[arguments.length].apply(this,arguments)},e[t].overloadTable=[],e[t].overloadTable[r.argCount]=r}}(e,t,t),e.hasOwnProperty(r)&&ge("Cannot register multiple overloads of a function with the same number of arguments ("+r+")!"),e[t].overloadTable[r]=n):(e[t]=n,void 0!==r&&(e[t].numArguments=r))}(t,function(){!function(e,t){var n=[],r={};throw t.forEach(function e(t){r[t]||ae[t]||(se[t]?se[t].forEach(e):(n.push(t),r[t]=!0))}),new Ne(e+": "+n.map(Te).join([", "]))}("Cannot call "+t+" due to unbound types",o)},n-1),de([],o,function(r){var a=[r[0],null].concat(r.slice(1));return function(t,n,r){e.hasOwnProperty(t)||ce("Replacing nonexistant public symbol"),void 0!==e[t].overloadTable&&void 0!==r?e[t].overloadTable[r]=n:(e[t]=n,e[t].argCount=r)}(t,function(e,t,n,r,a){var s=t.length;s<2&&ge("argTypes array size mismatch! Must at least get return value and 'this' types!");for(var i=null!==t[1]&&null!==n,o=!1,u=1;u<t.length;++u)if(null!==t[u]&&void 0===t[u].destructorFunction){o=!0;break}var l="void"!==t[0].name,c="",d="";for(u=0;u<s-2;++u)c+=(0!==u?", ":"")+"arg"+u,d+=(0!==u?", ":"")+"arg"+u+"Wired";var h="return function "+ie(e)+"("+c+") {\nif (arguments.length !== "+(s-2)+") {\nthrowBindingError('function "+e+" called with ' + arguments.length + ' arguments, expected "+(s-2)+" args!');\n}\n";o&&(h+="var destructors = [];\n");var p=o?"destructors":"null",f=["throwBindingError","invoker","fn","runDestructors","retType","classParam"],m=[ge,r,a,te,t[0],t[1]];for(i&&(h+="var thisWired = classParam.toWireType("+p+", this);\n"),u=0;u<s-2;++u)h+="var arg"+u+"Wired = argType"+u+".toWireType("+p+", arg"+u+"); // "+t[u+2].name+"\n",f.push("argType"+u),m.push(t[u+2]);if(i&&(d="thisWired"+(d.length>0?", ":"")+d),h+=(l?"var rv = ":"")+"invoker(fn"+(d.length>0?", ":"")+d+");\n",o)h+="runDestructors(destructors);\n";else for(u=i?1:2;u<t.length;++u){var g=1===u?"thisWired":"arg"+(u-2)+"Wired";null!==t[u].destructorFunction&&(h+=g+"_dtor("+g+"); // "+t[u].name+"\n",f.push(g+"_dtor"),m.push(t[u].destructorFunction))}return l&&(h+="var ret = retType.fromWireType(rv);\nreturn ret;\n"),h+="}\n",f.push(h),function(e,t){if(!(e instanceof Function))throw new TypeError("new_ called with constructor type "+typeof e+" which is not a function");var n=oe(e.name||"unknownFunctionName",function(){});n.prototype=e.prototype;var r=new n,a=e.apply(r,t);return a instanceof Object?a:r}(Function,f).apply(null,m)}(t,a,null,s,i),n-1),[]})},b:function(e,t,n,r,a){t=fe(t),-1===a&&(a=4294967295);var s=he(n),i=function(e){return e};if(0===r){var o=32-8*n;i=function(e){return e<<o>>>o}}var u=-1!=t.indexOf("unsigned");ye(e,{name:t,fromWireType:i,toWireType:function(e,n){if("number"!=typeof n&&"boolean"!=typeof n)throw new TypeError('Cannot convert "'+ke(n)+'" to '+this.name);if(n<r||n>a)throw new TypeError('Passing a number "'+ke(n)+'" from JS side to C/C++ side to an argument of type "'+t+'", which is outside the valid range ['+r+", "+a+"]!");return u?n>>>0:0|n},argPackAdvance:8,readValueFromPointer:Ce(t,s,0!==r),destructorFunction:null})},a:function(e,t,n){var r=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array][t];function a(e){var t=N,n=t[e>>=2],a=t[e+1];return new r(x,a,n)}ye(e,{name:n=fe(n),fromWireType:a,argPackAdvance:8,readValueFromPointer:a},{ignoreDuplicateRegistrations:!0})},k:function(e,t){var n="std::string"===(t=fe(t));ye(e,{name:t,fromWireType:function(e){var t,r=N[e>>2];if(n)for(var a=e+4,s=0;s<=r;++s){var i=e+4+s;if(s==r||0==v[i]){var o=g(a,i-a);void 0===t?t=o:(t+=String.fromCharCode(0),t+=o),a=i+1}}else{var u=new Array(r);for(s=0;s<r;++s)u[s]=String.fromCharCode(v[e+4+s]);t=u.join("")}return We(e),t},toWireType:function(e,t){t instanceof ArrayBuffer&&(t=new Uint8Array(t));var r="string"==typeof t;r||t instanceof Uint8Array||t instanceof Uint8ClampedArray||t instanceof Int8Array||ge("Cannot pass non-string to std::string");var a=(n&&r?function(){return b(t)}:function(){return t.length})(),s=Be(4+a+1);if(N[s>>2]=a,n&&r)y(t,v,s+4,a+1);else if(r)for(var i=0;i<a;++i){var o=t.charCodeAt(i);o>255&&(We(s),ge("String has UTF-16 code units that do not fit in 8 bits")),v[s+4+i]=o}else for(i=0;i<a;++i)v[s+4+i]=t[i];return null!==e&&e.push(We,s),s},argPackAdvance:8,readValueFromPointer:ne,destructorFunction:function(e){We(e)}})},g:function(e,t,n){var r,a,s,i,o;n=fe(n),2===t?(r=E,a=_,i=A,s=function(){return I},o=1):4===t&&(r=R,a=F,i=D,s=function(){return N},o=2),ye(e,{name:n,fromWireType:function(e){for(var n,a=N[e>>2],i=s(),u=e+4,l=0;l<=a;++l){var c=e+4+l*t;if(l==a||0==i[c>>o]){var d=r(u,c-u);void 0===n?n=d:(n+=String.fromCharCode(0),n+=d),u=c+t}}return We(e),n},toWireType:function(e,r){"string"!=typeof r&&ge("Cannot pass non-string to C++ string type "+n);var s=i(r),u=Be(4+s+t);return N[u>>2]=s>>o,a(r,u+4,s+t),null!==e&&e.push(We,u),u},argPackAdvance:8,readValueFromPointer:ne,destructorFunction:function(e){We(e)}})},v:function(e,t,n,r,a,s){ee[e]={name:fe(t),rawConstructor:Se(n,r),rawDestructor:Se(a,s),fields:[]}},d:function(e,t,n,r,a,s,i,o,u,l){ee[e].fields.push({fieldName:fe(t),getterReturnType:n,getter:Se(r,a),getterContext:s,setterArgumentType:i,setter:Se(o,u),setterContext:l})},m:function(e,t){ye(e,{isVoid:!0,name:t=fe(t),argPackAdvance:0,fromWireType:function(){},toWireType:function(e,t){}})},n:we,o:function(e){e>4&&(xe[e].refcount+=1)},B:function(e,t){var n,r;return void 0===(r=ae[n=e])&&ge("_emval_take_value has unknown type "+Te(n)),ve((e=r).readValueFromPointer(t))},i:function(){q()},r:function(e,t,n){v.copyWithin(e,t,t+n)},c:function(e){var t=v.length,n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),$e(Math.min(n,M(Math.max(e,a),65536))))return!0}return!1},t:function(e,t){var n=0;return _e().forEach(function(r,a){var s=t+n;S[e+4*a>>2]=s,function(e,t){for(var n=0;n<e.length;++n)w[0|t++]=e.charCodeAt(n);w[0|t]=0}(r,s),n+=r.length+1}),0},u:function(e,t){var n=_e();S[e>>2]=n.length;var r=0;return n.forEach(function(e){r+=e.length+1}),S[t>>2]=r,0},y:function(e){return 0},w:function(e,t,n,r){var a=Ae.getStreamFromFD(e),s=Ae.doReadv(a,t,n);return S[r>>2]=s,0},q:function(e,t,n,r,a){},x:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=S[t+8*s>>2],o=S[t+(8*s+4)>>2],u=0;u<o;u++)Ae.printChar(e,v[i+u]);a+=o}return S[r>>2]=a,0},h:function(e){},s:function(e,t,n,r){return function(e,t,n,r){var a=S[r+40>>2],s={tm_sec:S[r>>2],tm_min:S[r+4>>2],tm_hour:S[r+8>>2],tm_mday:S[r+12>>2],tm_mon:S[r+16>>2],tm_year:S[r+20>>2],tm_wday:S[r+24>>2],tm_yday:S[r+28>>2],tm_isdst:S[r+32>>2],tm_gmtoff:S[r+36>>2],tm_zone:a?g(a):""},i=g(n),o={"%c":"%a %b %d %H:%M:%S %Y","%D":"%m/%d/%y","%F":"%Y-%m-%d","%h":"%b","%r":"%I:%M:%S %p","%R":"%H:%M","%T":"%H:%M:%S","%x":"%m/%d/%y","%X":"%H:%M:%S","%Ec":"%c","%EC":"%C","%Ex":"%m/%d/%y","%EX":"%H:%M:%S","%Ey":"%y","%EY":"%Y","%Od":"%d","%Oe":"%e","%OH":"%H","%OI":"%I","%Om":"%m","%OM":"%M","%OS":"%S","%Ou":"%u","%OU":"%U","%OV":"%V","%Ow":"%w","%OW":"%W","%Oy":"%y"};for(var u in o)i=i.replace(new RegExp(u,"g"),o[u]);var l=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],c=["January","February","March","April","May","June","July","August","September","October","November","December"];function d(e,t,n){for(var r="number"==typeof e?e.toString():e||"";r.length<t;)r=n[0]+r;return r}function h(e,t){return d(e,t,"0")}function p(e,t){function n(e){return e<0?-1:e>0?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function f(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function m(e){var t=Oe(new Date(e.tm_year+1900,0,1),e.tm_yday),n=new Date(t.getFullYear(),0,4),r=new Date(t.getFullYear()+1,0,4),a=f(n),s=f(r);return p(a,t)<=0?p(s,t)<=0?t.getFullYear()+1:t.getFullYear():t.getFullYear()-1}var x={"%a":function(e){return l[e.tm_wday].substring(0,3)},"%A":function(e){return l[e.tm_wday]},"%b":function(e){return c[e.tm_mon].substring(0,3)},"%B":function(e){return c[e.tm_mon]},"%C":function(e){return h((e.tm_year+1900)/100|0,2)},"%d":function(e){return h(e.tm_mday,2)},"%e":function(e){return d(e.tm_mday,2," ")},"%g":function(e){return m(e).toString().substring(2)},"%G":function(e){return m(e)},"%H":function(e){return h(e.tm_hour,2)},"%I":function(e){var t=e.tm_hour;return 0==t?t=12:t>12&&(t-=12),h(t,2)},"%j":function(e){return h(e.tm_mday+Fe(Re(e.tm_year+1900)?De:Me,e.tm_mon-1),3)},"%m":function(e){return h(e.tm_mon+1,2)},"%M":function(e){return h(e.tm_min,2)},"%n":function(){return"\n"},"%p":function(e){return e.tm_hour>=0&&e.tm_hour<12?"AM":"PM"},"%S":function(e){return h(e.tm_sec,2)},"%t":function(){return"\t"},"%u":function(e){return e.tm_wday||7},"%U":function(e){var t=new Date(e.tm_year+1900,0,1),n=0===t.getDay()?t:Oe(t,7-t.getDay()),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(p(n,r)<0){var a=Fe(Re(r.getFullYear())?De:Me,r.getMonth()-1)-31,s=31-n.getDate()+a+r.getDate();return h(Math.ceil(s/7),2)}return 0===p(n,t)?"01":"00"},"%V":function(e){var t,n=new Date(e.tm_year+1900,0,4),r=new Date(e.tm_year+1901,0,4),a=f(n),s=f(r),i=Oe(new Date(e.tm_year+1900,0,1),e.tm_yday);return p(i,a)<0?"53":p(s,i)<=0?"01":(t=a.getFullYear()<e.tm_year+1900?e.tm_yday+32-a.getDate():e.tm_yday+1-a.getDate(),h(Math.ceil(t/7),2))},"%w":function(e){return e.tm_wday},"%W":function(e){var t=new Date(e.tm_year,0,1),n=1===t.getDay()?t:Oe(t,0===t.getDay()?1:7-t.getDay()+1),r=new Date(e.tm_year+1900,e.tm_mon,e.tm_mday);if(p(n,r)<0){var a=Fe(Re(r.getFullYear())?De:Me,r.getMonth()-1)-31,s=31-n.getDate()+a+r.getDate();return h(Math.ceil(s/7),2)}return 0===p(n,t)?"01":"00"},"%y":function(e){return(e.tm_year+1900).toString().substring(2)},"%Y":function(e){return e.tm_year+1900},"%z":function(e){var t=e.tm_gmtoff,n=t>=0;return t=(t=Math.abs(t)/60)/60*100+t%60,(n?"+":"-")+String("0000"+t).slice(-4)},"%Z":function(e){return e.tm_zone},"%%":function(){return"%"}};for(var u in x)i.indexOf(u)>=0&&(i=i.replace(new RegExp(u,"g"),x[u](s)));var v,k,I,N=(k=b(v=i)+1,y(v,I=new Array(k),0,I.length),I);return N.length>t?0:(function(e,t){w.set(e,t)}(N,e),N.length-1)}(e,t,n,r)}},Pe=(function(){var t={a:ze};function n(t,n){var r=t.exports;e.asm=r,O((c=e.asm.C).buffer),L=e.asm.E,function(){if(G--,e.monitorRunDependencies&&e.monitorRunDependencies(G),0==G&&(null!==H&&(clearInterval(H),H=null),j)){var t=j;j=null,t()}}()}function a(e){n(e.instance)}function s(e){return(l||"function"!=typeof fetch?Promise.resolve().then(function(){return Z(Y)}):fetch(Y,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Y+"'";return e.arrayBuffer()}).catch(function(){return Z(Y)})).then(function(e){return WebAssembly.instantiate(e,t)}).then(e,function(e){h("failed to asynchronously prepare wasm: "+e),q(e)})}if(G++,e.monitorRunDependencies&&e.monitorRunDependencies(G),e.instantiateWasm)try{return e.instantiateWasm(t,n)}catch(e){return h("Module.instantiateWasm callback failed with error: "+e),!1}(l||"function"!=typeof WebAssembly.instantiateStreaming||K(Y)||"function"!=typeof fetch?s(a):fetch(Y,{credentials:"same-origin"}).then(function(e){return WebAssembly.instantiateStreaming(e,t).then(a,function(e){return h("wasm streaming compile failed: "+e),h("falling back to ArrayBuffer instantiation"),s(a)})})).catch(r)}(),e.___wasm_call_ctors=function(){return(Pe=e.___wasm_call_ctors=e.asm.D).apply(null,arguments)}),Be=e._malloc=function(){return(Be=e._malloc=e.asm.F).apply(null,arguments)},We=e._free=function(){return(We=e._free=e.asm.G).apply(null,arguments)},Ve=e.___getTypeName=function(){return(Ve=e.___getTypeName=e.asm.H).apply(null,arguments)};function Ue(t){function r(){Le||(Le=!0,e.calledRun=!0,p||(J(P),J(B),n(e),e.onRuntimeInitialized&&e.onRuntimeInitialized(),function(){if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;)U(e.postRun.shift());J(W)}()))}t=t||i,G>0||(function(){if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)V(e.preRun.shift());J(z)}(),G>0||(e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},1),r()},1)):r()))}if(e.___embind_register_native_and_builtin_types=function(){return(e.___embind_register_native_and_builtin_types=e.asm.I).apply(null,arguments)},e.dynCall_ji=function(){return(e.dynCall_ji=e.asm.J).apply(null,arguments)},e.dynCall_viijii=function(){return(e.dynCall_viijii=e.asm.K).apply(null,arguments)},e.dynCall_jiji=function(){return(e.dynCall_jiji=e.asm.L).apply(null,arguments)},e.dynCall_iiiiiijj=function(){return(e.dynCall_iiiiiijj=e.asm.M).apply(null,arguments)},e.dynCall_iiiiij=function(){return(e.dynCall_iiiiij=e.asm.N).apply(null,arguments)},e.dynCall_iiiiijj=function(){return(e.dynCall_iiiiijj=e.asm.O).apply(null,arguments)},j=function e(){Le||Ue(),Le||(j=e)},e.run=Ue,e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);e.preInit.length>0;)e.preInit.pop()();return Ue(),e.ready});e.exports=n},417:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){function t(){return R.buffer!=M&&K(R.buffer),O}function a(){return R.buffer!=M&&K(R.buffer),L}function s(){return R.buffer!=M&&K(R.buffer),z}function i(){return R.buffer!=M&&K(R.buffer),P}function o(){return R.buffer!=M&&K(R.buffer),B}var u,l,c=void 0!==(e=e||{})?e:{};c.ready=new Promise(function(e,t){u=e,l=t});var d,h={};for(d in c)c.hasOwnProperty(d)&&(h[d]=c[d]);var p,f,m,g,y=[],b=function(e,t){throw t};p="object"==typeof window,f="function"==typeof importScripts,m="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,g=!p&&!m&&!f;var x=c.ENVIRONMENT_IS_PTHREAD||!1;x&&(M=c.buffer);var w,v,k,I,S,N="";function T(e){return c.locateFile?c.locateFile(e,N):N+e}if(m){var C;N=f?n(281).dirname(N)+"/":"//",w=function(e,t){return I||(I=n(893)),S||(S=n(281)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),y=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ht))throw e}),process.on("unhandledRejection",ue),b=function(e){process.exit(e)},c.inspect=function(){return"[Emscripten Module object]"};try{C=n(556)}catch(e){throw console.error('The "worker_threads" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=C.Worker}else g?("undefined"!=typeof read&&(w=function(e){return read(e)}),k=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(V("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?y=scriptArgs:void 0!==arguments&&(y=arguments),"function"==typeof quit&&(b=function(e){quit(e)}),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(p||f)&&(f?N=self.location.href:"undefined"!=typeof document&&document.currentScript&&(N=document.currentScript.src),void 0!==r&&r&&(N=r),N=0!==N.indexOf("blob:")?N.substr(0,N.lastIndexOf("/")+1):"",m?(w=function(e,t){return I||(I=n(893)),S||(S=n(281)),e=S.normalize(e),I.readFileSync(e,t?null:"utf8")},k=function(e){var t=w(e,!0);return t.buffer||(t=new Uint8Array(t)),V(t.buffer),t}):(w=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},f&&(k=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),v=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));m&&"undefined"==typeof performance&&(n.g.performance=n(244).performance);var $,E=c.print||console.log.bind(console),_=c.printErr||console.warn.bind(console);for(d in h)h.hasOwnProperty(d)&&(c[d]=h[d]);function A(e){A.shown||(A.shown={}),A.shown[e]||(A.shown[e]=1,_(e))}h=null,c.arguments&&(y=c.arguments),c.thisProgram&&c.thisProgram,c.quit&&(b=c.quit),Atomics.load,Atomics.store,Atomics.compareExchange,c.wasmBinary&&($=c.wasmBinary);var R,F,D=c.noExitRuntime||!0;"object"!=typeof WebAssembly&&ue("no native wasm support detected");var M,O,L,z,P,B,W=!1;function V(e,t){e||ue("Assertion failed: "+t)}function U(e){var t=c["_"+e];return V(t,"Cannot call unknown function "+e+", make sure it is exported"),t}function G(e,t,n){for(var r=t+n,a="";!(t>=r);){var s=e[t++];if(!s)return a;if(128&s){var i=63&e[t++];if(192!=(224&s)){var o=63&e[t++];if((s=224==(240&s)?(15&s)<<12|i<<6|o:(7&s)<<18|i<<12|o<<6|63&e[t++])<65536)a+=String.fromCharCode(s);else{var u=s-65536;a+=String.fromCharCode(55296|u>>10,56320|1023&u)}}else a+=String.fromCharCode((31&s)<<6|i)}else a+=String.fromCharCode(s)}return a}function H(e,t){return e?G(a(),e,t):""}function j(e,t,n){return function(e,t,n,r){if(!(r>0))return 0;for(var a=n,s=n+r-1,i=0;i<e.length;++i){var o=e.charCodeAt(i);if(o>=55296&&o<=57343&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++i)),o<=127){if(n>=s)break;t[n++]=o}else if(o<=2047){if(n+1>=s)break;t[n++]=192|o>>6,t[n++]=128|63&o}else if(o<=65535){if(n+2>=s)break;t[n++]=224|o>>12,t[n++]=128|o>>6&63,t[n++]=128|63&o}else{if(n+3>=s)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63,t[n++]=128|o>>6&63,t[n++]=128|63&o}}return t[n]=0,n-a}(e,a(),t,n)}function q(e,t){return e%t>0&&(e+=t-e%t),e}function K(e){M=e,c.HEAP8=O=new Int8Array(e),c.HEAP16=new Int16Array(e),c.HEAP32=z=new Int32Array(e),c.HEAPU8=L=new Uint8Array(e),c.HEAPU16=new Uint16Array(e),c.HEAPU32=P=new Uint32Array(e),c.HEAPF32=new Float32Array(e),c.HEAPF64=B=new Float64Array(e)}var X,Y=c.INITIAL_MEMORY||16777216;if(x)R=c.wasmMemory,M=c.buffer;else if(c.wasmMemory)R=c.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:Y/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw _("requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag"),m&&console.log("(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)"),Error("bad memory");R&&(M=R.buffer),Y=M.byteLength,K(M);var Z=[],J=[],Q=[],ee=[],te=[];function ne(){x||me(J)}function re(e){Z.unshift(e)}function ae(e){te.unshift(e)}x||J.push({func:function(){Ge()}});var se=0,ie=null,oe=null;function ue(e){c.onAbort&&c.onAbort(e),x&&console.error("Pthread aborting at "+(new Error).stack),_(e+=""),W=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw l(t),t}function le(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function ce(e){return le(e,"data:application/octet-stream;base64,")}function de(e){return le(e,"file://")}c.preloadedImages={},c.preloadedAudios={};var he="tfjs-backend-wasm-threaded-simd.wasm";function pe(e){try{if(e==he&&$)return new Uint8Array($);if(k)return k(e);throw"both async and sync fetching of the wasm failed"}catch(e){ue(e)}}ce(he)||(he=T(he));var fe={10520:function(){throw"Canceled!"},10538:function(e,t){setTimeout(function(){et(e,t)},0)}};function me(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?X.get(n)():X.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(c)}}function ge(e,n){if(e<=0||e>t().length||!0&e||n<0)return-28;if(0==n)return 0;n>=2147483647&&(n=1/0);var r=Atomics.load(s(),dt>>2),a=0;if(r==e&&Atomics.compareExchange(s(),dt>>2,r,0)==r&&(a=1,--n<=0))return 1;var i=Atomics.notify(s(),e>>2,n);if(i>=0)return i+a;throw"Atomics.notify returned an unexpected value "+i}function ye(e){if(x)throw"Internal Error! cleanupThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cleanupThread!";var t=xe.pthreads[e];if(t){s()[e+12>>2]=0;var n=t.worker;xe.returnWorkerToPool(n)}}c._emscripten_futex_wake=ge;var be,xe={unusedWorkers:[],runningWorkers:[],initMainThreadBlock:function(){for(var e=0;e<8;++e)xe.allocateUnusedWorker()},initRuntime:function(){for(var e=He(228),t=0;t<57;++t)i()[e/4+t]=0;s()[e+12>>2]=e;var n=e+152;s()[n>>2]=n;var r=He(512);for(t=0;t<128;++t)i()[r/4+t]=0;Atomics.store(i(),e+100>>2,r),Atomics.store(i(),e+40>>2,e),at(e,!f,1),Je(e)},initWorker:function(){},pthreads:{},threadExitHandlers:[],setThreadStatus:function(){},runExitHandlers:function(){for(;xe.threadExitHandlers.length>0;)xe.threadExitHandlers.pop()();x&&Xe()&&Ye()},runExitHandlersAndDeinitThread:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),xe.runExitHandlers(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),ge(e+0,2147483647),at(0,0,0)},threadExit:function(e){var t=Xe();t&&(xe.runExitHandlersAndDeinitThread(t,e),x&&postMessage({cmd:"exit"}))},threadCancel:function(){xe.runExitHandlersAndDeinitThread(Xe(),-1),postMessage({cmd:"cancelDone"})},terminateAllThreads:function(){for(var e in xe.pthreads)(r=xe.pthreads[e])&&r.worker&&xe.returnWorkerToPool(r.worker);xe.pthreads={};for(var t=0;t<xe.unusedWorkers.length;++t)(n=xe.unusedWorkers[t]).terminate();for(xe.unusedWorkers=[],t=0;t<xe.runningWorkers.length;++t){var n,r=(n=xe.runningWorkers[t]).pthread;xe.freeThreadData(r),n.terminate()}xe.runningWorkers=[]},freeThreadData:function(e){if(e){if(e.threadInfoStruct){var t=s()[e.threadInfoStruct+100>>2];s()[e.threadInfoStruct+100>>2]=0,je(t),je(e.threadInfoStruct)}e.threadInfoStruct=0,e.allocatedOwnStack&&e.stackBase&&je(e.stackBase),e.stackBase=0,e.worker&&(e.worker.pthread=null)}},returnWorkerToPool:function(e){xe.runWithoutMainThreadQueuedCalls(function(){delete xe.pthreads[e.pthread.threadInfoStruct],xe.unusedWorkers.push(e),xe.runningWorkers.splice(xe.runningWorkers.indexOf(e),1),xe.freeThreadData(e.pthread),e.pthread=void 0})},runWithoutMainThreadQueuedCalls:function(e){s()[ct>>2]=0;try{e()}finally{s()[ct>>2]=1}},receiveObjectTransfer:function(e){},loadWasmModuleToWorker:function(e,t){e.onmessage=function(n){var r=n.data,a=r.cmd;if(e.pthread&&(xe.currentProxiedOperationCallerThread=e.pthread.threadInfoStruct),r.targetThread&&r.targetThread!=Xe()){var o=xe.pthreads[r.targetThread];return o?o.worker.postMessage(n.data,r.transferList):console.error('Internal error! Worker sent a message "'+a+'" to target pthread '+r.targetThread+", but that thread no longer exists!"),void(xe.currentProxiedOperationCallerThread=void 0)}if("processQueuedMainThreadWork"===a)Ze();else if("spawnThread"===a)Le(n.data);else if("cleanupThread"===a)ye(r.thread);else if("killThread"===a)!function(e){if(x)throw"Internal Error! killThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in killThread!";s()[e+12>>2]=0;var t=xe.pthreads[e];t.worker.terminate(),xe.freeThreadData(t),xe.runningWorkers.splice(xe.runningWorkers.indexOf(t.worker),1),t.worker.pthread=void 0}(r.thread);else if("cancelThread"===a)!function(e){if(x)throw"Internal Error! cancelThread() can only ever be called from main application thread!";if(!e)throw"Internal Error! Null pthread_ptr in cancelThread!";xe.pthreads[e].worker.postMessage({cmd:"cancel"})}(r.thread);else if("loaded"===a)e.loaded=!0,t&&t(e),e.runPthread&&(e.runPthread(),delete e.runPthread);else if("print"===a)E("Thread "+r.threadId+": "+r.text);else if("printErr"===a)_("Thread "+r.threadId+": "+r.text);else if("alert"===a)alert("Thread "+r.threadId+": "+r.text);else if("exit"===a)e.pthread&&Atomics.load(i(),e.pthread.threadInfoStruct+64>>2)&&xe.returnWorkerToPool(e);else if("exitProcess"===a)try{!function(e){if(x)throw postMessage({cmd:"exitProcess",returnCode:e}),new ht(e);D||(xe.terminateAllThreads(),c.onExit&&c.onExit(e),W=!0),b(e,new ht(e))}(r.returnCode)}catch(n){if(n instanceof ht)return;throw n}else"cancelDone"===a?xe.returnWorkerToPool(e):"objectTransfer"===a?xe.receiveObjectTransfer(n.data):"setimmediate"===n.data.target?e.postMessage(n.data):_("worker sent an unknown command "+a);xe.currentProxiedOperationCallerThread=void 0},e.onerror=function(e){_("pthread sent an error! "+e.filename+":"+e.lineno+": "+e.message)},m&&(e.on("message",function(t){e.onmessage({data:t})}),e.on("error",function(t){e.onerror(t)}),e.on("exit",function(e){})),e.postMessage({cmd:"load",urlOrBlob:c.mainScriptUrlOrBlob||r,wasmMemory:R,wasmModule:F})},allocateUnusedWorker:function(){var e=T("tfjs-backend-wasm-threaded-simd.worker.js");xe.unusedWorkers.push(new Worker(e))},getNewWorker:function(){return 0==xe.unusedWorkers.length&&(xe.allocateUnusedWorker(),xe.loadWasmModuleToWorker(xe.unusedWorkers[0])),xe.unusedWorkers.length>0?xe.unusedWorkers.pop():null},busySpinWait:function(e){for(var t=performance.now()+e;performance.now()<t;);}};function we(e,n,r){if(e<=0||e>t().length||!0&e)return-28;if(p){if(Atomics.load(s(),e>>2)!=n)return-6;var a=performance.now(),i=a+r;for(Atomics.exchange(s(),dt>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(s(),dt>>2,0),-73;if(0==Atomics.exchange(s(),dt>>2,0))break;if(Ze(),Atomics.load(s(),e>>2)!=n)return-6;Atomics.exchange(s(),dt>>2,e)}return 0}var o=Atomics.wait(s(),e>>2,n,r);if("timed-out"===o)return-73;if("not-equal"===o)return-6;if("ok"===o)return 0;throw"Atomics.wait returned an unexpected value "+o}function ve(e,t){for(var n=arguments.length-2,r=st(),a=n,s=ot(8*a),i=s>>3,u=0;u<n;u++){var l=arguments[2+u];o()[i+u]=l}var c=nt(e,a,s,t);return it(r),c}c.establishStackSpace=function(e,t){ut(e,t),it(e)},c.getNoExitRuntime=function(){return D},c.invokeEntryPoint=function(e,t){return X.get(e)(t)},be=m?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:x?function(){return performance.now()-c.__performance_now_clock_drift}:"undefined"!=typeof dateNow?dateNow:function(){return performance.now()};var ke=[],Ie=[];function Se(e){try{return R.grow(e-M.byteLength+65535>>>16),K(R.buffer),1}catch(e){}}var Ne={inEventHandler:0,removeAllEventListeners:function(){for(var e=Ne.eventHandlers.length-1;e>=0;--e)Ne._removeHandler(e);Ne.eventHandlers=[],Ne.deferredCalls=[]},registerRemoveEventListeners:function(){Ne.removeEventListenersRegistered||(ee.push(Ne.removeAllEventListeners),Ne.removeEventListenersRegistered=!0)},deferredCalls:[],deferCall:function(e,t,n){function r(e,t){if(e.length!=t.length)return!1;for(var n in e)if(e[n]!=t[n])return!1;return!0}for(var a in Ne.deferredCalls){var s=Ne.deferredCalls[a];if(s.targetFunction==e&&r(s.argsList,n))return}Ne.deferredCalls.push({targetFunction:e,precedence:t,argsList:n}),Ne.deferredCalls.sort(function(e,t){return e.precedence<t.precedence})},removeDeferredCalls:function(e){for(var t=0;t<Ne.deferredCalls.length;++t)Ne.deferredCalls[t].targetFunction==e&&(Ne.deferredCalls.splice(t,1),--t)},canPerformEventHandlerRequests:function(){return Ne.inEventHandler&&Ne.currentEventHandler.allowsDeferredCalls},runDeferredCalls:function(){if(Ne.canPerformEventHandlerRequests())for(var e=0;e<Ne.deferredCalls.length;++e){var t=Ne.deferredCalls[e];Ne.deferredCalls.splice(e,1),--e,t.targetFunction.apply(null,t.argsList)}},eventHandlers:[],removeAllHandlersOnTarget:function(e,t){for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target!=e||t&&t!=Ne.eventHandlers[n].eventTypeString||Ne._removeHandler(n--)},_removeHandler:function(e){var t=Ne.eventHandlers[e];t.target.removeEventListener(t.eventTypeString,t.eventListenerFunc,t.useCapture),Ne.eventHandlers.splice(e,1)},registerOrRemoveHandler:function(e){var t=function(t){++Ne.inEventHandler,Ne.currentEventHandler=e,Ne.runDeferredCalls(),e.handlerFunc(t),Ne.runDeferredCalls(),--Ne.inEventHandler};if(e.callbackfunc)e.eventListenerFunc=t,e.target.addEventListener(e.eventTypeString,t,e.useCapture),Ne.eventHandlers.push(e),Ne.registerRemoveEventListeners();else for(var n=0;n<Ne.eventHandlers.length;++n)Ne.eventHandlers[n].target==e.target&&Ne.eventHandlers[n].eventTypeString==e.eventTypeString&&Ne._removeHandler(n--)},queueEventHandlerOnThread_iiii:function(e,t,n,r,a){var i=st(),o=ot(12);s()[o>>2]=n,s()[o+4>>2]=r,s()[o+8>>2]=a,rt(0,e,637534208,t,r,o),it(i)},getTargetThreadForEventCallback:function(e){switch(e){case 1:return 0;case 2:return xe.currentProxiedOperationCallerThread;default:return e}},getNodeNameForTarget:function(e){return e?e==window?"#window":e==screen?"#screen":e&&e.nodeName?e.nodeName:"":""},fullscreenEnabled:function(){return document.fullscreenEnabled||document.webkitFullscreenEnabled}};var Te=[0,"undefined"!=typeof document?document:0,"undefined"!=typeof window?window:0];function Ce(e){return function(e){var t;return e=(t=e)>2?H(t):t,Te[e]||("undefined"!=typeof document?document.querySelector(e):void 0)}(e)}function $e(e,t,n){var r=Ce(e);if(!r)return-4;if(r.canvasSharedPtr&&(s()[r.canvasSharedPtr>>2]=t,s()[r.canvasSharedPtr+4>>2]=n),!r.offscreenCanvas&&r.controlTransferredOffscreen)return r.canvasSharedPtr?(function(e,t,n,r){!function(e,t,n,r){var a,i,o,u=st(),l=ot(12),c=0;t&&(i=function(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);r>=55296&&r<=57343&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),r<=127?++t:t+=r<=2047?2:r<=65535?3:4}return t}(a=t)+1,j(a,o=He(i),i),c=o),s()[l>>2]=c,s()[l+4>>2]=n,s()[l+8>>2]=r,rt(0,e,657457152,0,c,l),it(u)}(e,t=t?H(t):"",n,r)}(s()[r.canvasSharedPtr+8>>2],e,t,n),1):-4;r.offscreenCanvas&&(r=r.offscreenCanvas);var a=!1;if(r.GLctxObject&&r.GLctxObject.GLctx){var i=r.GLctxObject.GLctx.getParameter(2978);a=0===i[0]&&0===i[1]&&i[2]===r.width&&i[3]===r.height}return r.width=t,r.height=n,a&&r.GLctxObject.GLctx.viewport(0,0,t,n),0}function Ee(e,t,n){return x?ve(2,1,e,t,n):$e(e,t,n)}var _e,Ae={counter:1,buffers:[],programs:[],framebuffers:[],renderbuffers:[],textures:[],uniforms:[],shaders:[],vaos:[],contexts:{},offscreenCanvases:{},timerQueriesEXT:[],programInfos:{},stringCache:{},unpackAlignment:4,recordError:function(e){Ae.lastError||(Ae.lastError=e)},getNewId:function(e){for(var t=Ae.counter++,n=e.length;n<t;n++)e[n]=null;return t},getSource:function(e,t,n,r){for(var a="",i=0;i<t;++i){var o=r?s()[r+4*i>>2]:-1;a+=H(s()[n+4*i>>2],o<0?void 0:o)}return a},createContext:function(e,t){var n=e.getContext("webgl",t);return n?Ae.registerContext(n,t):0},registerContext:function(e,t){var n=He(8);s()[n+4>>2]=Xe();var r={handle:n,attributes:t,version:t.majorVersion,GLctx:e};return e.canvas&&(e.canvas.GLctxObject=r),Ae.contexts[n]=r,(void 0===t.enableExtensionsByDefault||t.enableExtensionsByDefault)&&Ae.initExtensions(r),n},makeContextCurrent:function(e){return Ae.currentContext=Ae.contexts[e],c.ctx=_e=Ae.currentContext&&Ae.currentContext.GLctx,!(e&&!_e)},getContext:function(e){return Ae.contexts[e]},deleteContext:function(e){Ae.currentContext===Ae.contexts[e]&&(Ae.currentContext=null),"object"==typeof Ne&&Ne.removeAllHandlersOnTarget(Ae.contexts[e].GLctx.canvas),Ae.contexts[e]&&Ae.contexts[e].GLctx.canvas&&(Ae.contexts[e].GLctx.canvas.GLctxObject=void 0),je(Ae.contexts[e].handle),Ae.contexts[e]=null},initExtensions:function(e){if(e||(e=Ae.currentContext),!e.initExtensionsDone){e.initExtensionsDone=!0;var t,n=e.GLctx;!function(e){var t=e.getExtension("ANGLE_instanced_arrays");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,a){t.drawArraysInstancedANGLE(e,n,r,a)},e.drawElementsInstanced=function(e,n,r,a,s){t.drawElementsInstancedANGLE(e,n,r,a,s)})}(n),function(e){var t=e.getExtension("OES_vertex_array_object");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(n),function(e){var t=e.getExtension("WEBGL_draw_buffers");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(n),n.disjointTimerQueryExt=n.getExtension("EXT_disjoint_timer_query"),(t=n).multiDrawWebgl=t.getExtension("WEBGL_multi_draw"),(n.getSupportedExtensions()||[]).forEach(function(e){e.indexOf("lose_context")<0&&e.indexOf("debug")<0&&n.getExtension(e)})}},populateUniformTable:function(e){for(var t=Ae.programs[e],n=Ae.programInfos[e]={uniforms:{},maxUniformLength:0,maxAttributeLength:-1,maxUniformBlockNameLength:-1},r=n.uniforms,a=_e.getProgramParameter(t,35718),s=0;s<a;++s){var i=_e.getActiveUniform(t,s),o=i.name;n.maxUniformLength=Math.max(n.maxUniformLength,o.length+1),"]"==o.slice(-1)&&(o=o.slice(0,o.lastIndexOf("[")));var u=_e.getUniformLocation(t,o);if(u){var l=Ae.getNewId(Ae.uniforms);r[o]=[i.size,l],Ae.uniforms[l]=u;for(var c=1;c<i.size;++c){var d=o+"["+c+"]";u=_e.getUniformLocation(t,d),l=Ae.getNewId(Ae.uniforms),Ae.uniforms[l]=u}}}}},Re=["default","low-power","high-performance"],Fe={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=Fe.buffers[e];0===t||10===t?((1===e?E:_)(G(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return Fe.varargs+=4,s()[Fe.varargs-4>>2]},getStr:function(e){return H(e)},get64:function(e,t){return e}};function De(e){return x?ve(3,1,e):0}function Me(e,t,n,r,a){if(x)return ve(4,1,e,t,n,r,a)}function Oe(e,t,n,r){if(x)return ve(5,1,e,t,n,r);for(var i=0,o=0;o<n;o++){for(var u=s()[t+8*o>>2],l=s()[t+(8*o+4)>>2],c=0;c<l;c++)Fe.printChar(e,a()[u+c]);i+=l}return s()[r>>2]=i,0}function Le(e){if(x)throw"Internal Error! spawnThread() can only ever be called from main application thread!";var t=xe.getNewWorker();if(void 0!==t.pthread)throw"Internal error!";if(!e.pthread_ptr)throw"Internal error, no pthread ptr!";xe.runningWorkers.push(t);for(var n=He(512),r=0;r<128;++r)s()[n+4*r>>2]=0;var a=e.stackBase+e.stackSize,o=xe.pthreads[e.pthread_ptr]={worker:t,stackBase:e.stackBase,stackSize:e.stackSize,allocatedOwnStack:e.allocatedOwnStack,threadInfoStruct:e.pthread_ptr},u=o.threadInfoStruct>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,o.threadInfoStruct),Atomics.store(i(),u+20,e.stackSize),Atomics.store(i(),u+19,a),Atomics.store(i(),u+26,e.stackSize),Atomics.store(i(),u+28,a),Atomics.store(i(),u+29,e.detached);var l=Ke()+40;Atomics.store(i(),u+43,l),t.pthread=o;var c={cmd:"run",start_routine:e.startRoutine,arg:e.arg,threadInfoStruct:e.pthread_ptr,stackBase:e.stackBase,stackSize:e.stackSize};t.runPthread=function(){c.time=performance.now(),t.postMessage(c,e.transferList)},t.loaded&&(t.runPthread(),delete t.runPthread)}function ze(){if(x){var e=Xe();if(e&&!Atomics.load(i(),e+56>>2)&&2==Atomics.load(i(),e+0>>2))throw"Canceled!"}}function Pe(){m||f||A("Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread")}function Be(e){if(x)return ve(6,1,e);switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return s()[qe()>>2]=28,-1}x||xe.initMainThreadBlock();var We,Ve=[null,function(e,t){if(x)return ve(1,1,e,t)},Ee,De,Me,Oe,Be],Ue={e:function(e,t,n,r){ue("Assertion failed: "+H(e)+", at: "+[t?H(t):"unknown filename",n,r?H(r):"unknown function"])},r:function(e,t){_main(e,t)},x:function(e,t){if(e==t)postMessage({cmd:"processQueuedMainThreadWork"});else if(x)postMessage({targetThread:e,cmd:"processThreadQueue"});else{var n=xe.pthreads[e],r=n&&n.worker;if(!r)return;r.postMessage({cmd:"processThreadQueue"})}return 1},b:function(){ue()},y:function(e,t,n){var r=function(e,t){var n;for(Ie.length=0,t>>=2;n=a()[e++];){var r=n<105;r&&1&t&&t++,Ie.push(r?o()[t++>>1]:s()[t]),++t}return Ie}(t,n);return fe[e].apply(null,r)},j:function(e,t){},d:we,c:ge,f:be,p:function(e,t,n){a().copyWithin(e,t,t+n)},A:function(){return m?n(74).cpus().length:navigator.hardwareConcurrency},u:function(e,t,n){ke.length=t;for(var r=n>>3,a=0;a<t;a++)ke[a]=o()[r+a];return(e<0?fe[-e-1]:Ve[e]).apply(null,ke)},q:function(e){var t=a().length;if(e<=t)return!1;var n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var s=t*(1+.2/r);if(s=Math.min(s,e+100663296),Se(Math.min(n,q(Math.max(e,s),65536))))return!0}return!1},v:function(e,t,n){return Ce(e)?$e(e,t,n):Ee(e,t,n)},i:function(e){},s:function(e,t){},w:function(e,t){return n=e,r=t>>2,a=s()[r+6],i={alpha:!!s()[r+0],depth:!!s()[r+1],stencil:!!s()[r+2],antialias:!!s()[r+3],premultipliedAlpha:!!s()[r+4],preserveDrawingBuffer:!!s()[r+5],powerPreference:Re[a],failIfMajorPerformanceCaveat:!!s()[r+7],majorVersion:s()[r+8],minorVersion:s()[r+9],enableExtensionsByDefault:s()[r+10],explicitSwapControl:s()[r+11],proxyContextToMainThread:s()[r+12],renderViaOffscreenBackBuffer:s()[r+13]},(o=Ce(n))?i.explicitSwapControl?0:Ae.createContext(o,i):0;var n,r,a,i,o},l:De,n:Me,g:Oe,o:function(){xe.initRuntime()},a:R||c.wasmMemory,z:function(e){var t=xe.threadExitHandlers.pop();e&&t()},k:function(e,t){xe.threadExitHandlers.push(function(){X.get(e)(t)})},h:function(e,t,n,r){if("undefined"==typeof SharedArrayBuffer)return _("Current environment does not support SharedArrayBuffer, pthreads are not available!"),6;if(!e)return _("pthread_create called with a null thread pointer!"),28;var a=[];if(x&&0===a.length)return tt(687865856,e,t,n,r);var o=0,u=0,l=0;t&&-1!=t?(o=s()[t>>2],o+=81920,u=s()[t+8>>2],l=0!==s()[t+12>>2]):o=2097152;var c=0==u;c?u=lt(16,o):V((u-=o)>0);for(var d=He(228),h=0;h<57;++h)i()[(d>>2)+h]=0;s()[e>>2]=d,s()[d+12>>2]=d;var p=d+152;s()[p>>2]=p;var f={stackBase:u,stackSize:o,allocatedOwnStack:c,detached:l,startRoutine:n,pthread_ptr:d,arg:r,transferList:a};return x?(f.cmd="spawnThread",postMessage(f,a)):Le(f),0},m:function(e,t){return function(e,t){if(!e)return _("pthread_join attempted on a null thread pointer!"),71;if(x&&Xe()==e)return _("PThread "+e+" is attempting to join to itself!"),16;if(!x&&Qe()==e)return _("Main thread "+e+" is attempting to join to itself!"),16;if(s()[e+12>>2]!==e)return _("pthread_join attempted on thread "+e+", which does not point to a valid thread, or does not exist anymore!"),71;if(Atomics.load(i(),e+64>>2))return _("Attempted to join thread "+e+", which was already detached!"),28;for(Pe();;){var n=Atomics.load(i(),e+0>>2);if(1==n){var r=Atomics.load(i(),e+4>>2);return t&&(s()[t>>2]=r),Atomics.store(i(),e+64>>2,1),x?postMessage({cmd:"cleanupThread",thread:e}):ye(e),0}0,ze(),x||Ze(),we(e+0,n,x?100:1)}}(e,t)},t:Be},Ge=(function(){var e={a:Ue};function t(e,t){var n=e.exports;if(c.asm=n,X=c.asm.I,F=t,!x){var r=xe.unusedWorkers.length;xe.unusedWorkers.forEach(function(e){xe.loadWasmModuleToWorker(e,function(){--r||function(){if(se--,c.monitorRunDependencies&&c.monitorRunDependencies(se),0==se&&(null!==ie&&(clearInterval(ie),ie=null),oe)){var e=oe;oe=null,e()}}()})})}}function n(e){t(e.instance,e.module)}function r(t){return function(){if(!$&&(p||f)){if("function"==typeof fetch&&!de(he))return fetch(he,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+he+"'";return e.arrayBuffer()}).catch(function(){return pe(he)});if(v)return new Promise(function(e,t){v(he,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return pe(he)})}().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){_("failed to asynchronously prepare wasm: "+e),ue(e)})}if(x||(V(!x,"addRunDependency cannot be used in a pthread worker"),se++,c.monitorRunDependencies&&c.monitorRunDependencies(se)),c.instantiateWasm)try{return c.instantiateWasm(e,t)}catch(e){return _("Module.instantiateWasm callback failed with error: "+e),!1}($||"function"!=typeof WebAssembly.instantiateStreaming||ce(he)||de(he)||"function"!=typeof fetch?r(n):fetch(he,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return _("wasm streaming compile failed: "+e),_("falling back to ArrayBuffer instantiation"),r(n)})})).catch(l)}(),c.___wasm_call_ctors=function(){return(Ge=c.___wasm_call_ctors=c.asm.B).apply(null,arguments)}),He=(c._init=function(){return(c._init=c.asm.C).apply(null,arguments)},c._init_with_threads_count=function(){return(c._init_with_threads_count=c.asm.D).apply(null,arguments)},c._get_threads_count=function(){return(c._get_threads_count=c.asm.E).apply(null,arguments)},c._register_tensor=function(){return(c._register_tensor=c.asm.F).apply(null,arguments)},c._dispose_data=function(){return(c._dispose_data=c.asm.G).apply(null,arguments)},c._dispose=function(){return(c._dispose=c.asm.H).apply(null,arguments)},c._Abs=function(){return(c._Abs=c.asm.J).apply(null,arguments)},c._Add=function(){return(c._Add=c.asm.K).apply(null,arguments)},c._AddN=function(){return(c._AddN=c.asm.L).apply(null,arguments)},c._All=function(){return(c._All=c.asm.M).apply(null,arguments)},c._Any=function(){return(c._Any=c.asm.N).apply(null,arguments)},c._ArgMax=function(){return(c._ArgMax=c.asm.O).apply(null,arguments)},c._AvgPool=function(){return(c._AvgPool=c.asm.P).apply(null,arguments)},c._BatchMatMul=function(){return(c._BatchMatMul=c.asm.Q).apply(null,arguments)},c._Ceil=function(){return(c._Ceil=c.asm.R).apply(null,arguments)},c._ClipByValue=function(){return(c._ClipByValue=c.asm.S).apply(null,arguments)},c._Conv2D=function(){return(c._Conv2D=c.asm.T).apply(null,arguments)},c._Conv2DBackpropInput=function(){return(c._Conv2DBackpropInput=c.asm.U).apply(null,arguments)},c._Cos=function(){return(c._Cos=c.asm.V).apply(null,arguments)},c._Cosh=function(){return(c._Cosh=c.asm.W).apply(null,arguments)},c._CropAndResize=function(){return(c._CropAndResize=c.asm.X).apply(null,arguments)},c._Cumsum=function(){return(c._Cumsum=c.asm.Y).apply(null,arguments)},c._DepthToSpace=function(){return(c._DepthToSpace=c.asm.Z).apply(null,arguments)},c._DepthwiseConv2dNative=function(){return(c._DepthwiseConv2dNative=c.asm._).apply(null,arguments)},c._Elu=function(){return(c._Elu=c.asm.$).apply(null,arguments)},c._Equal=function(){return(c._Equal=c.asm.aa).apply(null,arguments)},c._Exp=function(){return(c._Exp=c.asm.ba).apply(null,arguments)},c._FlipLeftRight=function(){return(c._FlipLeftRight=c.asm.ca).apply(null,arguments)},c._Floor=function(){return(c._Floor=c.asm.da).apply(null,arguments)},c._FloorDiv=function(){return(c._FloorDiv=c.asm.ea).apply(null,arguments)},c._FusedBatchNorm=function(){return(c._FusedBatchNorm=c.asm.fa).apply(null,arguments)},c._FusedConv2D=function(){return(c._FusedConv2D=c.asm.ga).apply(null,arguments)},c._FusedDepthwiseConv2D=function(){return(c._FusedDepthwiseConv2D=c.asm.ha).apply(null,arguments)},c._Gather=function(){return(c._Gather=c.asm.ia).apply(null,arguments)},c._GatherNd=function(){return(c._GatherNd=c.asm.ja).apply(null,arguments)},c._Greater=function(){return(c._Greater=c.asm.ka).apply(null,arguments)},c._GreaterEqual=function(){return(c._GreaterEqual=c.asm.la).apply(null,arguments)},c._LeakyRelu=function(){return(c._LeakyRelu=c.asm.ma).apply(null,arguments)},c._Less=function(){return(c._Less=c.asm.na).apply(null,arguments)},c._LessEqual=function(){return(c._LessEqual=c.asm.oa).apply(null,arguments)},c._Log=function(){return(c._Log=c.asm.pa).apply(null,arguments)},c._LogicalAnd=function(){return(c._LogicalAnd=c.asm.qa).apply(null,arguments)},c._Max=function(){return(c._Max=c.asm.ra).apply(null,arguments)},c._MaxPool=function(){return(c._MaxPool=c.asm.sa).apply(null,arguments)},c._Maximum=function(){return(c._Maximum=c.asm.ta).apply(null,arguments)},c._Mean=function(){return(c._Mean=c.asm.ua).apply(null,arguments)},c._Min=function(){return(c._Min=c.asm.va).apply(null,arguments)},c._Minimum=function(){return(c._Minimum=c.asm.wa).apply(null,arguments)},c._MirrorPad=function(){return(c._MirrorPad=c.asm.xa).apply(null,arguments)},c._Multiply=function(){return(c._Multiply=c.asm.ya).apply(null,arguments)},c._Neg=function(){return(c._Neg=c.asm.za).apply(null,arguments)},c._NonMaxSuppressionV3=function(){return(c._NonMaxSuppressionV3=c.asm.Aa).apply(null,arguments)},c._NonMaxSuppressionV4=function(){return(c._NonMaxSuppressionV4=c.asm.Ba).apply(null,arguments)},c._NonMaxSuppressionV5=function(){return(c._NonMaxSuppressionV5=c.asm.Ca).apply(null,arguments)},c._NotEqual=function(){return(c._NotEqual=c.asm.Da).apply(null,arguments)},c._OneHot=function(){return(c._OneHot=c.asm.Ea).apply(null,arguments)},c._PadV2=function(){return(c._PadV2=c.asm.Fa).apply(null,arguments)},c._Pow=function(){return(c._Pow=c.asm.Ga).apply(null,arguments)},c._Prelu=function(){return(c._Prelu=c.asm.Ha).apply(null,arguments)},c._Prod=function(){return(c._Prod=c.asm.Ia).apply(null,arguments)},c._RealDiv=function(){return(c._RealDiv=c.asm.Ja).apply(null,arguments)},c._Relu=function(){return(c._Relu=c.asm.Ka).apply(null,arguments)},c._Relu6=function(){return(c._Relu6=c.asm.La).apply(null,arguments)},c._ResizeBilinear=function(){return(c._ResizeBilinear=c.asm.Ma).apply(null,arguments)},c._Reverse=function(){return(c._Reverse=c.asm.Na).apply(null,arguments)},c._RotateWithOffset=function(){return(c._RotateWithOffset=c.asm.Oa).apply(null,arguments)},c._Round=function(){return(c._Round=c.asm.Pa).apply(null,arguments)},c._Rsqrt=function(){return(c._Rsqrt=c.asm.Qa).apply(null,arguments)},c._ScatterNd=function(){return(c._ScatterNd=c.asm.Ra).apply(null,arguments)},c._SelectV2=function(){return(c._SelectV2=c.asm.Sa).apply(null,arguments)},c._Sigmoid=function(){return(c._Sigmoid=c.asm.Ta).apply(null,arguments)},c._Sin=function(){return(c._Sin=c.asm.Ua).apply(null,arguments)},c._Softmax=function(){return(c._Softmax=c.asm.Va).apply(null,arguments)},c._Sqrt=function(){return(c._Sqrt=c.asm.Wa).apply(null,arguments)},c._Square=function(){return(c._Square=c.asm.Xa).apply(null,arguments)},c._SquaredDifference=function(){return(c._SquaredDifference=c.asm.Ya).apply(null,arguments)},c._Step=function(){return(c._Step=c.asm.Za).apply(null,arguments)},c._StridedSlice=function(){return(c._StridedSlice=c.asm._a).apply(null,arguments)},c._Sub=function(){return(c._Sub=c.asm.$a).apply(null,arguments)},c._Sum=function(){return(c._Sum=c.asm.ab).apply(null,arguments)},c._Tan=function(){return(c._Tan=c.asm.bb).apply(null,arguments)},c._Tanh=function(){return(c._Tanh=c.asm.cb).apply(null,arguments)},c._Tile=function(){return(c._Tile=c.asm.db).apply(null,arguments)},c._TopK=function(){return(c._TopK=c.asm.eb).apply(null,arguments)},c._Transform=function(){return(c._Transform=c.asm.fb).apply(null,arguments)},c._Transpose=function(){return(c._Transpose=c.asm.gb).apply(null,arguments)},c.__FusedMatMul=function(){return(c.__FusedMatMul=c.asm.hb).apply(null,arguments)},c._malloc=function(){return(He=c._malloc=c.asm.ib).apply(null,arguments)}),je=c._free=function(){return(je=c._free=c.asm.jb).apply(null,arguments)},qe=c.___errno_location=function(){return(qe=c.___errno_location=c.asm.kb).apply(null,arguments)},Ke=c._emscripten_get_global_libc=function(){return(Ke=c._emscripten_get_global_libc=c.asm.lb).apply(null,arguments)},Xe=c._pthread_self=function(){return(Xe=c._pthread_self=c.asm.mb).apply(null,arguments)},Ye=c.___pthread_tsd_run_dtors=function(){return(Ye=c.___pthread_tsd_run_dtors=c.asm.nb).apply(null,arguments)},Ze=c._emscripten_main_thread_process_queued_calls=function(){return(Ze=c._emscripten_main_thread_process_queued_calls=c.asm.ob).apply(null,arguments)},Je=(c._emscripten_current_thread_process_queued_calls=function(){return(c._emscripten_current_thread_process_queued_calls=c.asm.pb).apply(null,arguments)},c._emscripten_register_main_browser_thread_id=function(){return(Je=c._emscripten_register_main_browser_thread_id=c.asm.qb).apply(null,arguments)}),Qe=c._emscripten_main_browser_thread_id=function(){return(Qe=c._emscripten_main_browser_thread_id=c.asm.rb).apply(null,arguments)},et=c.__emscripten_do_dispatch_to_thread=function(){return(et=c.__emscripten_do_dispatch_to_thread=c.asm.sb).apply(null,arguments)},tt=c._emscripten_sync_run_in_main_thread_4=function(){return(tt=c._emscripten_sync_run_in_main_thread_4=c.asm.tb).apply(null,arguments)},nt=c._emscripten_run_in_main_runtime_thread_js=function(){return(nt=c._emscripten_run_in_main_runtime_thread_js=c.asm.ub).apply(null,arguments)},rt=c.__emscripten_call_on_thread=function(){return(rt=c.__emscripten_call_on_thread=c.asm.vb).apply(null,arguments)},at=(c._emscripten_tls_init=function(){return(c._emscripten_tls_init=c.asm.wb).apply(null,arguments)},c.__emscripten_thread_init=function(){return(at=c.__emscripten_thread_init=c.asm.xb).apply(null,arguments)}),st=c.stackSave=function(){return(st=c.stackSave=c.asm.yb).apply(null,arguments)},it=c.stackRestore=function(){return(it=c.stackRestore=c.asm.zb).apply(null,arguments)},ot=c.stackAlloc=function(){return(ot=c.stackAlloc=c.asm.Ab).apply(null,arguments)},ut=c._emscripten_stack_set_limits=function(){return(ut=c._emscripten_stack_set_limits=c.asm.Bb).apply(null,arguments)},lt=c._memalign=function(){return(lt=c._memalign=c.asm.Cb).apply(null,arguments)},ct=c.__emscripten_allow_main_runtime_queued_calls=10512,dt=c.__emscripten_main_thread_futex=12148;function ht(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function pt(e){if(e=e||y,!(se>0)){if(x)return u(c),ne(),void postMessage({cmd:"loaded"});!function(){if(!x){if(c.preRun)for("function"==typeof c.preRun&&(c.preRun=[c.preRun]);c.preRun.length;)re(c.preRun.shift());me(Z)}}(),se>0||(c.setStatus?(c.setStatus("Running..."),setTimeout(function(){setTimeout(function(){c.setStatus("")},1),t()},1)):t())}function t(){We||(We=!0,c.calledRun=!0,W||(ne(),x||me(Q),u(c),c.onRuntimeInitialized&&c.onRuntimeInitialized(),function(){if(!x){if(c.postRun)for("function"==typeof c.postRun&&(c.postRun=[c.postRun]);c.postRun.length;)ae(c.postRun.shift());me(te)}}()))}}if(c.cwrap=function(e,n,r,a){var s=(r=r||[]).every(function(e){return"number"===e});return"string"!==n&&s&&!a?U(e):function(){return function(e,n,r,a){var s={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);j(e,t=ot(n),n)}return t},array:function(e){var n=ot(e.length);return function(e,n){t().set(e,n)}(e,n),n}},i=U(e),o=[],u=0;if(a)for(var l=0;l<a.length;l++){var c=s[r[l]];c?(0===u&&(u=st()),o[l]=c(a[l])):o[l]=a[l]}var d=i.apply(null,o);return d=function(e){return"string"===n?H(e):"boolean"===n?Boolean(e):e}(d),0!==u&&it(u),d}(e,n,r,arguments)}},c.PThread=xe,c.PThread=xe,c.wasmMemory=R,c.ExitStatus=ht,oe=function e(){We||pt(),We||(oe=e)},c.run=pt,c.preInit)for("function"==typeof c.preInit&&(c.preInit=[c.preInit]);c.preInit.length>0;)c.preInit.pop()();return x&&(D=!1,xe.initWorker()),pt(),e.ready});e.exports=a},421:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),h=2*d,p=255;function f(e,t,n){var r=[],p=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,p,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(351)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},436:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},456:(e,t,n)=>{var r;!function(a,s){var i,o=this,u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),h=2*d,p=255;function f(e,t,n){var r=[],p=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,p,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(857)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},530:()=>{},540:(e,t,n)=>{"use strict";e.exports=n(869)},546:(e,t,n)=>{var r=n(123),a=n(686),s=n(316),i=n(806),o=n(4),u=n(802),l=n(421);l.alea=r,l.xor128=a,l.xorwow=s,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},551:()=>{},556:()=>{},570:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var a={},s={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=s[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(s[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=a[e])?r:(n=u(e,e<0?-1:0,!1),i&&(a[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=p)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%h|0,e/h|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var a=o(l(n,8)),s=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),d=parseInt(e.substring(i,i+u),n);if(u<8){var h=o(l(n,u));s=s.mul(h).add(o(d))}else s=(s=s.mul(a)).add(o(d))}return s.unsigned=t,s}function d(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=d;var h=4294967296,p=h*h,f=p/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=u(0,-2147483648,!1);n.MIN_VALUE=I;var S=n.prototype;S.toInt=function(){return this.unsigned?this.low>>>0:this.low},S.toNumber=function(){return this.unsigned?(this.high>>>0)*h+(this.low>>>0):this.high*h+(this.low>>>0)},S.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var a=o(l(e,6),this.unsigned),s=this,i="";;){var u=s.div(a),c=(s.sub(u.mul(a)).toInt()>>>0).toString(e);if((s=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},S.getHighBits=function(){return this.high},S.getHighBitsUnsigned=function(){return this.high>>>0},S.getLowBits=function(){return this.low},S.getLowBitsUnsigned=function(){return this.low>>>0},S.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&!(e&1<<t);t--);return 0!=this.high?t+33:t+1},S.isZero=function(){return 0===this.high&&0===this.low},S.eqz=S.isZero,S.isNegative=function(){return!this.unsigned&&this.high<0},S.isPositive=function(){return this.unsigned||this.high>=0},S.isOdd=function(){return!(1&~this.low)},S.isEven=function(){return!(1&this.low)},S.equals=function(e){return r(e)||(e=d(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},S.eq=S.equals,S.notEquals=function(e){return!this.eq(e)},S.neq=S.notEquals,S.ne=S.notEquals,S.lessThan=function(e){return this.comp(e)<0},S.lt=S.lessThan,S.lessThanOrEqual=function(e){return this.comp(e)<=0},S.lte=S.lessThanOrEqual,S.le=S.lessThanOrEqual,S.greaterThan=function(e){return this.comp(e)>0},S.gt=S.greaterThan,S.greaterThanOrEqual=function(e){return this.comp(e)>=0},S.gte=S.greaterThanOrEqual,S.ge=S.greaterThanOrEqual,S.compare=function(e){if(r(e)||(e=d(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},S.comp=S.compare,S.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},S.neg=S.negate,S.add=function(e){r(e)||(e=d(e));var t=this.high>>>16,n=65535&this.high,a=this.low>>>16,s=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,h=0,p=0,f=0;return p+=(f+=s+(65535&e.low))>>>16,h+=(p+=a+l)>>>16,c+=(h+=n+o)>>>16,c+=t+i,u((p&=65535)<<16|(f&=65535),(c&=65535)<<16|(h&=65535),this.unsigned)},S.subtract=function(e){return r(e)||(e=d(e)),this.add(e.neg())},S.sub=S.subtract,S.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=d(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,a=65535&this.high,s=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,h=e.low>>>16,p=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*p)>>>16,y+=(b+=s*p)>>>16,b&=65535,y+=(b+=i*h)>>>16,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=s*h)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*p+a*h+s*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},S.mul=S.multiply,S.divide=function(e){if(r(e)||(e=d(e)),e.isZero())throw Error("division by zero");var n,a,s;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;s=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(a=this.sub(e.mul(n)),s=n.add(a.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();s=g}for(a=this;a.gte(e);){n=Math.max(1,Math.floor(a.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),h=o(n),p=h.mul(e);p.isNegative()||p.gt(a);)p=(h=o(n-=c,this.unsigned)).mul(e);h.isZero()&&(h=b),s=s.add(h),a=a.sub(p)}return s},S.div=S.divide,S.modulo=function(e){return r(e)||(e=d(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},S.mod=S.modulo,S.rem=S.modulo,S.not=function(){return u(~this.low,~this.high,this.unsigned)},S.and=function(e){return r(e)||(e=d(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},S.or=function(e){return r(e)||(e=d(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},S.xor=function(e){return r(e)||(e=d(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},S.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},S.shl=S.shiftLeft,S.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},S.shr=S.shiftRight,S.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},S.shru=S.shiftRightUnsigned,S.shr_u=S.shiftRightUnsigned,S.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},S.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},S.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},S.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},S.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},576:function(e,t,n){var r;!function(a,s){"use strict";var i="function",o="undefined",u="object",l="string",c="major",d="model",h="name",p="type",f="vendor",m="version",g="architecture",y="console",b="mobile",x="tablet",w="smarttv",v="wearable",k="embedded",I="Amazon",S="Apple",N="ASUS",T="BlackBerry",C="Browser",$="Chrome",E="Firefox",_="Google",A="Huawei",R="LG",F="Microsoft",D="Motorola",M="Opera",O="Samsung",L="Sharp",z="Sony",P="Xiaomi",B="Zebra",W="Facebook",V="Chromium OS",U="Mac OS",G=" Browser",H=function(e){for(var t={},n=0;n<e.length;n++)t[e[n].toUpperCase()]=e[n];return t},j=function(e,t){return typeof e===l&&-1!==q(t).indexOf(q(e))},q=function(e){return e.toLowerCase()},K=function(e,t){if(typeof e===l)return e=e.replace(/^\s\s*/,""),typeof t===o?e:e.substring(0,500)},X=function(e,t){for(var n,r,a,o,l,c,d=0;d<t.length&&!l;){var h=t[d],p=t[d+1];for(n=r=0;n<h.length&&!l&&h[n];)if(l=h[n++].exec(e))for(a=0;a<p.length;a++)c=l[++r],typeof(o=p[a])===u&&o.length>0?2===o.length?typeof o[1]==i?this[o[0]]=o[1].call(this,c):this[o[0]]=o[1]:3===o.length?typeof o[1]!==i||o[1].exec&&o[1].test?this[o[0]]=c?c.replace(o[1],o[2]):s:this[o[0]]=c?o[1].call(this,c,o[2]):s:4===o.length&&(this[o[0]]=c?o[3].call(this,c.replace(o[1],o[2])):s):this[o]=c||s;d+=2}},Y=function(e,t){for(var n in t)if(typeof t[n]===u&&t[n].length>0){for(var r=0;r<t[n].length;r++)if(j(t[n][r],e))return"?"===n?s:n}else if(j(t[n],e))return"?"===n?s:n;return t.hasOwnProperty("*")?t["*"]:e},Z={ME:"4.90","NT 3.11":"NT3.51","NT 4.0":"NT4.0",2e3:"NT 5.0",XP:["NT 5.1","NT 5.2"],Vista:"NT 6.0",7:"NT 6.1",8:"NT 6.2",8.1:"NT 6.3",10:["NT 6.4","NT 10.0"],RT:"ARM"},J={browser:[[/\b(?:crmo|crios)\/([\w\.]+)/i],[m,[h,"Chrome"]],[/edg(?:e|ios|a)?\/([\w\.]+)/i],[m,[h,"Edge"]],[/(opera mini)\/([-\w\.]+)/i,/(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i,/(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],[h,m],[/opios[\/ ]+([\w\.]+)/i],[m,[h,M+" Mini"]],[/\bop(?:rg)?x\/([\w\.]+)/i],[m,[h,M+" GX"]],[/\bopr\/([\w\.]+)/i],[m,[h,M]],[/\bb[ai]*d(?:uhd|[ub]*[aekoprswx]{5,6})[\/ ]?([\w\.]+)/i],[m,[h,"Baidu"]],[/\b(?:mxbrowser|mxios|myie2)\/?([-\w\.]*)\b/i],[m,[h,"Maxthon"]],[/(kindle)\/([\w\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer|sleipnir)[\/ ]?([\w\.]*)/i,/(avant|iemobile|slim(?:browser|boat|jet))[\/ ]?([\d\.]*)/i,/(?:ms|\()(ie) ([\w\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|qupzilla|falkon|rekonq|puffin|brave|whale(?!.+naver)|qqbrowserlite|duckduckgo|klar|helio|(?=comodo_)?dragon)\/([-\w\.]+)/i,/(heytap|ovi|115)browser\/([\d\.]+)/i,/(weibo)__([\d\.]+)/i],[h,m],[/quark(?:pc)?\/([-\w\.]+)/i],[m,[h,"Quark"]],[/\bddg\/([\w\.]+)/i],[m,[h,"DuckDuckGo"]],[/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],[m,[h,"UC"+C]],[/microm.+\bqbcore\/([\w\.]+)/i,/\bqbcore\/([\w\.]+).+microm/i,/micromessenger\/([\w\.]+)/i],[m,[h,"WeChat"]],[/konqueror\/([\w\.]+)/i],[m,[h,"Konqueror"]],[/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],[m,[h,"IE"]],[/ya(?:search)?browser\/([\w\.]+)/i],[m,[h,"Yandex"]],[/slbrowser\/([\w\.]+)/i],[m,[h,"Smart Lenovo "+C]],[/(avast|avg)\/([\w\.]+)/i],[[h,/(.+)/,"$1 Secure "+C],m],[/\bfocus\/([\w\.]+)/i],[m,[h,E+" Focus"]],[/\bopt\/([\w\.]+)/i],[m,[h,M+" Touch"]],[/coc_coc\w+\/([\w\.]+)/i],[m,[h,"Coc Coc"]],[/dolfin\/([\w\.]+)/i],[m,[h,"Dolphin"]],[/coast\/([\w\.]+)/i],[m,[h,M+" Coast"]],[/miuibrowser\/([\w\.]+)/i],[m,[h,"MIUI"+G]],[/fxios\/([\w\.-]+)/i],[m,[h,E]],[/\bqihoobrowser\/?([\w\.]*)/i],[m,[h,"360"]],[/\b(qq)\/([\w\.]+)/i],[[h,/(.+)/,"$1Browser"],m],[/(oculus|sailfish|huawei|vivo|pico)browser\/([\w\.]+)/i],[[h,/(.+)/,"$1"+G],m],[/samsungbrowser\/([\w\.]+)/i],[m,[h,O+" Internet"]],[/metasr[\/ ]?([\d\.]+)/i],[m,[h,"Sogou Explorer"]],[/(sogou)mo\w+\/([\d\.]+)/i],[[h,"Sogou Mobile"],m],[/(electron)\/([\w\.]+) safari/i,/(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i,/m?(qqbrowser|2345(?=browser|chrome|explorer))\w*[\/ ]?v?([\w\.]+)/i],[h,m],[/(lbbrowser|rekonq)/i,/\[(linkedin)app\]/i],[h],[/ome\/([\w\.]+) \w* ?(iron) saf/i,/ome\/([\w\.]+).+qihu (360)[es]e/i],[m,h],[/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],[[h,W],m],[/(Klarna)\/([\w\.]+)/i,/(kakao(?:talk|story))[\/ ]([\w\.]+)/i,/(naver)\(.*?(\d+\.[\w\.]+).*\)/i,/safari (line)\/([\w\.]+)/i,/\b(line)\/([\w\.]+)\/iab/i,/(alipay)client\/([\w\.]+)/i,/(twitter)(?:and| f.+e\/([\w\.]+))/i,/(chromium|instagram|snapchat)[\/ ]([-\w\.]+)/i],[h,m],[/\bgsa\/([\w\.]+) .*safari\//i],[m,[h,"GSA"]],[/musical_ly(?:.+app_?version\/|_)([\w\.]+)/i],[m,[h,"TikTok"]],[/headlesschrome(?:\/([\w\.]+)| )/i],[m,[h,$+" Headless"]],[/ wv\).+(chrome)\/([\w\.]+)/i],[[h,$+" WebView"],m],[/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],[m,[h,"Android "+C]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],[h,m],[/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],[m,[h,"Mobile Safari"]],[/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],[m,h],[/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],[h,[m,Y,{"1.0":"/8",1.2:"/1",1.3:"/3","2.0":"/412","2.0.2":"/416","2.0.3":"/417","2.0.4":"/419","?":"/"}]],[/(webkit|khtml)\/([\w\.]+)/i],[h,m],[/(navigator|netscape\d?)\/([-\w\.]+)/i],[[h,"Netscape"],m],[/(wolvic|librewolf)\/([\w\.]+)/i],[h,m],[/mobile vr; rv:([\w\.]+)\).+firefox/i],[m,[h,E+" Reality"]],[/ekiohf.+(flow)\/([\w\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror)[\/ ]?([\w\.\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i,/(firefox)\/([\w\.]+)/i,/(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i,/(links) \(([\w\.]+)/i],[h,[m,/_/g,"."]],[/(cobalt)\/([\w\.]+)/i],[h,[m,/master.|lts./,""]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],[[g,"amd64"]],[/(ia32(?=;))/i],[[g,q]],[/((?:i[346]|x)86)[;\)]/i],[[g,"ia32"]],[/\b(aarch64|arm(v?8e?l?|_?64))\b/i],[[g,"arm64"]],[/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],[[g,"armhf"]],[/windows (ce|mobile); ppc;/i],[[g,"arm"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],[[g,/ower/,"",q]],[/(sun4\w)[;\)]/i],[[g,"sparc"]],[/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],[[g,q]]],device:[[/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],[d,[f,O],[p,x]],[/\b((?:s[cgp]h|gt|sm)-(?![lr])\w+|sc[g-]?[\d]+a?|galaxy nexus)/i,/samsung[- ]((?!sm-[lr])[-\w]+)/i,/sec-(sgh\w+)/i],[d,[f,O],[p,b]],[/(?:\/|\()(ip(?:hone|od)[\w, ]*)(?:\/|;)/i],[d,[f,S],[p,b]],[/\((ipad);[-\w\),; ]+apple/i,/applecoremedia\/[\w\.]+ \((ipad)/i,/\b(ipad)\d\d?,\d\d?[;\]].+ios/i],[d,[f,S],[p,x]],[/(macintosh);/i],[d,[f,S]],[/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],[d,[f,L],[p,b]],[/(?:honor)([-\w ]+)[;\)]/i],[d,[f,"Honor"],[p,b]],[/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],[d,[f,A],[p,x]],[/(?:huawei)([-\w ]+)[;\)]/i,/\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],[d,[f,A],[p,b]],[/\b(poco[\w ]+|m2\d{3}j\d\d[a-z]{2})(?: bui|\))/i,/\b; (\w+) build\/hm\1/i,/\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i,/\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i,/oid[^\)]+; (m?[12][0-389][01]\w{3,6}[c-y])( bui|; wv|\))/i,/\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite|pro)?)(?: bui|\))/i],[[d,/_/g," "],[f,P],[p,b]],[/oid[^\)]+; (2\d{4}(283|rpbf)[cgl])( bui|\))/i,/\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],[[d,/_/g," "],[f,P],[p,x]],[/; (\w+) bui.+ oppo/i,/\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],[d,[f,"OPPO"],[p,b]],[/\b(opd2\d{3}a?) bui/i],[d,[f,"OPPO"],[p,x]],[/vivo (\w+)(?: bui|\))/i,/\b(v[12]\d{3}\w?[at])(?: bui|;)/i],[d,[f,"Vivo"],[p,b]],[/\b(rmx[1-3]\d{3})(?: bui|;|\))/i],[d,[f,"Realme"],[p,b]],[/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i,/\bmot(?:orola)?[- ](\w*)/i,/((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],[d,[f,D],[p,b]],[/\b(mz60\d|xoom[2 ]{0,2}) build\//i],[d,[f,D],[p,x]],[/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],[d,[f,R],[p,x]],[/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i,/\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i,/\blg-?([\d\w]+) bui/i],[d,[f,R],[p,b]],[/(ideatab[-\w ]+)/i,/lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],[d,[f,"Lenovo"],[p,x]],[/(?:maemo|nokia).*(n900|lumia \d+)/i,/nokia[-_ ]?([-\w\.]*)/i],[[d,/_/g," "],[f,"Nokia"],[p,b]],[/(pixel c)\b/i],[d,[f,_],[p,x]],[/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],[d,[f,_],[p,b]],[/droid.+; (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],[d,[f,z],[p,b]],[/sony tablet [ps]/i,/\b(?:sony)?sgp\w+(?: bui|\))/i],[[d,"Xperia Tablet"],[f,z],[p,x]],[/ (kb2005|in20[12]5|be20[12][59])\b/i,/(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],[d,[f,"OnePlus"],[p,b]],[/(alexa)webm/i,/(kf[a-z]{2}wi|aeo(?!bc)\w\w)( bui|\))/i,/(kf[a-z]+)( bui|\)).+silk\//i],[d,[f,I],[p,x]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],[[d,/(.+)/g,"Fire Phone $1"],[f,I],[p,b]],[/(playbook);[-\w\),; ]+(rim)/i],[d,f,[p,x]],[/\b((?:bb[a-f]|st[hv])100-\d)/i,/\(bb10; (\w+)/i],[d,[f,T],[p,b]],[/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],[d,[f,N],[p,x]],[/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],[d,[f,N],[p,b]],[/(nexus 9)/i],[d,[f,"HTC"],[p,x]],[/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i,/(zte)[- ]([\w ]+?)(?: bui|\/|\))/i,/(alcatel|geeksphone|nexian|panasonic(?!(?:;|\.))|sony(?!-bra))[-_ ]?([-\w]*)/i],[f,[d,/_/g," "],[p,b]],[/droid [\w\.]+; ((?:8[14]9[16]|9(?:0(?:48|60|8[01])|1(?:3[27]|66)|2(?:6[69]|9[56])|466))[gqswx])\w*(\)| bui)/i],[d,[f,"TCL"],[p,x]],[/(itel) ((\w+))/i],[[f,q],d,[p,Y,{tablet:["p10001l","w7001"],"*":"mobile"}]],[/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],[d,[f,"Acer"],[p,x]],[/droid.+; (m[1-5] note) bui/i,/\bmz-([-\w]{2,})/i],[d,[f,"Meizu"],[p,b]],[/; ((?:power )?armor(?:[\w ]{0,8}))(?: bui|\))/i],[d,[f,"Ulefone"],[p,b]],[/; (energy ?\w+)(?: bui|\))/i,/; energizer ([\w ]+)(?: bui|\))/i],[d,[f,"Energizer"],[p,b]],[/; cat (b35);/i,/; (b15q?|s22 flip|s48c|s62 pro)(?: bui|\))/i],[d,[f,"Cat"],[p,b]],[/((?:new )?andromax[\w- ]+)(?: bui|\))/i],[d,[f,"Smartfren"],[p,b]],[/droid.+; (a(?:015|06[35]|142p?))/i],[d,[f,"Nothing"],[p,b]],[/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron|infinix|tecno|micromax|advan)[-_ ]?([-\w]*)/i,/; (imo) ((?!tab)[\w ]+?)(?: bui|\))/i,/(hp) ([\w ]+\w)/i,/(asus)-?(\w+)/i,/(microsoft); (lumia[\w ]+)/i,/(lenovo)[-_ ]?([-\w]+)/i,/(jolla)/i,/(oppo) ?([\w ]+) bui/i],[f,d,[p,b]],[/(imo) (tab \w+)/i,/(kobo)\s(ereader|touch)/i,/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\/([\w\.]+)/i,/(nook)[\w ]+build\/(\w+)/i,/(dell) (strea[kpr\d ]*[\dko])/i,/(le[- ]+pan)[- ]+(\w{1,9}) bui/i,/(trinity)[- ]*(t\d{3}) bui/i,/(gigaset)[- ]+(q\w{1,9}) bui/i,/(vodafone) ([\w ]+)(?:\)| bui)/i],[f,d,[p,x]],[/(surface duo)/i],[d,[f,F],[p,x]],[/droid [\d\.]+; (fp\du?)(?: b|\))/i],[d,[f,"Fairphone"],[p,b]],[/(u304aa)/i],[d,[f,"AT&T"],[p,b]],[/\bsie-(\w*)/i],[d,[f,"Siemens"],[p,b]],[/\b(rct\w+) b/i],[d,[f,"RCA"],[p,x]],[/\b(venue[\d ]{2,7}) b/i],[d,[f,"Dell"],[p,x]],[/\b(q(?:mv|ta)\w+) b/i],[d,[f,"Verizon"],[p,x]],[/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],[d,[f,"Barnes & Noble"],[p,x]],[/\b(tm\d{3}\w+) b/i],[d,[f,"NuVision"],[p,x]],[/\b(k88) b/i],[d,[f,"ZTE"],[p,x]],[/\b(nx\d{3}j) b/i],[d,[f,"ZTE"],[p,b]],[/\b(gen\d{3}) b.+49h/i],[d,[f,"Swiss"],[p,b]],[/\b(zur\d{3}) b/i],[d,[f,"Swiss"],[p,x]],[/\b((zeki)?tb.*\b) b/i],[d,[f,"Zeki"],[p,x]],[/\b([yr]\d{2}) b/i,/\b(dragon[- ]+touch |dt)(\w{5}) b/i],[[f,"Dragon Touch"],d,[p,x]],[/\b(ns-?\w{0,9}) b/i],[d,[f,"Insignia"],[p,x]],[/\b((nxa|next)-?\w{0,9}) b/i],[d,[f,"NextBook"],[p,x]],[/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[f,"Voice"],d,[p,b]],[/\b(lvtel\-)?(v1[12]) b/i],[[f,"LvTel"],d,[p,b]],[/\b(ph-1) /i],[d,[f,"Essential"],[p,b]],[/\b(v(100md|700na|7011|917g).*\b) b/i],[d,[f,"Envizen"],[p,x]],[/\b(trio[-\w\. ]+) b/i],[d,[f,"MachSpeed"],[p,x]],[/\btu_(1491) b/i],[d,[f,"Rotor"],[p,x]],[/(shield[\w ]+) b/i],[d,[f,"Nvidia"],[p,x]],[/(sprint) (\w+)/i],[f,d,[p,b]],[/(kin\.[onetw]{3})/i],[[d,/\./g," "],[f,F],[p,b]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],[d,[f,B],[p,x]],[/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],[d,[f,B],[p,b]],[/smart-tv.+(samsung)/i],[f,[p,w]],[/hbbtv.+maple;(\d+)/i],[[d,/^/,"SmartTV"],[f,O],[p,w]],[/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],[[f,R],[p,w]],[/(apple) ?tv/i],[f,[d,S+" TV"],[p,w]],[/crkey/i],[[d,$+"cast"],[f,_],[p,w]],[/droid.+aft(\w+)( bui|\))/i],[d,[f,I],[p,w]],[/\(dtv[\);].+(aquos)/i,/(aquos-tv[\w ]+)\)/i],[d,[f,L],[p,w]],[/(bravia[\w ]+)( bui|\))/i],[d,[f,z],[p,w]],[/(mitv-\w{5}) bui/i],[d,[f,P],[p,w]],[/Hbbtv.*(technisat) (.*);/i],[f,d,[p,w]],[/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i,/hbbtv\/\d+\.\d+\.\d+ +\([\w\+ ]*; *([\w\d][^;]*);([^;]*)/i],[[f,K],[d,K],[p,w]],[/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],[[p,w]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[f,d,[p,y]],[/droid.+; (shield) bui/i],[d,[f,"Nvidia"],[p,y]],[/(playstation [345portablevi]+)/i],[d,[f,z],[p,y]],[/\b(xbox(?: one)?(?!; xbox))[\); ]/i],[d,[f,F],[p,y]],[/\b(sm-[lr]\d\d[05][fnuw]?s?)\b/i],[d,[f,O],[p,v]],[/((pebble))app/i],[f,d,[p,v]],[/(watch)(?: ?os[,\/]|\d,\d\/)[\d\.]+/i],[d,[f,S],[p,v]],[/droid.+; (glass) \d/i],[d,[f,_],[p,v]],[/droid.+; (wt63?0{2,3})\)/i],[d,[f,B],[p,v]],[/droid.+; (glass) \d/i],[d,[f,_],[p,v]],[/(pico) (4|neo3(?: link|pro)?)/i],[f,d,[p,v]],[/; (quest( \d| pro)?)/i],[d,[f,W],[p,v]],[/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],[f,[p,k]],[/(aeobc)\b/i],[d,[f,I],[p,k]],[/droid .+?; ([^;]+?)(?: bui|; wv\)|\) applew).+? mobile safari/i],[d,[p,b]],[/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],[d,[p,x]],[/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],[[p,x]],[/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],[[p,b]],[/(android[-\w\. ]{0,9});.+buil/i],[d,[f,"Generic"]]],engine:[[/windows.+ edge\/([\w\.]+)/i],[m,[h,"EdgeHTML"]],[/(arkweb)\/([\w\.]+)/i],[h,m],[/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],[m,[h,"Blink"]],[/(presto)\/([\w\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna|servo)\/([\w\.]+)/i,/ekioh(flow)\/([\w\.]+)/i,/(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i,/(icab)[\/ ]([23]\.[\d\.]+)/i,/\b(libweb)/i],[h,m],[/rv\:([\w\.]{1,9})\b.+(gecko)/i],[m,h]],os:[[/microsoft (windows) (vista|xp)/i],[h,m],[/(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i],[h,[m,Y,Z]],[/windows nt 6\.2; (arm)/i,/windows[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i,/(?:win(?=3|9|n)|win 9x )([nt\d\.]+)/i],[[m,Y,Z],[h,"Windows"]],[/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i,/(?:ios;fbsv\/|iphone.+ios[\/ ])([\d\.]+)/i,/cfnetwork\/.+darwin/i],[[m,/_/g,"."],[h,"iOS"]],[/(mac os x) ?([\w\. ]*)/i,/(macintosh|mac_powerpc\b)(?!.+haiku)/i],[[h,U],[m,/_/g,"."]],[/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],[m,h],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish|openharmony)[-\/ ]?([\w\.]*)/i,/(blackberry)\w*\/([\w\.]*)/i,/(tizen|kaios)[\/ ]([\w\.]+)/i,/\((series40);/i],[h,m],[/\(bb(10);/i],[m,[h,T]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],[m,[h,"Symbian"]],[/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],[m,[h,E+" OS"]],[/web0s;.+rt(tv)/i,/\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],[m,[h,"webOS"]],[/watch(?: ?os[,\/]|\d,\d\/)([\d\.]+)/i],[m,[h,"watchOS"]],[/crkey\/([\d\.]+)/i],[m,[h,$+"cast"]],[/(cros) [\w]+(?:\)| ([\w\.]+)\b)/i],[[h,V],m],[/panasonic;(viera)/i,/(netrange)mmh/i,/(nettv)\/(\d+\.[\w\.]+)/i,/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\);]+)/i,/\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i,/(mint)[\/\(\) ]?(\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i,/(hurd|linux) ?([\w\.]*)/i,/(gnu) ?([\w\.]*)/i,/\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i,/(haiku) (\w+)/i],[h,m],[/(sunos) ?([\w\.\d]*)/i],[[h,"Solaris"],m],[/((?:open)?solaris)[-\/ ]?([\w\.]*)/i,/(aix) ((\d)(?=\.|\)| )[\w\.])*/i,/\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux|serenityos)/i,/(unix) ?([\w\.]*)/i],[h,m]]},Q=function(e,t){if(typeof e===u&&(t=e,e=s),!(this instanceof Q))return new Q(e,t).getResult();var n=typeof a!==o&&a.navigator?a.navigator:s,r=e||(n&&n.userAgent?n.userAgent:""),y=n&&n.userAgentData?n.userAgentData:s,w=t?function(e,t){var n={};for(var r in e)t[r]&&t[r].length%2==0?n[r]=t[r].concat(e[r]):n[r]=e[r];return n}(J,t):J,v=n&&n.userAgent==r;return this.getBrowser=function(){var e,t={};return t[h]=s,t[m]=s,X.call(t,r,w.browser),t[c]=typeof(e=t[m])===l?e.replace(/[^\d\.]/g,"").split(".")[0]:s,v&&n&&n.brave&&typeof n.brave.isBrave==i&&(t[h]="Brave"),t},this.getCPU=function(){var e={};return e[g]=s,X.call(e,r,w.cpu),e},this.getDevice=function(){var e={};return e[f]=s,e[d]=s,e[p]=s,X.call(e,r,w.device),v&&!e[p]&&y&&y.mobile&&(e[p]=b),v&&"Macintosh"==e[d]&&n&&typeof n.standalone!==o&&n.maxTouchPoints&&n.maxTouchPoints>2&&(e[d]="iPad",e[p]=x),e},this.getEngine=function(){var e={};return e[h]=s,e[m]=s,X.call(e,r,w.engine),e},this.getOS=function(){var e={};return e[h]=s,e[m]=s,X.call(e,r,w.os),v&&!e[h]&&y&&y.platform&&"Unknown"!=y.platform&&(e[h]=y.platform.replace(/chrome os/i,V).replace(/macos/i,U)),e},this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}},this.getUA=function(){return r},this.setUA=function(e){return r=typeof e===l&&e.length>500?K(e,500):e,this},this.setUA(r),this};Q.VERSION="1.0.40",Q.BROWSER=H([h,m,c]),Q.CPU=H([g]),Q.DEVICE=H([d,f,p,y,b,w,x,v,k]),Q.ENGINE=Q.OS=H([h,m]),typeof t!==o?(e.exports&&(t=e.exports=Q),t.UAParser=Q):n.amdO?(r=function(){return Q}.call(t,n,t,e))===s||(e.exports=r):typeof a!==o&&(a.UAParser=Q);var ee=typeof a!==o&&(a.jQuery||a.Zepto);if(ee&&!ee.ua){var te=new Q;ee.ua=te.getResult(),ee.ua.get=function(){return te.getUA()},ee.ua.set=function(e){te.setUA(e);var t=te.getResult();for(var n in t)ee.ua[n]=t[n]}}}("object"==typeof window?window:this)},590:()=>{},668:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},686:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor128=o}(0,e=n.nmd(e),n.amdD)},717:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},801:(e,t,n)=>{var r;!function(a,s){var i,o=(0,eval)("this"),u=256,l="random",c=s.pow(u,6),d=s.pow(2,52),h=2*d,p=255;function f(e,t,n){var r=[],p=b(y((t=1==t?{entropy:!0}:t||{}).entropy?[e,x(a)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),x(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,x(a)]}}():e,3),r),f=new m(r),w=function(){for(var e=f.g(6),t=c,n=0;e<d;)e=(e+n)*u,t*=u,n=f.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return w.int32=function(){return 0|f.g(4)},w.quick=function(){return f.g(4)/4294967296},w.double=w,b(x(f.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&g(r,f),e.state=function(){return g(f,{})}),n?(s[l]=e,t):e})(w,p,"global"in t?t.global:this==s,t.state)}function m(e){var t,n=e.length,r=this,a=0,s=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);a<u;)i[a]=a++;for(a=0;a<u;a++)i[a]=i[s=p&s+e[a%n]+(t=i[a])],i[s]=t;(r.g=function(e){for(var t,n=0,a=r.i,s=r.j,i=r.S;e--;)t=i[a=p&a+1],n=n*u+i[p&(i[a]=i[s=p&s+t])+(i[s]=t)];return r.i=a,r.j=s,n})(u)}function g(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function y(e,t){var n,r=[],a=typeof e;if(t&&"object"==a)for(n in e)try{r.push(y(e[n],t-1))}catch(e){}return r.length?r:"string"==a?e:e+"\0"}function b(e,t){for(var n,r=e+"",a=0;a<r.length;)t[p&a]=p&(n^=19*t[p&a])+r.charCodeAt(a++);return x(t)}function x(e){return String.fromCharCode.apply(0,e)}if(s["seed"+l]=f,b(s.random(),a),e.exports){e.exports=f;try{i=n(234)}catch(e){}}else void 0===(r=function(){return f}.call(t,n,t,e))||(e.exports=r)}([],Math)},802:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,a=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^a,a=a-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^a,t.a=a-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function i(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.tychei=o}(0,e=n.nmd(e),n.amdD)},805:(e,t,n)=>{var r,a=(r=(r="undefined"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||"/index.js",function(e){var t,a,s=void 0!==(e=e||{})?e:{};s.ready=new Promise(function(e,n){t=e,a=n});var i,o={};for(i in s)s.hasOwnProperty(i)&&(o[i]=s[i]);var u,l,c,d,h=[];u="object"==typeof window,l="function"==typeof importScripts,c="object"==typeof process&&"object"==typeof process.versions&&"string"==typeof process.versions.node,d=!u&&!c&&!l;var p,f,m,g,y,b="";c?(b=l?n(281).dirname(b)+"/":"//",p=function(e,t){return g||(g=n(893)),y||(y=n(281)),e=y.normalize(e),g.readFileSync(e,t?null:"utf8")},m=function(e){var t=p(e,!0);return t.buffer||(t=new Uint8Array(t)),S(t.buffer),t},process.argv.length>1&&process.argv[1].replace(/\\/g,"/"),h=process.argv.slice(2),process.on("uncaughtException",function(e){if(!(e instanceof ue))throw e}),process.on("unhandledRejection",H),s.inspect=function(){return"[Emscripten Module object]"}):d?("undefined"!=typeof read&&(p=function(e){return read(e)}),m=function(e){var t;return"function"==typeof readbuffer?new Uint8Array(readbuffer(e)):(S("object"==typeof(t=read(e,"binary"))),t)},"undefined"!=typeof scriptArgs?h=scriptArgs:void 0!==arguments&&(h=arguments),"undefined"!=typeof print&&("undefined"==typeof console&&(console={}),console.log=print,console.warn=console.error="undefined"!=typeof printErr?printErr:print)):(u||l)&&(l?b=self.location.href:"undefined"!=typeof document&&document.currentScript&&(b=document.currentScript.src),r&&(b=r),b=0!==b.indexOf("blob:")?b.substr(0,b.lastIndexOf("/")+1):"",p=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.send(null),t.responseText},l&&(m=function(e){var t=new XMLHttpRequest;return t.open("GET",e,!1),t.responseType="arraybuffer",t.send(null),new Uint8Array(t.response)}),f=function(e,t,n){var r=new XMLHttpRequest;r.open("GET",e,!0),r.responseType="arraybuffer",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var x,w,v=s.print||console.log.bind(console),k=s.printErr||console.warn.bind(console);for(i in o)o.hasOwnProperty(i)&&(s[i]=o[i]);o=null,s.arguments&&(h=s.arguments),s.thisProgram&&s.thisProgram,s.quit&&s.quit,s.wasmBinary&&(x=s.wasmBinary),s.noExitRuntime,"object"!=typeof WebAssembly&&H("no native wasm support detected");var I=!1;function S(e,t){e||H("Assertion failed: "+t)}function N(e){var t=s["_"+e];return S(t,"Cannot call unknown function "+e+", make sure it is exported"),t}var T,C,$,E,_="undefined"!=typeof TextDecoder?new TextDecoder("utf8"):void 0;function A(e,t,n){for(var r=t+n,a=t;e[a]&&!(a>=r);)++a;if(a-t>16&&e.subarray&&_)return _.decode(e.subarray(t,a));for(var s="";t<a;){var i=e[t++];if(128&i){var o=63&e[t++];if(192!=(224&i)){var u=63&e[t++];if((i=224==(240&i)?(15&i)<<12|o<<6|u:(7&i)<<18|o<<12|u<<6|63&e[t++])<65536)s+=String.fromCharCode(i);else{var l=i-65536;s+=String.fromCharCode(55296|l>>10,56320|1023&l)}}else s+=String.fromCharCode((31&i)<<6|o)}else s+=String.fromCharCode(i)}return s}function R(e,t){return e?A($,e,t):""}function F(e,t){return e%t>0&&(e+=t-e%t),e}function D(e){T=e,s.HEAP8=C=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=E=new Int32Array(e),s.HEAPU8=$=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=new Uint32Array(e),s.HEAPF32=new Float32Array(e),s.HEAPF64=new Float64Array(e)}s.INITIAL_MEMORY;var M,O=[],L=[],z=[],P=[];function B(e){O.unshift(e)}function W(e){P.unshift(e)}L.push({func:function(){re()}});var V=0,U=null,G=null;function H(e){s.onAbort&&s.onAbort(e),k(e+=""),I=!0,e="abort("+e+"). Build with -s ASSERTIONS=1 for more info.";var t=new WebAssembly.RuntimeError(e);throw a(t),t}function j(e,t){return String.prototype.startsWith?e.startsWith(t):0===e.indexOf(t)}function q(e){return j(e,"data:application/octet-stream;base64,")}function K(e){return j(e,"file://")}s.preloadedImages={},s.preloadedAudios={};var X,Y="tfjs-backend-wasm.wasm";function Z(e){try{if(e==Y&&x)return new Uint8Array(x);if(m)return m(e);throw"both async and sync fetching of the wasm failed"}catch(e){H(e)}}function J(e){for(;e.length>0;){var t=e.shift();if("function"!=typeof t){var n=t.func;"number"==typeof n?void 0===t.arg?M.get(n)():M.get(n)(t.arg):n(void 0===t.arg?null:t.arg)}else t(s)}}function Q(e){try{return w.grow(e-T.byteLength+65535>>>16),D(w.buffer),1}catch(e){}}q(Y)||(X=Y,Y=s.locateFile?s.locateFile(X,b):b+X);var ee,te={mappings:{},buffers:[null,[],[]],printChar:function(e,t){var n=te.buffers[e];0===t||10===t?((1===e?v:k)(A(n,0)),n.length=0):n.push(t)},varargs:void 0,get:function(){return te.varargs+=4,E[te.varargs-4>>2]},getStr:function(e){return R(e)},get64:function(e,t){return e}},ne={a:function(){H()},d:function(e,t,n){$.copyWithin(e,t,t+n)},e:function(e){var t=$.length,n=2147483648;if(e>n)return!1;for(var r=1;r<=4;r*=2){var a=t*(1+.2/r);if(a=Math.min(a,e+100663296),Q(Math.min(n,F(Math.max(e,a),65536))))return!0}return!1},f:function(e){return 0},c:function(e,t,n,r,a){},b:function(e,t,n,r){for(var a=0,s=0;s<n;s++){for(var i=E[t+8*s>>2],o=E[t+(8*s+4)>>2],u=0;u<o;u++)te.printChar(e,$[i+u]);a+=o}return E[r>>2]=a,0},h:function(){return 6},g:function(){return 28},i:function(e){switch(e){case 30:case 75:return 16384;case 85:return 131072;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:case 80:case 81:case 79:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 39:return 1e3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"==typeof navigator&&navigator.hardwareConcurrency||1}return E[ae()>>2]=28,-1}},re=(function(){var e={a:ne};function t(e,t){var n=e.exports;s.asm=n,D((w=s.asm.j).buffer),M=s.asm.r,function(){if(V--,s.monitorRunDependencies&&s.monitorRunDependencies(V),0==V&&(null!==U&&(clearInterval(U),U=null),G)){var e=G;G=null,e()}}()}function n(e){t(e.instance)}function r(t){return function(){if(!x&&(u||l)){if("function"==typeof fetch&&!K(Y))return fetch(Y,{credentials:"same-origin"}).then(function(e){if(!e.ok)throw"failed to load wasm binary file at '"+Y+"'";return e.arrayBuffer()}).catch(function(){return Z(Y)});if(f)return new Promise(function(e,t){f(Y,function(t){e(new Uint8Array(t))},t)})}return Promise.resolve().then(function(){return Z(Y)})}().then(function(t){return WebAssembly.instantiate(t,e)}).then(t,function(e){k("failed to asynchronously prepare wasm: "+e),H(e)})}if(V++,s.monitorRunDependencies&&s.monitorRunDependencies(V),s.instantiateWasm)try{return s.instantiateWasm(e,t)}catch(e){return k("Module.instantiateWasm callback failed with error: "+e),!1}(x||"function"!=typeof WebAssembly.instantiateStreaming||q(Y)||K(Y)||"function"!=typeof fetch?r(n):fetch(Y,{credentials:"same-origin"}).then(function(t){return WebAssembly.instantiateStreaming(t,e).then(n,function(e){return k("wasm streaming compile failed: "+e),k("falling back to ArrayBuffer instantiation"),r(n)})})).catch(a)}(),s.___wasm_call_ctors=function(){return(re=s.___wasm_call_ctors=s.asm.k).apply(null,arguments)}),ae=(s._init=function(){return(s._init=s.asm.l).apply(null,arguments)},s._init_with_threads_count=function(){return(s._init_with_threads_count=s.asm.m).apply(null,arguments)},s._get_threads_count=function(){return(s._get_threads_count=s.asm.n).apply(null,arguments)},s._register_tensor=function(){return(s._register_tensor=s.asm.o).apply(null,arguments)},s._dispose_data=function(){return(s._dispose_data=s.asm.p).apply(null,arguments)},s._dispose=function(){return(s._dispose=s.asm.q).apply(null,arguments)},s._Abs=function(){return(s._Abs=s.asm.s).apply(null,arguments)},s._Add=function(){return(s._Add=s.asm.t).apply(null,arguments)},s._AddN=function(){return(s._AddN=s.asm.u).apply(null,arguments)},s._All=function(){return(s._All=s.asm.v).apply(null,arguments)},s._Any=function(){return(s._Any=s.asm.w).apply(null,arguments)},s._ArgMax=function(){return(s._ArgMax=s.asm.x).apply(null,arguments)},s._AvgPool=function(){return(s._AvgPool=s.asm.y).apply(null,arguments)},s._BatchMatMul=function(){return(s._BatchMatMul=s.asm.z).apply(null,arguments)},s._Ceil=function(){return(s._Ceil=s.asm.A).apply(null,arguments)},s._ClipByValue=function(){return(s._ClipByValue=s.asm.B).apply(null,arguments)},s._Conv2D=function(){return(s._Conv2D=s.asm.C).apply(null,arguments)},s._Conv2DBackpropInput=function(){return(s._Conv2DBackpropInput=s.asm.D).apply(null,arguments)},s._Cos=function(){return(s._Cos=s.asm.E).apply(null,arguments)},s._Cosh=function(){return(s._Cosh=s.asm.F).apply(null,arguments)},s._CropAndResize=function(){return(s._CropAndResize=s.asm.G).apply(null,arguments)},s._Cumsum=function(){return(s._Cumsum=s.asm.H).apply(null,arguments)},s._DepthToSpace=function(){return(s._DepthToSpace=s.asm.I).apply(null,arguments)},s._DepthwiseConv2dNative=function(){return(s._DepthwiseConv2dNative=s.asm.J).apply(null,arguments)},s._Elu=function(){return(s._Elu=s.asm.K).apply(null,arguments)},s._Equal=function(){return(s._Equal=s.asm.L).apply(null,arguments)},s._Exp=function(){return(s._Exp=s.asm.M).apply(null,arguments)},s._FlipLeftRight=function(){return(s._FlipLeftRight=s.asm.N).apply(null,arguments)},s._Floor=function(){return(s._Floor=s.asm.O).apply(null,arguments)},s._FloorDiv=function(){return(s._FloorDiv=s.asm.P).apply(null,arguments)},s._FusedBatchNorm=function(){return(s._FusedBatchNorm=s.asm.Q).apply(null,arguments)},s._FusedConv2D=function(){return(s._FusedConv2D=s.asm.R).apply(null,arguments)},s._FusedDepthwiseConv2D=function(){return(s._FusedDepthwiseConv2D=s.asm.S).apply(null,arguments)},s._Gather=function(){return(s._Gather=s.asm.T).apply(null,arguments)},s._GatherNd=function(){return(s._GatherNd=s.asm.U).apply(null,arguments)},s._Greater=function(){return(s._Greater=s.asm.V).apply(null,arguments)},s._GreaterEqual=function(){return(s._GreaterEqual=s.asm.W).apply(null,arguments)},s._LeakyRelu=function(){return(s._LeakyRelu=s.asm.X).apply(null,arguments)},s._Less=function(){return(s._Less=s.asm.Y).apply(null,arguments)},s._LessEqual=function(){return(s._LessEqual=s.asm.Z).apply(null,arguments)},s._Log=function(){return(s._Log=s.asm._).apply(null,arguments)},s._LogicalAnd=function(){return(s._LogicalAnd=s.asm.$).apply(null,arguments)},s._Max=function(){return(s._Max=s.asm.aa).apply(null,arguments)},s._MaxPool=function(){return(s._MaxPool=s.asm.ba).apply(null,arguments)},s._Maximum=function(){return(s._Maximum=s.asm.ca).apply(null,arguments)},s._Mean=function(){return(s._Mean=s.asm.da).apply(null,arguments)},s._Min=function(){return(s._Min=s.asm.ea).apply(null,arguments)},s._Minimum=function(){return(s._Minimum=s.asm.fa).apply(null,arguments)},s._MirrorPad=function(){return(s._MirrorPad=s.asm.ga).apply(null,arguments)},s._Multiply=function(){return(s._Multiply=s.asm.ha).apply(null,arguments)},s._Neg=function(){return(s._Neg=s.asm.ia).apply(null,arguments)},s._NonMaxSuppressionV3=function(){return(s._NonMaxSuppressionV3=s.asm.ja).apply(null,arguments)},s._NonMaxSuppressionV4=function(){return(s._NonMaxSuppressionV4=s.asm.ka).apply(null,arguments)},s._NonMaxSuppressionV5=function(){return(s._NonMaxSuppressionV5=s.asm.la).apply(null,arguments)},s._NotEqual=function(){return(s._NotEqual=s.asm.ma).apply(null,arguments)},s._OneHot=function(){return(s._OneHot=s.asm.na).apply(null,arguments)},s._PadV2=function(){return(s._PadV2=s.asm.oa).apply(null,arguments)},s._Pow=function(){return(s._Pow=s.asm.pa).apply(null,arguments)},s._Prelu=function(){return(s._Prelu=s.asm.qa).apply(null,arguments)},s._Prod=function(){return(s._Prod=s.asm.ra).apply(null,arguments)},s._RealDiv=function(){return(s._RealDiv=s.asm.sa).apply(null,arguments)},s._Relu=function(){return(s._Relu=s.asm.ta).apply(null,arguments)},s._Relu6=function(){return(s._Relu6=s.asm.ua).apply(null,arguments)},s._ResizeBilinear=function(){return(s._ResizeBilinear=s.asm.va).apply(null,arguments)},s._Reverse=function(){return(s._Reverse=s.asm.wa).apply(null,arguments)},s._RotateWithOffset=function(){return(s._RotateWithOffset=s.asm.xa).apply(null,arguments)},s._Round=function(){return(s._Round=s.asm.ya).apply(null,arguments)},s._Rsqrt=function(){return(s._Rsqrt=s.asm.za).apply(null,arguments)},s._ScatterNd=function(){return(s._ScatterNd=s.asm.Aa).apply(null,arguments)},s._SelectV2=function(){return(s._SelectV2=s.asm.Ba).apply(null,arguments)},s._Sigmoid=function(){return(s._Sigmoid=s.asm.Ca).apply(null,arguments)},s._Sin=function(){return(s._Sin=s.asm.Da).apply(null,arguments)},s._Softmax=function(){return(s._Softmax=s.asm.Ea).apply(null,arguments)},s._Sqrt=function(){return(s._Sqrt=s.asm.Fa).apply(null,arguments)},s._Square=function(){return(s._Square=s.asm.Ga).apply(null,arguments)},s._SquaredDifference=function(){return(s._SquaredDifference=s.asm.Ha).apply(null,arguments)},s._Step=function(){return(s._Step=s.asm.Ia).apply(null,arguments)},s._StridedSlice=function(){return(s._StridedSlice=s.asm.Ja).apply(null,arguments)},s._Sub=function(){return(s._Sub=s.asm.Ka).apply(null,arguments)},s._Sum=function(){return(s._Sum=s.asm.La).apply(null,arguments)},s._Tan=function(){return(s._Tan=s.asm.Ma).apply(null,arguments)},s._Tanh=function(){return(s._Tanh=s.asm.Na).apply(null,arguments)},s._Tile=function(){return(s._Tile=s.asm.Oa).apply(null,arguments)},s._TopK=function(){return(s._TopK=s.asm.Pa).apply(null,arguments)},s._Transform=function(){return(s._Transform=s.asm.Qa).apply(null,arguments)},s._Transpose=function(){return(s._Transpose=s.asm.Ra).apply(null,arguments)},s.__FusedMatMul=function(){return(s.__FusedMatMul=s.asm.Sa).apply(null,arguments)},s._malloc=function(){return(s._malloc=s.asm.Ta).apply(null,arguments)},s._free=function(){return(s._free=s.asm.Ua).apply(null,arguments)},s.___errno_location=function(){return(ae=s.___errno_location=s.asm.Va).apply(null,arguments)}),se=s.stackSave=function(){return(se=s.stackSave=s.asm.Wa).apply(null,arguments)},ie=s.stackRestore=function(){return(ie=s.stackRestore=s.asm.Xa).apply(null,arguments)},oe=s.stackAlloc=function(){return(oe=s.stackAlloc=s.asm.Ya).apply(null,arguments)};function ue(e){this.name="ExitStatus",this.message="Program terminated with exit("+e+")",this.status=e}function le(e){function n(){ee||(ee=!0,s.calledRun=!0,I||(J(L),J(z),t(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),function(){if(s.postRun)for("function"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;)W(s.postRun.shift());J(P)}()))}e=e||h,V>0||(function(){if(s.preRun)for("function"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)B(s.preRun.shift());J(O)}(),V>0||(s.setStatus?(s.setStatus("Running..."),setTimeout(function(){setTimeout(function(){s.setStatus("")},1),n()},1)):n()))}if(s.cwrap=function(e,t,n,r){var a=(n=n||[]).every(function(e){return"number"===e});return"string"!==t&&a&&!r?N(e):function(){return function(e,t,n,r){var a={string:function(e){var t=0;if(null!=e&&0!==e){var n=1+(e.length<<2);!function(e,t,n){!function(e,t,n,r){if(!(r>0))return 0;for(var a=n+r-1,s=0;s<e.length;++s){var i=e.charCodeAt(s);if(i>=55296&&i<=57343&&(i=65536+((1023&i)<<10)|1023&e.charCodeAt(++s)),i<=127){if(n>=a)break;t[n++]=i}else if(i<=2047){if(n+1>=a)break;t[n++]=192|i>>6,t[n++]=128|63&i}else if(i<=65535){if(n+2>=a)break;t[n++]=224|i>>12,t[n++]=128|i>>6&63,t[n++]=128|63&i}else{if(n+3>=a)break;t[n++]=240|i>>18,t[n++]=128|i>>12&63,t[n++]=128|i>>6&63,t[n++]=128|63&i}}t[n]=0}(e,$,t,n)}(e,t=oe(n),n)}return t},array:function(e){var t=oe(e.length);return function(e,t){C.set(e,t)}(e,t),t}},s=N(e),i=[],o=0;if(r)for(var u=0;u<r.length;u++){var l=a[n[u]];l?(0===o&&(o=se()),i[u]=l(r[u])):i[u]=r[u]}var c=s.apply(null,i);return c=function(e){return"string"===t?R(e):"boolean"===t?Boolean(e):e}(c),0!==o&&ie(o),c}(e,t,n,arguments)}},G=function e(){ee||le(),ee||(G=e)},s.run=le,s.preInit)for("function"==typeof s.preInit&&(s.preInit=[s.preInit]);s.preInit.length>0;)s.preInit.pop()();return le(),e.ready});e.exports=a},806:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.x,a=t.i;return e=r[a],n=(e^=e>>>7)^e<<24,n^=(e=r[a+1&7])^e>>>10,n^=(e=r[a+3&7])^e>>>3,n^=(e=r[a+4&7])^e<<7,e=r[a+7&7],n^=(e^=e<<13)^e<<9,r[a]=n,t.i=a+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function i(e,t){return t.x=e.x.slice(),t.i=e.i,t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.x&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorshift7=o}(0,e=n.nmd(e),n.amdD)},817:()=>{},833:function(e,t,n){var r;!function(e,a){function s(e){var t=this;t.next=function(){var e,n,r=t.w,a=t.X,s=t.i;return t.w=r=r+1640531527|0,n=a[s+34&127],e=a[s=s+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=a[s]=n^e,t.i=s,n+(r^r>>>16)|0},function(e,t){var n,r,a,s,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),a=0,s=-32;s<u;++s)t&&(r^=t.charCodeAt((s+32)%t.length)),0===s&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,s>=0&&(i=i+1640531527|0,a=0==(n=o[127&s]^=r+i)?a+1:0);for(a>=128&&(o[127&(t&&t.length||0)]=-1),a=127,s=512;s>0;--s)r=o[a+34&127],n=o[a=a+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[a]=r^n;e.w=i,e.X=o,e.i=a}(t,e)}function i(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function o(e,t){null==e&&(e=+new Date);var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&(r.X&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xor4096=o}(0,e=n.nmd(e),n.amdD)},857:()=>{},869:(e,t)=>{"use strict";var n=Symbol.for("react.transitional.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.consumer"),u=Symbol.for("react.context"),l=Symbol.for("react.forward_ref"),c=Symbol.for("react.suspense"),d=Symbol.for("react.memo"),h=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m=Object.assign,g={};function y(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function b(){}function x(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}y.prototype.isReactComponent={},y.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},y.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},b.prototype=y.prototype;var w=x.prototype=new b;w.constructor=x,m(w,y.prototype),w.isPureReactComponent=!0;var v=Array.isArray,k={H:null,A:null,T:null,S:null,V:null},I=Object.prototype.hasOwnProperty;function S(e,t,r,a,s,i){return r=i.ref,{$$typeof:n,type:e,key:t,ref:void 0!==r?r:null,props:i}}function N(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var T=/\/+/g;function C(e,t){return"object"==typeof e&&null!==e&&null!=e.key?(n=""+e.key,r={"=":"=0",":":"=2"},"$"+n.replace(/[=:]/g,function(e){return r[e]})):t.toString(36);var n,r}function $(){}function E(e,t,a,s,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var u,l,c=!1;if(null===e)c=!0;else switch(o){case"bigint":case"string":case"number":c=!0;break;case"object":switch(e.$$typeof){case n:case r:c=!0;break;case h:return E((c=e._init)(e._payload),t,a,s,i)}}if(c)return i=i(e),c=""===s?"."+C(e,0):s,v(i)?(a="",null!=c&&(a=c.replace(T,"$&/")+"/"),E(i,t,a,"",function(e){return e})):null!=i&&(N(i)&&(u=i,l=a+(null==i.key||e&&e.key===i.key?"":(""+i.key).replace(T,"$&/")+"/")+c,i=S(u.type,l,void 0,0,0,u.props)),t.push(i)),1;c=0;var d,f=""===s?".":s+":";if(v(e))for(var m=0;m<e.length;m++)c+=E(s=e[m],t,a,o=f+C(s,m),i);else if("function"==typeof(m=null===(d=e)||"object"!=typeof d?null:"function"==typeof(d=p&&d[p]||d["@@iterator"])?d:null))for(e=m.call(e),m=0;!(s=e.next()).done;)c+=E(s=s.value,t,a,o=f+C(s,m++),i);else if("object"===o){if("function"==typeof e.then)return E(function(e){switch(e.status){case"fulfilled":return e.value;case"rejected":throw e.reason;default:switch("string"==typeof e.status?e.then($,$):(e.status="pending",e.then(function(t){"pending"===e.status&&(e.status="fulfilled",e.value=t)},function(t){"pending"===e.status&&(e.status="rejected",e.reason=t)})),e.status){case"fulfilled":return e.value;case"rejected":throw e.reason}}throw e}(e),t,a,s,i);throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.")}return c}function _(e,t,n){if(null==e)return e;var r=[],a=0;return E(e,r,"","",function(e){return t.call(n,e,a++)}),r}function A(e){if(-1===e._status){var t=e._result;(t=t()).then(function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)},function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)}),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var R="function"==typeof reportError?reportError:function(e){if("object"==typeof window&&"function"==typeof window.ErrorEvent){var t=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:"object"==typeof e&&null!==e&&"string"==typeof e.message?String(e.message):String(e),error:e});if(!window.dispatchEvent(t))return}else if("object"==typeof process&&"function"==typeof process.emit)return void process.emit("uncaughtException",e);console.error(e)};function F(){}t.Children={map:_,forEach:function(e,t,n){_(e,function(){t.apply(this,arguments)},n)},count:function(e){var t=0;return _(e,function(){t++}),t},toArray:function(e){return _(e,function(e){return e})||[]},only:function(e){if(!N(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=y,t.Fragment=a,t.Profiler=i,t.PureComponent=x,t.StrictMode=s,t.Suspense=c,t.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=k,t.__COMPILER_RUNTIME={__proto__:null,c:function(e){return k.H.useMemoCache(e)}},t.cache=function(e){return function(){return e.apply(null,arguments)}},t.cloneElement=function(e,t,n){if(null==e)throw Error("The argument must be a React element, but you passed "+e+".");var r=m({},e.props),a=e.key;if(null!=t)for(s in t.ref,void 0!==t.key&&(a=""+t.key),t)!I.call(t,s)||"key"===s||"__self"===s||"__source"===s||"ref"===s&&void 0===t.ref||(r[s]=t[s]);var s=arguments.length-2;if(1===s)r.children=n;else if(1<s){for(var i=Array(s),o=0;o<s;o++)i[o]=arguments[o+2];r.children=i}return S(e.type,a,void 0,0,0,r)},t.createContext=function(e){return(e={$$typeof:u,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider=e,e.Consumer={$$typeof:o,_context:e},e},t.createElement=function(e,t,n){var r,a={},s=null;if(null!=t)for(r in void 0!==t.key&&(s=""+t.key),t)I.call(t,r)&&"key"!==r&&"__self"!==r&&"__source"!==r&&(a[r]=t[r]);var i=arguments.length-2;if(1===i)a.children=n;else if(1<i){for(var o=Array(i),u=0;u<i;u++)o[u]=arguments[u+2];a.children=o}if(e&&e.defaultProps)for(r in i=e.defaultProps)void 0===a[r]&&(a[r]=i[r]);return S(e,s,void 0,0,0,a)},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:l,render:e}},t.isValidElement=N,t.lazy=function(e){return{$$typeof:h,_payload:{_status:-1,_result:e},_init:A}},t.memo=function(e,t){return{$$typeof:d,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=k.T,n={};k.T=n;try{var r=e(),a=k.S;null!==a&&a(n,r),"object"==typeof r&&null!==r&&"function"==typeof r.then&&r.then(F,R)}catch(e){R(e)}finally{k.T=t}},t.unstable_useCacheRefresh=function(){return k.H.useCacheRefresh()},t.use=function(e){return k.H.use(e)},t.useActionState=function(e,t,n){return k.H.useActionState(e,t,n)},t.useCallback=function(e,t){return k.H.useCallback(e,t)},t.useContext=function(e){return k.H.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e,t){return k.H.useDeferredValue(e,t)},t.useEffect=function(e,t,n){var r=k.H;if("function"==typeof n)throw Error("useEffect CRUD overload is not enabled in this build of React.");return r.useEffect(e,t)},t.useId=function(){return k.H.useId()},t.useImperativeHandle=function(e,t,n){return k.H.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return k.H.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return k.H.useLayoutEffect(e,t)},t.useMemo=function(e,t){return k.H.useMemo(e,t)},t.useOptimistic=function(e,t){return k.H.useOptimistic(e,t)},t.useReducer=function(e,t,n){return k.H.useReducer(e,t,n)},t.useRef=function(e){return k.H.useRef(e)},t.useState=function(e){return k.H.useState(e)},t.useSyncExternalStore=function(e,t,n){return k.H.useSyncExternalStore(e,t,n)},t.useTransition=function(){return k.H.useTransition()},t.version="19.1.0"},893:()=>{},950:function(e,t,n){var r;!function(e,a){function s(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function i(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function o(e,t){var n=new s(e),r=t&&t.state,a=function(){return(n.next()>>>0)/4294967296};return a.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},a.int32=n.next,a.quick=a,r&&("object"==typeof r&&i(r,n),a.state=function(){return i(n,{})}),a}a&&a.exports?a.exports=o:n.amdD&&n.amdO?void 0===(r=function(){return o}.call(t,n,t,a))||(a.exports=r):this.xorwow=o}(0,e=n.nmd(e),n.amdD)}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e);var r={};return(()=>{"use strict";n.r(r),n.d(r,{captureSelfie:()=>fq,stop:()=>mq,version:()=>gq,withConfig:()=>yq});var e={};n.r(e),n.d(e,{arraysEqual:()=>pe,assert:()=>oe,assertNonNegativeIntegerDimensions:()=>Ue,assertNonNull:()=>le,assertShapesMatch:()=>ue,bytesFromStringArray:()=>_e,bytesPerElement:()=>Ee,checkConversionForErrors:()=>Ne,clamp:()=>te,computeStrides:()=>Le,createScalarValue:()=>Da,createShuffledIndices:()=>ye,decodeString:()=>Pa,distSquared:()=>ie,encodeString:()=>za,fetch:()=>La,fingerPrint64:()=>Fa,flatten:()=>ce,getArrayFromDType:()=>Se,getTypedArrayFromDType:()=>Ie,hasEncodingLoss:()=>Ce,hexToLong:()=>ka,indexToLoc:()=>He,inferDtype:()=>De,inferFromImplicitShape:()=>we,isBoolean:()=>Re,isFunction:()=>Me,isInt:()=>fe,isNumber:()=>Fe,isPromise:()=>je,isScalarShape:()=>he,isString:()=>Ae,isTypedArray:()=>$e,isValidDtype:()=>Te,locToIndex:()=>Ge,makeOnesTypedArray:()=>Be,makeZerosNestedTypedArray:()=>Ve,makeZerosTypedArray:()=>We,nearestDivisor:()=>Oe,nearestLargerEven:()=>ne,now:()=>Oa,parseAxisParam:()=>ve,randUniform:()=>se,repeatedTry:()=>xe,rightPad:()=>be,shuffle:()=>Q,shuffleCombo:()=>ee,sizeFromShape:()=>de,sizeToSquarishShape:()=>ge,squeezeShape:()=>ke,sum:()=>ae,swap:()=>re,tanh:()=>me,toNestedArray:()=>Pe,toTypedArray:()=>Ma});var t={};n.r(t),n.d(t,{assertTypesMatch:()=>cs,getTensorsInContainer:()=>hs,isTensorInList:()=>ds,makeTypesMatch:()=>ls});var a={};n.r(a),n.d(a,{isBrowser:()=>Is,isMobile:()=>ks,mockIsMobile:()=>vs});var s={};n.r(s),n.d(s,{browserFiles:()=>Li,browserHTTPRequest:()=>ji,concatenateArrayBuffers:()=>Vs,copyModel:()=>Ti,decodeWeights:()=>zs,encodeWeights:()=>Ls,fromMemory:()=>Xi,getLoadHandlers:()=>Js,getModelArtifactsForJSON:()=>Hs,getModelArtifactsInfoForJSON:()=>js,getSaveHandlers:()=>Zs,http:()=>Hi,isHTTPScheme:()=>Ui,listModels:()=>Si,loadWeights:()=>Bi,moveModel:()=>Ci,registerLoadRouter:()=>Ys,registerSaveRouter:()=>Xs,removeModel:()=>Ni,weightsLoaderFactory:()=>Wi,withSaveHandler:()=>Yi});var i={};n.r(i),n.d(i,{confusionMatrix:()=>eo});var o={};n.r(o),n.d(o,{fromPixels:()=>io,fromPixelsAsync:()=>ao,toPixels:()=>so});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>oo});var l={};n.r(l),n.d(l,{calculateShapes:()=>co,validateInput:()=>lo,validateUpdateShape:()=>uo});var c={};n.r(c),n.d(c,{assertParamsValid:()=>fo,computeFlatOffset:()=>Co,computeOutShape:()=>go,getNormalizedAxes:()=>wo,isSliceContinous:()=>To,maskToAxes:()=>mo,parseSliceParams:()=>$o,sliceInfo:()=>Eo,startForAxis:()=>So,startIndicesWithElidedDims:()=>vo,stopForAxis:()=>No,stopIndicesWithElidedDims:()=>ko,stridesForAxis:()=>Io,stridesWithElidedDims:()=>yo});var d={};n.r(d),n.d(d,{Serializable:()=>Ao,SerializationMap:()=>Ro,registerClass:()=>Fo});var h={};n.r(h),n.d(h,{TEST_EPSILON_FLOAT16:()=>Mo,encodeStrings:()=>Ho,expectArrayBuffersEqual:()=>Go,expectArraysClose:()=>Oo,expectArraysEqual:()=>Bo,expectNumbersClose:()=>Wo,expectPromiseToFail:()=>Po,expectValuesInRange:()=>Uo,testEpsilon:()=>Lo});var p={};n.r(p),n.d(p,{conv2d:()=>Mh,depthwiseConv2d:()=>zh,matMul:()=>Ph});var f={};n.r(f),n.d(f,{collectGatherOpShapeInfo:()=>$f,computeOutShape:()=>Cf,segOpComputeOptimalWindowSize:()=>Tf});var m={};n.r(m),n.d(m,{ERF_A1:()=>tf,ERF_A2:()=>nf,ERF_A3:()=>rf,ERF_A4:()=>af,ERF_A5:()=>sf,ERF_P:()=>ef,PARALLELIZE_THRESHOLD:()=>Gp,SELU_SCALE:()=>Qp,SELU_SCALEALPHA:()=>Jp,applyActivation:()=>Fh,assertAndGetBroadcastShape:()=>Pu,assertAxesAreInnerMostDims:()=>Lc,assertParamsConsistent:()=>Vp,assignToTypedArray:()=>hf,axesAreInnerMostDims:()=>Fc,calculateShapes:()=>co,checkEinsumDimSizes:()=>vf,combineLocations:()=>Dc,complexWithEvenIndex:()=>lf,complexWithOddIndex:()=>cf,computeConv2DInfo:()=>ol,computeConv3DInfo:()=>ul,computeDefaultPad:()=>ll,computeDilation2DInfo:()=>al,computeOptimalWindowSize:()=>Hp,computeOutAndReduceShapes:()=>Mc,computeOutShape:()=>Up,computePool2DInfo:()=>sl,computePool3DInfo:()=>il,convertConv2DDataFormat:()=>gl,decodeEinsumEquation:()=>xf,eitherStridesOrDilationsAreOne:()=>ml,expandShapeToKeepDim:()=>Oc,exponent:()=>ff,exponents:()=>pf,fromStringArrayToUint8:()=>_f,fromUint8ToStringArray:()=>Ef,getAxesPermutation:()=>zc,getBroadcastDims:()=>Lu,getComplexWithIndex:()=>df,getEinsumComputePath:()=>kf,getEinsumPermutation:()=>wf,getFusedBiasGradient:()=>Rh,getFusedDyActivation:()=>Ah,getImageCenter:()=>jp,getInnerMostAxes:()=>Bc,getPermuted:()=>Kp,getReductionAxes:()=>zu,getReshaped:()=>qp,getReshapedPermuted:()=>Xp,getSliceBeginCoords:()=>Yp,getSliceSize:()=>Zp,getUndoAxesPermutation:()=>Pc,isIdentityPermutation:()=>If,log:()=>Ke,mergeRealAndImagArrays:()=>of,prepareAndValidate:()=>oo,prepareSplitSize:()=>Nf,segment_util:()=>f,shouldFuse:()=>Dh,slice_util:()=>c,splitRealAndImagArrays:()=>uf,tupleValuesAreOne:()=>fl,upcastType:()=>os,validateInput:()=>lo,validateUpdateShape:()=>uo,warn:()=>qe});var g={};n.r(g),n.d(g,{nonMaxSuppressionV3Impl:()=>Jh,nonMaxSuppressionV4Impl:()=>Qh,nonMaxSuppressionV5Impl:()=>ep,whereImpl:()=>yh});var y={};n.r(y),n.d(y,{json:()=>Gf});var b={};n.r(b),n.d(b,{json:()=>Hf});var x={};n.r(x),n.d(x,{json:()=>jf});var w={};n.r(w),n.d(w,{json:()=>qf});var v={};n.r(v),n.d(v,{json:()=>Kf});var k={};n.r(k),n.d(k,{json:()=>Xf});var I={};n.r(I),n.d(I,{json:()=>Yf});var S={};n.r(S),n.d(S,{json:()=>Zf});var N={};n.r(N),n.d(N,{json:()=>Jf});var T={};n.r(T),n.d(T,{json:()=>Qf});var C={};n.r(C),n.d(C,{json:()=>em});var $={};n.r($),n.d($,{json:()=>tm});var E={};n.r(E),n.d(E,{json:()=>nm});var _={};n.r(_),n.d(_,{json:()=>rm});var A={};n.r(A),n.d(A,{json:()=>am});var R={};n.r(R),n.d(R,{json:()=>sm});var F={};n.r(F),n.d(F,{json:()=>im});var D={};n.r(D),n.d(D,{json:()=>om});var M={};n.r(M),n.d(M,{json:()=>um});var O={};n.r(O),n.d(O,{maxNorm:()=>eb,minMaxNorm:()=>rb,nonNeg:()=>nb,unitNorm:()=>tb});var L={};n.r(L),n.d(L,{constant:()=>cx,glorotNormal:()=>yx,glorotUniform:()=>gx,heNormal:()=>bx,heUniform:()=>xx,identity:()=>fx,leCunNormal:()=>wx,leCunUniform:()=>vx,ones:()=>lx,orthogonal:()=>kx,randomNormal:()=>hx,randomUniform:()=>dx,truncatedNormal:()=>px,varianceScaling:()=>mx,zeros:()=>ux});var z={};n.r(z),n.d(z,{Layer:()=>Wx,RNN:()=>lk,RNNCell:()=>ck,activation:()=>_I,add:()=>PI,alphaDropout:()=>ES,average:()=>BI,averagePooling1d:()=>XI,averagePooling2d:()=>JI,averagePooling3d:()=>tS,avgPool1d:()=>YI,avgPool2d:()=>QI,avgPool3d:()=>nS,avgPooling1d:()=>ZI,avgPooling2d:()=>eS,avgPooling3d:()=>rS,batchNormalization:()=>jI,bidirectional:()=>vS,concatenate:()=>WI,conv1d:()=>vI,conv2d:()=>kI,conv2dTranspose:()=>II,conv3d:()=>SI,conv3dTranspose:()=>NI,convLstm2d:()=>yS,convLstm2dCell:()=>bS,cropping2D:()=>CI,dense:()=>AI,depthwiseConv2d:()=>EI,dot:()=>HI,dropout:()=>RI,elu:()=>mI,embedding:()=>zI,flatten:()=>DI,gaussianDropout:()=>$S,gaussianNoise:()=>CS,globalAveragePooling1d:()=>aS,globalAveragePooling2d:()=>sS,globalMaxPool1d:()=>IS,globalMaxPool2d:()=>SS,globalMaxPooling1d:()=>iS,globalMaxPooling2d:()=>oS,gru:()=>dS,gruCell:()=>hS,input:()=>cv,inputLayer:()=>fI,layerNormalization:()=>qI,leakyReLU:()=>yI,lstm:()=>pS,lstmCell:()=>fS,masking:()=>_S,maxPool1d:()=>NS,maxPool2d:()=>TS,maxPooling1d:()=>uS,maxPooling2d:()=>lS,maxPooling3d:()=>cS,maximum:()=>VI,minimum:()=>UI,multiply:()=>GI,permute:()=>LI,prelu:()=>bI,reLU:()=>gI,repeatVector:()=>MI,reshape:()=>OI,rnn:()=>xS,separableConv2d:()=>TI,simpleRNN:()=>mS,simpleRNNCell:()=>gS,softmax:()=>xI,spatialDropout1d:()=>FI,stackedRNNCells:()=>wS,thresholdedReLU:()=>wI,timeDistributed:()=>kS,upSampling2d:()=>$I,zeroPadding2d:()=>KI});var P={};n.r(P),n.d(P,{MAPE:()=>WS,MSE:()=>GS,binaryAccuracy:()=>AS,binaryCrossentropy:()=>RS,categoricalAccuracy:()=>DS,categoricalCrossentropy:()=>MS,cosineProximity:()=>zS,mape:()=>VS,meanAbsoluteError:()=>PS,meanAbsolutePercentageError:()=>BS,meanSquaredError:()=>US,mse:()=>HS,precision:()=>OS,recall:()=>LS,sparseCategoricalAccuracy:()=>FS});var B={};n.r(B),n.d(B,{modelFromJSON:()=>sv});var W={};n.r(W),n.d(W,{l1:()=>qS,l1l2:()=>jS,l2:()=>KS});var V={};n.r(V),n.d(V,{CSVDataset:()=>VN,Dataset:()=>_N,FileDataSource:()=>eT,TextLineDataset:()=>MN,URLDataSource:()=>tT,array:()=>RN,csv:()=>nT,func:()=>rT,generator:()=>aT,microphone:()=>iT,version_data:()=>oT,webcam:()=>sT,zip:()=>FN});var U={};n.r(U),n.d(U,{mx:()=>WT,XI:()=>FC,Nk:()=>DC,YG:()=>LC,hH:()=>UC,z3:()=>N$,sG:()=>O$,uM:()=>W$,vS:()=>aE,qB:()=>hE,GG:()=>fE,lg:()=>xE,rq:()=>gE,cu:()=>RE,WR:()=>EE,GE:()=>ME,px:()=>LE,jC:()=>JE,He:()=>t_,hE:()=>d_,BF:()=>y$,Dk:()=>k_,cl:()=>__,_B:()=>U_,qy:()=>H_,Zy:()=>rA,zv:()=>$T,dH:()=>YT,HS:()=>EC,yH:()=>IA,l3:()=>NA,z9:()=>CA,x6:()=>RA,eW:()=>WA,GK:()=>GA,SP:()=>qA,f6:()=>XA,dl:()=>q$,Dw:()=>eR,xT:()=>aR,_X:()=>rC,wz:()=>dR});var G={};n.r(G),n.d(G,{Abs:()=>rt,Acos:()=>at,Acosh:()=>st,AdadeltaOptimizer:()=>_u,AdagradOptimizer:()=>Ru,AdamOptimizer:()=>Mu,AdamaxOptimizer:()=>Wu,Add:()=>it,AddN:()=>ot,All:()=>ut,Any:()=>lt,ArgMax:()=>ct,ArgMin:()=>dt,Asin:()=>ht,Asinh:()=>pt,Atan:()=>ft,Atan2:()=>gt,Atanh:()=>mt,AvgPool:()=>yt,AvgPool3D:()=>xt,AvgPool3DGrad:()=>wt,AvgPoolGrad:()=>bt,BatchMatMul:()=>vt,BatchToSpaceND:()=>kt,Bincount:()=>It,BroadcastArgs:()=>Nt,BroadcastTo:()=>St,Callback:()=>XS,CallbackList:()=>Xx,Cast:()=>Tt,Ceil:()=>Ct,ClipByValue:()=>$t,Complex:()=>Et,ComplexAbs:()=>_t,Concat:()=>At,Conv2D:()=>Rt,Conv2DBackpropFilter:()=>Ft,Conv2DBackpropInput:()=>Dt,Conv3D:()=>Mt,Conv3DBackpropFilterV2:()=>Ot,Conv3DBackpropInputV2:()=>Lt,Cos:()=>zt,Cosh:()=>Pt,CropAndResize:()=>Wt,Cumsum:()=>Bt,CustomCallback:()=>Jx,DataStorage:()=>Y,DenseBincount:()=>Vt,DepthToSpace:()=>Ut,DepthwiseConv2dNative:()=>Gt,DepthwiseConv2dNativeBackpropFilter:()=>Ht,DepthwiseConv2dNativeBackpropInput:()=>jt,Diag:()=>qt,Dilation2D:()=>Kt,Dilation2DBackpropFilter:()=>Yt,Dilation2DBackpropInput:()=>Xt,ENV:()=>et,EarlyStopping:()=>JS,Einsum:()=>Jt,Elu:()=>Qt,EluGrad:()=>en,Environment:()=>Ye,Equal:()=>nn,Erf:()=>tn,Exp:()=>rn,ExpandDims:()=>an,Expm1:()=>sn,FFT:()=>on,Fill:()=>un,FlipLeftRight:()=>ln,Floor:()=>cn,FloorDiv:()=>dn,FromPixels:()=>aa,FusedBatchNorm:()=>hn,FusedConv2D:()=>oa,FusedDepthwiseConv2D:()=>ua,GatherNd:()=>fn,GatherV2:()=>pn,GraphModel:()=>qm,Greater:()=>mn,GreaterEqual:()=>gn,History:()=>Zx,IFFT:()=>bn,Identity:()=>yn,Imag:()=>xn,InputSpec:()=>Ox,IsFinite:()=>wn,IsInf:()=>vn,IsNan:()=>kn,KernelBackend:()=>Z,LRN:()=>Fn,LRNGrad:()=>Dn,LayerVariable:()=>Fx,LayersModel:()=>rv,LeakyRelu:()=>In,Less:()=>Sn,LessEqual:()=>Nn,LinSpace:()=>Tn,Log:()=>Cn,Log1p:()=>$n,LogSoftmax:()=>Rn,LogicalAnd:()=>En,LogicalNot:()=>_n,LogicalOr:()=>An,Max:()=>Mn,MaxPool:()=>Ln,MaxPool3D:()=>Pn,MaxPool3DGrad:()=>Bn,MaxPoolGrad:()=>zn,MaxPoolWithArgmax:()=>Wn,Maximum:()=>On,Mean:()=>Vn,Min:()=>Un,Minimum:()=>Gn,MirrorPad:()=>Hn,Mod:()=>jn,MomentumOptimizer:()=>Uu,Multinomial:()=>qn,Multiply:()=>Kn,Neg:()=>Xn,NonMaxSuppressionV3:()=>Zn,NonMaxSuppressionV4:()=>Jn,NonMaxSuppressionV5:()=>Qn,NotEqual:()=>Yn,OP_SCOPE_SUFFIX:()=>_s,OneHot:()=>tr,OnesLike:()=>er,Optimizer:()=>Eu,OptimizerConstructors:()=>Hu,Pack:()=>nr,PadV2:()=>rr,Pool:()=>ar,Pow:()=>sr,Prelu:()=>ir,Prod:()=>or,RMSPropOptimizer:()=>Gu,RNN:()=>lk,Range:()=>ur,Rank:()=>ts,Real:()=>lr,RealDiv:()=>Zt,Reciprocal:()=>cr,Reduction:()=>mp,Relu:()=>dr,Relu6:()=>yr,Reshape:()=>hr,ResizeBilinear:()=>mr,ResizeBilinearGrad:()=>gr,ResizeNearestNeighbor:()=>pr,ResizeNearestNeighborGrad:()=>fr,Reverse:()=>br,RotateWithOffset:()=>sa,Round:()=>xr,Rsqrt:()=>wr,SGDOptimizer:()=>Vu,ScatterNd:()=>vr,Select:()=>kr,Selu:()=>Ir,Sequential:()=>iv,Sigmoid:()=>$r,Sign:()=>Cr,Sin:()=>Nr,Sinh:()=>Tr,Slice:()=>Sr,Softmax:()=>Dr,Softplus:()=>Er,SpaceToBatchND:()=>Rr,SparseFillEmptyRows:()=>Mr,SparseReshape:()=>Or,SparseSegmentMean:()=>Lr,SparseSegmentSum:()=>zr,SparseToDense:()=>Pr,SplitV:()=>Fr,Sqrt:()=>_r,Square:()=>Wr,SquaredDifference:()=>Br,Step:()=>ra,StridedSlice:()=>Vr,StringNGrams:()=>Ur,StringSplit:()=>Gr,StringToHashBucketFast:()=>Hr,Sub:()=>jr,Sum:()=>Ar,SymbolicTensor:()=>Lx,Tan:()=>qr,Tanh:()=>Kr,Tensor:()=>Ja,TensorBuffer:()=>Ka,Tile:()=>Xr,TopK:()=>Yr,Transform:()=>Zr,Transpose:()=>Jr,Unique:()=>Qr,Unpack:()=>ea,UnsortedSegmentSum:()=>ta,Variable:()=>es,ZerosLike:()=>na,_FusedMatMul:()=>ia,abs:()=>Ou,acos:()=>ju,acosh:()=>qu,add:()=>fu,addN:()=>Ku,all:()=>Xu,any:()=>Yu,argMax:()=>Zu,argMin:()=>Ju,asin:()=>Qu,asinh:()=>el,atan:()=>tl,atan2:()=>nl,atanh:()=>rl,avgPool:()=>bl,avgPool3d:()=>xl,backend:()=>hu,backend_util:()=>m,basicLSTMCell:()=>Sl,batchNorm:()=>Tl,batchNorm2d:()=>Cl,batchNorm3d:()=>$l,batchNorm4d:()=>El,batchToSpaceND:()=>Nl,bincount:()=>_l,booleanMaskAsync:()=>xh,broadcastArgs:()=>Al,broadcastTo:()=>Rl,browser:()=>o,buffer:()=>_i,callbacks:()=>QS,cast:()=>Ai,ceil:()=>Fl,clipByValue:()=>Dl,clone:()=>Ri,complex:()=>Rs,concat:()=>wl,concat1d:()=>Ml,concat2d:()=>Ol,concat3d:()=>Ll,concat4d:()=>zl,constraints:()=>O,conv1d:()=>Bl,conv2d:()=>Pl,conv2dTranspose:()=>Vl,conv3d:()=>Ul,conv3dTranspose:()=>Hl,copyRegisteredKernels:()=>ba,cos:()=>jl,cosh:()=>ql,cosineWindow:()=>$h,cumsum:()=>Kl,customGrad:()=>Tu,data:()=>V,denseBincount:()=>Xl,deprecationWarn:()=>Yo,depthToSpace:()=>Yl,depthwiseConv2d:()=>Zl,deregisterOp:()=>Of,device_util:()=>a,diag:()=>Jl,dilation2d:()=>Ql,disableDeprecationWarnings:()=>Xo,dispose:()=>nu,disposeVariables:()=>Zo,div:()=>gu,divNoNan:()=>nc,dot:()=>rc,dropout:()=>Th,einsum:()=>ac,elu:()=>sc,enableDebugMode:()=>Ko,enableProdMode:()=>qo,enclosingPowerOfTwo:()=>Ch,engine:()=>Jo,env:()=>Je,equal:()=>ec,erf:()=>ic,exp:()=>oc,expandDims:()=>uc,expm1:()=>lc,eye:()=>dc,fft:()=>Xd,fill:()=>Au,findBackend:()=>lu,findBackendFactory:()=>cu,floor:()=>hc,floorDiv:()=>mu,fused:()=>p,gather:()=>pc,gatherND:()=>Nh,gather_util:()=>u,getBackend:()=>ou,getGradient:()=>ha,getKernel:()=>da,getKernelsForBackend:()=>pa,grad:()=>vu,grads:()=>ku,greater:()=>fc,greaterEqual:()=>mc,ifft:()=>Yd,imag:()=>gc,image:()=>Dp,inTopKAsync:()=>Eh,initializers:()=>L,input:()=>cv,io:()=>s,irfft:()=>Zd,isFinite:()=>yc,isInf:()=>bc,isNaN:()=>xc,keep:()=>ru,kernel_impls:()=>g,layers:()=>z,leakyRelu:()=>wc,less:()=>vc,lessEqual:()=>kc,linalg:()=>Mp,linspace:()=>Ic,loadGraphModel:()=>Km,loadLayersModel:()=>lv,localResponseNormalization:()=>Sc,log:()=>Nc,log1p:()=>Tc,logSigmoid:()=>Ec,logSoftmax:()=>Rc,logSumExp:()=>Wc,logicalAnd:()=>Vc,logicalNot:()=>Uc,logicalOr:()=>Gc,logicalXor:()=>Hc,losses:()=>Op,matMul:()=>Zi,math:()=>i,max:()=>_c,maxPool:()=>jc,maxPool3d:()=>qc,maxPoolWithArgmax:()=>Kc,maximum:()=>Bu,mean:()=>Xc,memory:()=>Qo,meshgrid:()=>Jc,metrics:()=>P,min:()=>Qc,minimum:()=>ed,mirrorPad:()=>td,mod:()=>nd,model:()=>ov,models:()=>B,moments:()=>rd,movingAverage:()=>kh,mul:()=>yu,multiRNNCell:()=>ad,multinomial:()=>sd,neg:()=>Cc,nextFrame:()=>Wp,norm:()=>vh,notEqual:()=>id,oneHot:()=>Ji,ones:()=>Zc,onesLike:()=>od,op:()=>As,outerProduct:()=>ud,pad:()=>ld,pad1d:()=>cd,pad2d:()=>dd,pad3d:()=>hd,pad4d:()=>pd,pool:()=>md,pow:()=>Fu,prelu:()=>gd,print:()=>Fi,prod:()=>yd,profile:()=>eu,rand:()=>bd,randomGamma:()=>Id,randomNormal:()=>Sd,randomUniform:()=>Nd,range:()=>Td,ready:()=>iu,real:()=>Cd,reciprocal:()=>$d,registerBackend:()=>du,registerCallbackConstructor:()=>dv,registerGradient:()=>ma,registerKernel:()=>fa,registerOp:()=>Df,regularizers:()=>W,relu:()=>Ed,relu6:()=>_d,removeBackend:()=>uu,reshape:()=>yl,reverse:()=>Ad,reverse1d:()=>Rd,reverse2d:()=>Fd,reverse3d:()=>Dd,reverse4d:()=>Md,rfft:()=>Qd,round:()=>Od,rsqrt:()=>Ld,scalar:()=>$u,scatterND:()=>Ih,scatter_util:()=>l,selu:()=>zd,separableConv2d:()=>Pd,sequential:()=>uv,serialization:()=>d,setBackend:()=>su,setPlatform:()=>pu,setdiff1dAsync:()=>Bd,sigmoid:()=>vl,sign:()=>Wd,signal:()=>Fp,sin:()=>Vd,sinh:()=>Ud,slice:()=>kl,slice1d:()=>Gd,slice2d:()=>Hd,slice3d:()=>jd,slice4d:()=>qd,slice_util:()=>c,softmax:()=>Kd,softplus:()=>$c,spaceToBatchND:()=>fd,sparse:()=>Lp,sparseToDense:()=>Sh,spectral:()=>Rp,split:()=>Jd,sqrt:()=>bu,square:()=>xu,squaredDifference:()=>eh,squeeze:()=>th,stack:()=>nh,step:()=>rh,stridedSlice:()=>ah,string:()=>zp,sub:()=>Du,sum:()=>Ac,sumOutType:()=>us,tan:()=>sh,tanh:()=>Il,tensor:()=>Ds,tensor1d:()=>ih,tensor2d:()=>oh,tensor3d:()=>to,tensor4d:()=>uh,tensor5d:()=>lh,tensor6d:()=>ch,tensor_util:()=>t,test_util:()=>h,tidy:()=>tu,tile:()=>cc,time:()=>au,topk:()=>dh,train:()=>Pp,transpose:()=>Qi,truncatedNormal:()=>hh,unique:()=>ph,unregisterGradient:()=>ya,unregisterKernel:()=>ga,unsortedSegmentSum:()=>fh,unstack:()=>mh,upcastType:()=>os,util:()=>e,valueAndGrad:()=>Iu,valueAndGrads:()=>Su,variable:()=>gh,variableGrads:()=>Nu,version:()=>pW,version_converter:()=>Xm,version_core:()=>jo,version_layers:()=>Rw,where:()=>tc,whereAsync:()=>bh,zeros:()=>Yc,zerosLike:()=>wu});class H{static VERSION="1.0.0";static STATIC_ASSETS_BASE_URL="https://makeup.sdk.orbo.ai/";static ASSETS_BASE_URL="./smart-capture-v2/"}let j={SMART_CAPTURE:{GUIDELINES:{GUIDELINE1:"Look straight into the camera & keep your face in the circle",GUIDELINE2:"Take off your glasses & don't let your hair cover your face"},MSG1:"Move a little closer!",MSG2:"Gently tilt your head back a bit.",MSG3:"Make sure your face is evenly lit.",MSG4:"Keep your face straight and centered.",MSG5:"Lighting",MSG6:"Look Straight",MSG7:"Position",MSG8:"Align your face inside the oval.",MSG9:"PROCEED",MSG10:"RETRY"}};var q=n(392),K=n.n(q),X=n(159);class Y{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class Z{refCount(e){return J("refCount")}incRef(e){return J("incRef")}timerAvailable(){return!0}time(e){return J("time")}read(e){return J("read")}readSync(e){return J("readSync")}numDataIds(){return J("numDataIds")}disposeData(e,t){return J("disposeData")}write(e,t,n){return J("write")}move(e,t,n,r,a){return J("move")}memory(){return J("memory")}floatPrecision(){return J("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return J("dispose")}}function J(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Q(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,re(e,t,n)}function ee(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,re(e,n,r),re(t,n,r)}function te(e,t,n){return Math.max(e,Math.min(t,n))}function ne(e){return e%2==0?e:e+1}function re(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function ae(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function se(e,t){const n=Math.random();return t*n+(1-n)*e}function ie(e,t){let n=0;for(let r=0;r<e.length;r++){const a=Number(e[r])-Number(t[r]);n+=a*a}return n}function oe(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ue(e,t,n=""){oe(pe(e,t),()=>n+` Shapes ${e} and ${t} must match`)}function le(e){oe(null!=e,()=>"The input to the tensor constructor must be a non-null value.")}function ce(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||$e(e)&&!n)for(let r=0;r<e.length;++r)ce(e[r],t,n);else t.push(e);return t}function de(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function he(e){return 0===e.length}function pe(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function fe(e){return e%1==0}function me(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function ge(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function ye(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Q(t),t}function be(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function xe(e,t=e=>0,n){return new Promise((r,a)=>{let s=0;const i=()=>{if(e())return void r();s++;const o=t(s);null!=n&&s>=n?a():setTimeout(i,o)};i()})}function we(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!==0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const a=e.slice();return a[r]=t/n,a}function ve(e,t){const n=t.length;return oe((e=null==e?t.map((e,t)=>t):[].concat(e)).every(e=>e>=-n&&e<n),()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`),oe(e.every(e=>fe(e)),()=>`All values in axis param must be integers but got axis ${e}`),e.map(e=>e<0?n+e:e)}function ke(e,t){const n=[],r=[],a=null!=t&&Array.isArray(t)&&0===t.length,s=null==t||a?null:ve(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=s){if(s[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==s[i]||s[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),s[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function Ie(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function Se(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function Ne(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function Te(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ce(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function $e(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ee(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function _e(e){if(null==e)return 0;let t=0;return e.forEach(e=>t+=e.length),t}function Ae(e){return"string"==typeof e||e instanceof String}function Re(e){return"boolean"==typeof e}function Fe(e){return"number"==typeof e}function De(e){return Array.isArray(e)?De(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Fe(e)?"float32":Ae(e)?"string":Re(e)?"bool":"float32"}function Me(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Oe(e,t){for(let n=t;n<e;++n)if(e%n===0)return n;return e}function Le(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function ze(e,t,n,r=!1){const a=new Array;if(1===t.length){const s=t[0]*(r?2:1);for(let t=0;t<s;t++)a[t]=n[e+t]}else{const s=t[0],i=t.slice(1),o=i.reduce((e,t)=>e*t)*(r?2:1);for(let t=0;t<s;t++)a[t]=ze(e+t*o,i,n,r)}return a}function Pe(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce((e,t)=>e*t)*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return ze(0,e,t,n)}function Be(e,t){const n=We(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function We(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Ve(e,t){const n=e.reduce((e,t)=>e*t,1);if(null==t||"float32"===t)return Pe(e,new Float32Array(n));if("int32"===t)return Pe(e,new Int32Array(n));if("bool"===t)return Pe(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Ue(e){e.forEach(t=>{oe(Number.isInteger(t)&&t>=0,()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`)})}function Ge(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function He(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function je(e){return e&&e.then&&"function"==typeof e.then}function qe(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.warn(...e)}function Ke(...e){Je().getBool("IS_TEST")||Je().getBool("PROD")||console.log(...e)}const Xe="tfjsflags";class Ye{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ze,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&qe(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];qe(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(je(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);Xe in e&&e[Xe].split(",").forEach(e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)})}}function Ze(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,(e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("="))),t}function Je(){return et}let Qe,et=null;function tt(){if(null==Qe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}Qe=e}return Qe}function nt(e,t){const n=function(){const e=tt();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const rt="Abs",at="Acos",st="Acosh",it="Add",ot="AddN",ut="All",lt="Any",ct="ArgMax",dt="ArgMin",ht="Asin",pt="Asinh",ft="Atan",mt="Atanh",gt="Atan2",yt="AvgPool",bt="AvgPoolGrad",xt="AvgPool3D",wt="AvgPool3DGrad",vt="BatchMatMul",kt="BatchToSpaceND",It="Bincount",St="BroadcastTo",Nt="BroadcastArgs",Tt="Cast",Ct="Ceil",$t="ClipByValue",Et="Complex",_t="ComplexAbs",At="Concat",Rt="Conv2D",Ft="Conv2DBackpropFilter",Dt="Conv2DBackpropInput",Mt="Conv3D",Ot="Conv3DBackpropFilterV2",Lt="Conv3DBackpropInputV2",zt="Cos",Pt="Cosh",Bt="Cumsum",Wt="CropAndResize",Vt="DenseBincount",Ut="DepthToSpace",Gt="DepthwiseConv2dNative",Ht="DepthwiseConv2dNativeBackpropFilter",jt="DepthwiseConv2dNativeBackpropInput",qt="Diag",Kt="Dilation2D",Xt="Dilation2DBackpropInput",Yt="Dilation2DBackpropFilter",Zt="RealDiv",Jt="Einsum",Qt="Elu",en="EluGrad",tn="Erf",nn="Equal",rn="Exp",an="ExpandDims",sn="Expm1",on="FFT",un="Fill",ln="FlipLeftRight",cn="Floor",dn="FloorDiv",hn="FusedBatchNorm",pn="GatherV2",fn="GatherNd",mn="Greater",gn="GreaterEqual",yn="Identity",bn="IFFT",xn="Imag",wn="IsFinite",vn="IsInf",kn="IsNan",In="LeakyRelu",Sn="Less",Nn="LessEqual",Tn="LinSpace",Cn="Log",$n="Log1p",En="LogicalAnd",_n="LogicalNot",An="LogicalOr",Rn="LogSoftmax",Fn="LRN",Dn="LRNGrad",Mn="Max",On="Maximum",Ln="MaxPool",zn="MaxPoolGrad",Pn="MaxPool3D",Bn="MaxPool3DGrad",Wn="MaxPoolWithArgmax",Vn="Mean",Un="Min",Gn="Minimum",Hn="MirrorPad",jn="Mod",qn="Multinomial",Kn="Multiply",Xn="Neg",Yn="NotEqual",Zn="NonMaxSuppressionV3",Jn="NonMaxSuppressionV4",Qn="NonMaxSuppressionV5",er="OnesLike",tr="OneHot",nr="Pack",rr="PadV2",ar="Pool",sr="Pow",ir="Prelu",or="Prod",ur="Range",lr="Real",cr="Reciprocal",dr="Relu",hr="Reshape",pr="ResizeNearestNeighbor",fr="ResizeNearestNeighborGrad",mr="ResizeBilinear",gr="ResizeBilinearGrad",yr="Relu6",br="Reverse",xr="Round",wr="Rsqrt",vr="ScatterNd",kr="Select",Ir="Selu",Sr="Slice",Nr="Sin",Tr="Sinh",Cr="Sign",$r="Sigmoid",Er="Softplus",_r="Sqrt",Ar="Sum",Rr="SpaceToBatchND",Fr="SplitV",Dr="Softmax",Mr="SparseFillEmptyRows",Or="SparseReshape",Lr="SparseSegmentMean",zr="SparseSegmentSum",Pr="SparseToDense",Br="SquaredDifference",Wr="Square",Vr="StridedSlice",Ur="StringNGrams",Gr="StringSplit",Hr="StringToHashBucketFast",jr="Sub",qr="Tan",Kr="Tanh",Xr="Tile",Yr="TopK",Zr="Transform",Jr="Transpose",Qr="Unique",ea="Unpack",ta="UnsortedSegmentSum",na="ZerosLike",ra="Step",aa="FromPixels",sa="RotateWithOffset",ia="_FusedMatMul",oa="FusedConv2D",ua="FusedDepthwiseConv2D",la=nt("kernelRegistry",()=>new Map),ca=nt("gradRegistry",()=>new Map);function da(e,t){const n=xa(e,t);return la.get(n)}function ha(e){return ca.get(e)}function pa(e){const t=la.entries(),n=[];for(;;){const{done:r,value:a}=t.next();if(r)break;const[s,i]=a,[o]=s.split("_");o===e&&n.push(i)}return n}function fa(e){const{kernelName:t,backendName:n}=e,r=xa(t,n);la.has(r)&&qe(`The kernel '${t}' for backend '${n}' is already registered`),la.set(r,e)}function ma(e){const{kernelName:t}=e;ca.has(t)&&Je().getBool("DEBUG")&&qe(`Overriding the gradient for '${t}'`),ca.set(t,e)}function ga(e,t){const n=xa(e,t);if(!la.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);la.delete(n)}function ya(e){if(!ca.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ca.delete(e)}function ba(e,t){pa(e).forEach(e=>{fa(Object.assign({},e,{backendName:t}))})}function xa(e,t){return`${t}_${e}`}var wa=n(570);const va=n.n(wa)()||wa;function ka(e){return va.fromString(e,!0,16)}const Ia=ka("c3a5c85c97cb3127"),Sa=ka("b492b66fbe98f273"),Na=ka("9ae16a3b2f90404f");function Ta(e){return e.xor(e.shru(47))}function Ca(e,t,n){const r=e.slice(t,t+n);return va.fromBytes(Array.from(r),!0,!0)}function $a(e,t){return Ca(e,t,8)}function Ea(e,t){return Ca(e,t,4)}function _a(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Aa(e,t,n=ka("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let a=t.xor(r).mul(n);return a=a.xor(a.shru(47)),a=a.mul(n),a}function Ra(e,t,n,r){return function(e,t,n,r,a,s){a=a.add(e),s=_a(s.add(a).add(r),21);const i=a;return a=(a=a.add(t)).add(n),s=s.add(_a(a,44)),[a.add(r),s.add(i)]}($a(e,t),$a(e,t+8),$a(e,t+16),$a(e,t+24),n,r)}function Fa(e,t=e.length){const n=va.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=Na.add(2*t),r=$a(e,0).add(Na),a=$a(e,t-8);return Aa(_a(a,37).mul(n).add(r),_a(r,25).add(a).mul(n),n)}if(t>=4){const n=Na.add(2*t);return Aa(Ea(e,0).shl(3).add(t),Ea(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return Ta(Na.mul(n).xor(Ia.mul(r))).mul(Na)}return Na}(e,t):function(e,t=e.length){const n=Na.add(2*t),r=$a(e,0).mul(Sa),a=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(Na);return Aa(_a(r.add(a),43).add(_a(s,30)).add(i),r.add(_a(a.add(Na),18)).add(s),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=Na.add(2*t),r=$a(e,0).mul(Na),a=$a(e,8),s=$a(e,t-8).mul(n),i=$a(e,t-16).mul(Na),o=_a(r.add(a),43).add(_a(s,30)).add(i),u=Aa(o,r.add(_a(a.add(Na),18)).add(s),n),l=$a(e,16).mul(n),c=$a(e,24),d=o.add($a(e,t-32)).mul(n),h=u.add($a(e,t-24)).mul(n);return Aa(_a(l.add(c),43).add(_a(d,30)).add(h),l.add(_a(c.add(r),18)).add(d),n)}(e,t);let r=n,a=n.mul(Sa).add(113),s=Ta(a.mul(Na).add(113)).mul(Na),i=[va.UZERO,va.UZERO],o=[va.UZERO,va.UZERO];r=r.mul(Na).add($a(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=_a(r.add(a).add(i[0]).add($a(e,u+8)),37).mul(Sa),a=_a(a.add(i[1]).add($a(e,u+48)),42).mul(Sa),r=r.xor(o[1]),a=a.add(i[0]).add($a(e,u+40)),s=_a(s.add(o[0]),33).mul(Sa),i=Ra(e,u,i[1].mul(Sa),r.add(o[0])),o=Ra(e,u+32,s.add(o[1]),a.add($a(e,u+16))),[s,r]=[r,s],u+=64}while(u!==l);const d=Sa.add(s.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=_a(r.add(a).add(i[0]).add($a(e,u+8)),37).mul(d),a=_a(a.add(i[1]).add($a(e,u+48)),42).mul(d),r=r.xor(o[1].mul(9)),a=a.add(i[0].mul(9).add($a(e,u+40))),s=_a(s.add(o[0]),33).mul(d),i=Ra(e,u,i[1].mul(d),r.add(o[0])),o=Ra(e,u+32,s.add(o[1]),a.add($a(e,u+16))),[s,r]=[r,s],Aa(Aa(i[0],o[0],d).add(Ta(a).mul(Ia)).add(s),Aa(i[1],o[1],d).add(r),d)}function Da(e,t){return"string"===t?za(e):Ma([e],t)}function Ma(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ce(e)),Je().getBool("DEBUG")&&Ne(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Oa(){return Je().platform.now()}function La(e,t){return Je().platform.fetch(e,t)}function za(e,t="utf-8"){return t=t||"utf-8",Je().platform.encode(e,t)}function Pa(e,t="utf-8"){return t=t||"utf-8",Je().platform.decode(e,t)}class Ba{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Va)}profileKernel(e,t,n){let r;const a=()=>{r=n()};let s;const i=Oa();if(this.backendTimer.timerAvailable())s=this.backendTimer.time(a);else{a();for(const e of r)e.dataSync();s=Promise.resolve({kernelMs:Oa()-i})}if(Je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then(t=>{Wa(t,n.dtype,e)})}return{kernelName:e,outputs:r,inputs:t,timeMs:s.then(e=>e.kernelMs),extraInfo:s.then(e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():"")}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:a,extraInfo:s}=e;n.forEach(e=>{Promise.all([e.data(),r,s]).then(n=>{this.logger.logKernelProfile(t,e,n[0],n[1],a,n[2])})})}}function Wa(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Va{logKernelProfile(e,t,n,r,a,s){const i="number"==typeof r?be(`${r}ms`,9):r.error,o=be(e,25),u=t.rank,l=t.size,c=be(t.shape.toString(),14);let d="";for(const e in a){const n=a[e];if(null!=n){const r=n.shape||t.shape,a=r.length;d+=`${e}: ${a}D ${a>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${d}\t%c${s}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Ua(e,t,n,r){const a=Le(t),s=function(e,t,n,r){const a=de(t),s=r[r.length-1],i=new Array(s).fill(0),o=t.length,u="complex64"===n?qa(e):e;if(o>1)for(let e=0;e<a/s;e++){const t=e*s;for(let e=0;e<s;e++)i[e]=Math.max(i[e],Ga(u[t+e],0,n).length)}return i}(e,t,n,a),i=t.length,o=ja(e,t,n,a,s),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map(e=>"    "+e).join("\n")),u.join("\n")}function Ga(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ae(e)?`'${e}'`:"bool"===n?Ha(e):parseFloat(e.toFixed(7)).toString(),be(r,t)}function Ha(e){return 0===e?"false":"true"}function ja(e,t,n,r,a,s=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Ga(qa(e)[0],0,n)]:"bool"===n?[Ha(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),s=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=qa(r),s=qa(s)),["["+r.map((e,t)=>Ga(e,a[t],n)).join(", ")+", ..., "+s.map((e,t)=>Ga(e,a[o-3+t],n)).join(", ")+"]"]}return["["+("complex64"===n?qa(e):Array.from(e)).map((e,t)=>Ga(e,a[t],n)).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),d=r[0]*i,h=[];if(o>20){for(let t=0;t<3;t++){const r=t*d,s=r+d;h.push(...ja(e.slice(r,s),l,n,c,a,!1))}h.push("...");for(let t=o-3;t<o;t++){const r=t*d,s=r+d;h.push(...ja(e.slice(r,s),l,n,c,a,t===o-1))}}else for(let t=0;t<o;t++){const r=t*d,s=r+d;h.push(...ja(e.slice(r,s),l,n,c,a,t===o-1))}const p=2===u?",":"";h[0]="["+h[0]+p;for(let e=1;e<h.length-1;e++)h[e]=" "+h[e]+p;let f=",\n";for(let e=2;e<u;e++)f+="\n";return h[h.length-1]=" "+h[h.length-1]+"]"+(s?"":f),h}function qa(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Ka{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=de(e),null!=n){const e=n.length;oe(e===this.size,()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`)}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||Se(t,this.size),this.strides=Le(e)}set(e,...t){0===t.length&&(t=[0]),oe(t.length===this.rank,()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`);const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Xa().makeTensor(this.values,this.shape,this.dtype)}}let Xa=null,Ya=null,Za=null;class Ja{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=de(e),this.strides=Le(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return Ya.buffer(this.shape,this.dtype,e)}bufferSync(){return Ya.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Pe(this.shape,e,"complex64"===this.dtype)}arraySync(){return Pe(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Xa().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map(e=>Pa(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataSync(){this.throwIfDisposed();const e=Xa().readSync(this.dataId);if("string"===this.dtype)try{return e.map(e=>Pa(e))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Xa().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Xa().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return Ya.print(this,e)}clone(){return this.throwIfDisposed(),Ya.clone(this)}toString(e=!1){return Ua(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),Ya.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Xa().makeVariable(this,e,t,n)}}function Qa(){return nt("Tensor",()=>Ja)}Object.defineProperty(Ja,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Qa();class es extends Ja{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!pe(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Xa().disposeTensor(this),this.dataId=e.dataId,Xa().incRef(this,null)}dispose(){Xa().disposeVariable(this),this.isDisposedInternal=!0}}var ts,ns,rs,as,ss;Object.defineProperty(es,Symbol.hasInstance,{value:e=>e instanceof Ja&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(ts||(ts={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(ns||(ns={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(rs||(rs={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(as||(as={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ss||(ss={}));const is={float32:as,int32:ns,bool:rs,complex64:ss};function os(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return is[e][t]}function us(e){return os(e,"int32")}function ls(e,t){if(e.dtype===t.dtype)return[e,t];const n=os(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function cs(e,t){oe(e.dtype===t.dtype,()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`)}function ds(e,t){return t.some(t=>t.id===e.id)}function hs(e){const t=[];return ps(e,t,new Set),t}function ps(e,t,n){if(null==e)return;if(e instanceof Ja)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const a=e;for(const e in a){const r=a[e];n.has(r)||(n.add(r),ps(r,t,n))}}function fs(e){return null!=e.kernelName}class ms{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map(e=>e.name)))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class gs{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ms}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then(()=>{});if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(qe(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ba(this.backendInstance),!0}setupRegisteredKernels(){pa(this.backendName).forEach(e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)})}disposeRegisteredKernels(e){pa(e).forEach(t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])})}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof Z||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then(n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0))).catch(n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,qe(`Initialization of backend ${e} failed`),qe(n.stack||n.message)),!1));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return qe(`Initialization of backend ${e} failed`),qe(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority)}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:a}=this.initializeBackend(n);if(a||r)return{name:n,asyncInit:a}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,a=this.readSync(t),s=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,a,n.shape,n.dtype,s),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun(()=>this.startScope(r),()=>this.endScope(n),()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return gs.nextTensorId++}nextVariableId(){return gs.nextVariableId++}clone(e){const t=bs.runKernel(yn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],e=>({x:()=>{const t={x:e};return bs.runKernel(Tt,t,{dtype:"float32"})}}),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==da(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let a=0;n.forEach(e=>{a+="complex64"===e.dtype?3:1});const s=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-a-s;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),a=this.state.numBytes,s=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=fs(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(fs(e)){const{kernelName:t,inputs:a,attrs:s}=e;null==this.backendName&&this.backend;const u=da(t,this.backendName);oe(null!=u,()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:a,attrs:s,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map(e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)});if(r){const e=this.getTensorsForGradient(t,a,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,a=e=>{r&&(n=e.map(e=>this.keep(this.clone(e))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy(()=>t(this.backend,a));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,d=fs(e)?null:e.backwardsFunc;let h;return this.scopedRun(()=>this.state.kernelDepth++,()=>this.state.kernelDepth--,()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(h=this.profiler.profileKernel(u,l,()=>i()),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(h),t=h.outputs):t=i()}),r&&this.addTapeNode(u,l,t,d,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-a,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-s,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map(e=>null!=l[e]?l[e].shape:null),outputShapes:t.map(e=>e.shape),kernelTimeMs:h.timeMs,extraInfo:h.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map(e=>this.keep(this.clone(e)));return t}getTensorsForGradient(e,t,n){const r=ha(e);if(null!=r){const e=r.inputsToSave||[],a=r.outputsToSave||[];let s;r.saveAllInputs?(oe(Array.isArray(t),()=>"saveAllInputs is true, expected inputs to be an array."),s=Object.keys(t).map(e=>t[e])):s=e.map(e=>t[e]);const i=n.filter((e,t)=>a[t]);return s.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let a=e;"string"===n&&Ae(e[0])&&(a=e.map(e=>za(e)));const s=r.write(a,t,n),i=new Ja(t,n,s,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(s),t=_e(a);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const a=new Ja(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(a,r),a}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const a=new es(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[a.name])throw new Error(`Variable with name ${a.name} was already registered`);return this.state.registeredVariables[a.name]=a,this.incRef(a,this.backend),a}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ee(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof es||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ee(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map(e=>e.totalBytesSnapshot)),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,a,s){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:a},o=ha(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map((e,t)=>{if(null==e){const e=n[t],r=We(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e}),r(e.length>1?e:e[0],a,s))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=hs(e),n=new Set(t.map(e=>e.id));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach(e=>{e.kept||e.scopeId!==r.id||this.track(e)})}gradients(e,t,n,r=!1){if(oe(t.length>0,()=>"gradients() received an empty list of xs."),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const a=this.scopedRun(()=>this.startTape(),()=>this.endTape(),()=>this.tidy("forward",e));oe(a instanceof Ja,()=>"The result y returned by f() must be a tensor.");const s=function(e,t,n){const r={},a={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const s=e[n],i=s.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){s.outputs.forEach(e=>r[e.id]=!0),o=!0,a[s.id]=!0;break}if(o)break}}const s={};s[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(s[n.outputs[e].id]){for(const e in r)s[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(a[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const a=n.inputs[t];r[a.id]&&(e[t]=a)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,a);if(!r&&0===s.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",()=>{const e={};e[a.id]=null==n?function(e){const t=Be(de(e),"float32");return bs.makeTensor(t,e,"float32")}(a.shape):n,function(e,t,n,r){for(let a=t.length-1;a>=0;a--){const s=t[a],i=[];if(s.outputs.forEach(t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)}),null==s.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${s.kernelName}.`);const o=s.gradient(i);for(const t in s.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const a=n(()=>o[t]());if("float32"!==a.dtype)throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${a.dtype}'`);const i=s.inputs[t];if(!pe(a.shape,i.shape))throw new Error(`Error in gradient for op ${s.kernelName}. The gradient of input '${t}' has shape '${a.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=a;else{const t=e[i.id];e[i.id]=r(t,a),t.dispose()}}}}(e,s,e=>this.tidy(e),xs);const r=t.map(t=>e[t.id]);return 0===this.state.gradientDepth&&(this.state.activeTape.forEach(e=>{for(const t of e.saved)t.dispose()}),this.state.activeTape=null),{value:a,grads:r}})}customGrad(e){return oe(Me(e),()=>"The f passed in customGrad(f) must be a function."),(...t)=>{let n;oe(t.every(e=>e instanceof Ja),()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors");const r={};return t.forEach((e,t)=>{r[t]=e}),this.runKernelFunc({forwardFunc:(r,a)=>(n=e(...t,a),oe(n.value instanceof Ja,()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor"),oe(Me(n.gradFunc),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function."),n.value),backwardsFunc:(e,r)=>{const a=n.gradFunc(e,r),s=Array.isArray(a)?a:[a];oe(s.length===t.length,()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...)."),oe(s.every(e=>e instanceof Ja),()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors.");const i={};return s.forEach((e,t)=>{i[t]=()=>e}),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}async time(e){const t=Oa(),n=await this.backend.time(e);return n.wallMs=Oa()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ms;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function ys(){const e=tt();if(null==e._tfengine){const t=new Ye(e);e._tfengine=new gs(t)}var t;return t=e._tfengine.ENV,et=t,Xa=()=>e._tfengine,e._tfengine}gs.nextTensorId=0,gs.nextVariableId=0;const bs=ys();function xs(e,t){const n={a:e,b:t};return bs.runKernel(it,n)}let ws;function vs(e){ws=e}function ks(e){if(void 0!==ws)return ws;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function Is(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const Ss=Je();function Ns(e,t){let n=e;if($e(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||$e(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&Je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&Ts(e,r,[]),r}function Ts(e,t,n){if(n=n||[],!Array.isArray(e)&&!$e(e))return void oe(0===t.length,()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`);oe(t.length>0,()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`),oe(e.length===t[0],()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`);const r=t.slice(1);for(let t=0;t<e.length;++t)Ts(e[t],r,n.concat(t))}function Cs(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function $s(e,t,n,r="numeric"){if(e instanceof Ja)return Cs(r,e.dtype,t,n),e;let a=De(e);if("string"!==a&&["bool","int32","float32"].indexOf(r)>=0&&(a=r),Cs(r,a,t,n),null==e||!$e(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const s=Ns(e,a);$e(e)||Array.isArray(e)||(e=[e]);const i="string"!==a?Ma(e,a):ce(e,[],!0);return bs.makeTensor(i,s,a)}function Es(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map((e,a)=>$s(e,`${t}[${a}]`,n,r))}Ss.registerFlag("DEBUG",()=>!1,e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")}),Ss.registerFlag("IS_BROWSER",()=>Is()),Ss.registerFlag("IS_NODE",()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node),Ss.registerFlag("IS_CHROME",()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor)),Ss.registerFlag("PROD",()=>!1),Ss.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",()=>Ss.getBool("DEBUG")),Ss.registerFlag("DEPRECATION_WARNINGS_ENABLED",()=>!0),Ss.registerFlag("IS_TEST",()=>!1),Ss.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",()=>!0),Ss.registerFlag("WRAP_TO_IMAGEBITMAP",()=>!1);const _s="__op";function As(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=_s;const a=(...e)=>{bs.startScope(n);try{const t=r(...e);return je(t)&&console.error("Cannot return a Promise inside of tidy."),bs.endScope(t),t}catch(e){throw bs.endScope(null),e}};return Object.defineProperty(a,"name",{value:n,configurable:!0}),a}const Rs=As({complex_:function(e,t){const n=$s(e,"real","complex"),r=$s(t,"imag","complex");ue(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const a={real:n,imag:r};return bs.runKernel(Et,a)}});function Fs(e,t,n,r){if(null==r&&(r=De(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!$e(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Ue(t);const e=de(t),r=de(n);oe(e===r,()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`);for(let e=0;e<n.length;++e){const r=n[e],a=e!==n.length-1||r!==de(t.slice(e));oe(n[e]===t[e]||!a,()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `)}}return $e(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?Ma(e,r):ce(e,[],!0),bs.makeTensor(e,t,r)}function Ds(e,t,n){return Fs(e,t,Ns(e,n),n)}const Ms={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8},Os=4;async function Ls(e,t){const n=[],r=[],a=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);for(let s=0;s<a.length;++s){const i=a[s],o=Array.isArray(e)?e[s].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise(async e=>{const t=await o.bytes(),n=t.reduce((e,t)=>e+t.length,0)+Os*t.length,r=new Uint8Array(n);let a=0;for(let e=0;e<t.length;e++){const n=t[e],s=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(s,a),a+=Os,r.set(n,a),a+=n.length}e(r)});r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Ps(await Promise.all(r)),specs:n}}function zs(e,t){const n={};let r,a=0;for(const s of t){const t=s.name,i=s.dtype,o=s.shape,u=de(o);let l;if("quantization"in s){const n=s.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${s.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${s.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${s.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ms[n.dtype],c=e.slice(a,a+u*o),d="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=qs()),l=r(d)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(d.length);for(let e=0;e<d.length;e++){const t=d[e];l[e]=Math.round(t*n.scale+n.min)}}a+=u*o}else if("string"===i){const t=de(s.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(a,a+Os))[0];a+=Os;const n=new Uint8Array(e.slice(a,a+t));l.push(n),a+=t}}else{const r=Ms[i],s=e.slice(a,a+u*r);if("float32"===i)l=new Float32Array(s);else if("int32"===i)l=new Int32Array(s);else if("bool"===i)l=new Uint8Array(s);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(s);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const a=Ds(e,o,"float32"),i=Ds(r,o,"float32");n[t]=Rs(a,i),a.dispose(),i.dispose()}}a+=u*r}"complex64"!==i&&(n[t]=Ds(l,o,i))}return n}function Ps(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach(e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)});const r=new Uint8Array(t);let a=0;return n.forEach(e=>{r.set(new Uint8Array(e.buffer),a),a+=e.byteLength}),r.buffer}const Bs="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ws(e){return Bs?Buffer.byteLength(e):new Blob([e]).size}function Vs(e){if(1===e.length)return e[0];let t=0;e.forEach(e=>{t+=e.byteLength});const n=new Uint8Array(t);let r=0;return e.forEach(e=>{n.set(new Uint8Array(e),r),r+=e.byteLength}),n.buffer}function Us(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Gs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Hs(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,a]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=a}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function js(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ws(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ws(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function qs(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;!(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const a=new ArrayBuffer(4*r.length),s=new Uint32Array(a);for(let a=0;a<r.length;a++){const i=r[a],o=e[n[i>>10]+(1023&i)]+t[i>>10];s[a]=o}return new Float32Array(a)}}class Ks{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Ks.instance&&(Ks.instance=new Ks),Ks.instance}static registerSaveRouter(e){Ks.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Ks.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Ks.getHandlers(e,"save")}static getLoadHandlers(e,t){return Ks.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Ks.getInstance().loadRouters:Ks.getInstance().saveRouters).forEach(t=>{const a=t(e,n);null!==a&&r.push(a)}),r}}const Xs=e=>Ks.registerSaveRouter(e),Ys=e=>Ks.registerLoadRouter(e),Zs=e=>Ks.getSaveHandlers(e),Js=(e,t)=>Ks.getLoadHandlers(e,t),Qs="tensorflowjs",ei="models_store",ti="model_info_store";function ni(){if(!Je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function ri(e){const t=e.result;t.createObjectStore(ei,{keyPath:"modelPath"}),t.createObjectStore(ti,{keyPath:"modelPath"})}class ai{constructor(e){if(this.indexedDB=ni(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise((e,n)=>{const r=this.indexedDB.open(Qs,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const a=r.result;if(null==t){const t=a.transaction(ei,"readonly"),r=t.objectStore(ei).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return a.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(a.close(),n(r.error)),t.oncomplete=()=>a.close()}else{const r=js(t),s=a.transaction(ti,"readwrite");let i=s.objectStore(ti);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=a.transaction(ei,"readwrite");const o=u.objectStore(ei).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=s.objectStore(ti);const t=i.delete(this.modelPath);t.onsuccess=()=>(a.close(),n(o.error)),t.onerror=e=>(a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}}},r.onerror=e=>n(r.error)})}}ai.URL_SCHEME="indexeddb://";const si=e=>{return Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(ai.URL_SCHEME)?(t=e.slice(ai.URL_SCHEME.length),new ai(t)):null;var t};Ks.registerSaveRouter(si),Ks.registerLoadRouter(si);class ii{constructor(){this.indexedDB=ni()}async listModels(){return new Promise((e,t)=>{const n=this.indexedDB.open(Qs,1);n.onupgradeneeded=()=>ri(n),n.onsuccess=()=>{const r=n.result,a=r.transaction(ti,"readonly"),s=a.objectStore(ti).getAll();s.onsuccess=()=>{const t={};for(const e of s.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},s.onerror=e=>(r.close(),t(s.error)),a.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)})}async removeModel(e){var t;return e=(t=e).startsWith(ai.URL_SCHEME)?t.slice(ai.URL_SCHEME.length):t,new Promise((t,n)=>{const r=this.indexedDB.open(Qs,1);r.onupgradeneeded=()=>ri(r),r.onsuccess=()=>{const a=r.result,s=a.transaction(ti,"readwrite"),i=s.objectStore(ti),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return a.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),s=()=>{u=a.transaction(ei,"readwrite");const r=u.objectStore(ei).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=s,r.onerror=e=>(s(),a.close(),n(o.error))}},o.onerror=e=>(a.close(),n(o.error)),s.oncomplete=()=>{null==u?a.close():u.oncomplete=()=>a.close()}},r.onerror=e=>n(r.error)})}}const oi="/",ui="tensorflowjs_models",li="info",ci="model_topology",di="weight_specs",hi="weight_data",pi="model_metadata";function fi(e){return{info:[ui,e,li].join(oi),topology:[ui,e,ci].join(oi),weightSpecs:[ui,e,di].join(oi),weightData:[ui,e,hi].join(oi),modelMetadata:[ui,e,pi].join(oi)}}function mi(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function gi(e){const t=e.split(oi);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(oi)}class yi{constructor(e){if(!Je().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=fi(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=js(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Bs)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const a={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(a)),{modelArtifactsInfo:r}}catch(e){throw mi(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const a=this.LS.getItem(this.keys.modelMetadata);if(null!=a){const e=JSON.parse(a);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const s=this.LS.getItem(this.keys.weightData);if(null==s)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Bs){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(s),t}}yi.URL_SCHEME="localstorage://";const bi=e=>{return Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(yi.URL_SCHEME)?(t=e.slice(yi.URL_SCHEME.length),new yi(t)):null;var t};Ks.registerSaveRouter(bi),Ks.registerLoadRouter(bi);class xi{constructor(){oe(Je().getBool("IS_BROWSER"),()=>"Current environment is not a web browser"),oe("undefined"==typeof window||void 0!==window.localStorage,()=>"Current browser does not appear to support localStorage"),this.LS=window.localStorage}async listModels(){const e={},t=ui+oi,n=oi+li;for(let r=0;r<this.LS.length;++r){const a=this.LS.key(r);a.startsWith(t)&&a.endsWith(n)&&(e[gi(a)]=JSON.parse(this.LS.getItem(a)))}return e}async removeModel(e){var t;const n=fi(e=(t=e).startsWith(yi.URL_SCHEME)?t.slice(yi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return mi(n),r}}const wi="://";class vi{constructor(){this.managers={}}static getInstance(){return null==vi.instance&&(vi.instance=new vi),vi.instance}static registerManager(e,t){oe(null!=e,()=>"scheme must not be undefined or null."),e.endsWith(wi)&&(e=e.slice(0,e.indexOf(wi))),oe(e.length>0,()=>"scheme must not be an empty string.");const n=vi.getInstance();oe(null==n.managers[e],()=>`A model store manager is already registered for scheme '${e}'.`),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function ki(e){if(-1===e.indexOf(wi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${vi.getSchemes().join(",")}`);return{scheme:e.split(wi)[0],path:e.split(wi)[1]}}async function Ii(e,t,n=!1){oe(e!==t,()=>`Old path and new path are the same: '${e}'`);const r=Ks.getLoadHandlers(e);oe(r.length>0,()=>`Copying failed because no load handler is found for source URL ${e}.`),oe(r.length<2,()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`);const a=r[0],s=Ks.getSaveHandlers(t);oe(s.length>0,()=>`Copying failed because no save handler is found for destination URL ${t}.`),oe(s.length<2,()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`);const i=s[0],o=ki(e).scheme,u=ki(e).path,l=o===ki(e).scheme,c=await a.load();n&&l&&await vi.getManager(o).removeModel(u);const d=await i.save(c);return n&&!l&&await vi.getManager(o).removeModel(u),d.modelArtifactsInfo}async function Si(){const e=vi.getSchemes(),t={};for(const n of e){const e=await vi.getManager(n).listModels();for(const r in e)t[n+wi+r]=e[r]}return t}async function Ni(e){const t=ki(e);return vi.getManager(t.scheme).removeModel(t.path)}async function Ti(e,t){return Ii(e,t,!1)}async function Ci(e,t){return Ii(e,t,!0)}class $i{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(Je().get("IS_BROWSER")){Je().setPlatform("browser",new $i);try{vi.registerManager(yi.URL_SCHEME,new xi)}catch(e){}try{vi.registerManager(ai.URL_SCHEME,new ii)}catch(e){}}let Ei;function _i(e,t="float32",n){return t=t||"float32",Ue(e),new Ka(e,t,n)}Je().get("IS_NODE")&&Je().setPlatform("node",new class{constructor(){this.util=n(590),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=Je().global.fetch?Je().global.fetch(e,t):(null==Ei&&(Ei=n(817)),Ei(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ai=As({cast_:function(e,t){const n=$s(e,"x","cast");if(!Te(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},a={dtype:t};return bs.runKernel(Tt,r,a)}}),Ri=As({clone_:function(e){const t={x:$s(e,"x","clone","string_or_numeric")};return bs.runKernel(yn,t)}});function Fi(e,t=!1){console.log(e.toString(t))}function Di(e){return new Promise(e=>setTimeout(e)).then(e)}ys(),Ya={buffer:_i,cast:Ai,clone:Ri,print:Fi};class Mi{constructor(e){if(!Je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Mi.URL_SCHEME)&&(e=e.slice(Mi.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Gs(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),a=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(a.download=this.modelJsonFileName,a.href=r,await Di(()=>a.dispatchEvent(new MouseEvent("click"))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Di(()=>e.dispatchEvent(new MouseEvent("click")))}return{modelArtifactsInfo:js(e)}}}}Mi.URL_SCHEME="downloads://";class Oi{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),a=r.modelTopology;if(null==a)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:a});const s=Hs(r,e=>this.loadWeights(e));e(s)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)})}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),a=n.map(e=>this.loadWeightsFile(e,r[e]));return Promise.all(a).then(e=>[t,Vs(e)])}loadWeightsFile(e,t){return new Promise((n,r)=>{const a=new FileReader;a.onload=e=>{const t=e.target.result;n(t)},a.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),a.readAsArrayBuffer(t)})}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map(e=>Us(e.name)),r={};for(const a of e)a.paths.forEach(e=>{const a=Us(e);if(-1!==t.indexOf(a))throw new Error(`Duplicate file basename found in weights manifest: '${a}'`);if(t.push(a),-1===n.indexOf(a))throw new Error(`Weight file with basename '${a}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(a)]});if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function Li(e){return new Oi(e)}function zi(e,t,n,r){!function(e){oe(null!=e&&Array.isArray(e)&&e.length>0,()=>"promises must be a none empty array")}(e),function(e,t){oe(e>=0&&e<=1,()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`),oe(t>=0&&t<=1,()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`),oe(t>=e,()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`)}(n=null==n?0:n,r=null==r?1:r);let a=0;return Promise.all(e.map(s=>(s.then(s=>{const i=n+ ++a/e.length*(r-n);return t(i),s}),s)))}async function Pi(e,t){null==t&&(t={});const n=null==t.fetchFunc?Je().platform.fetch:t.fetchFunc,r=e.map(e=>n(e,t.requestInit,{isBinary:!0})),a=(null==t.onProgress?await Promise.all(r):await zi(r,t.onProgress,0,.5)).map(e=>e.arrayBuffer());return null==t.onProgress?await Promise.all(a):await zi(a,t.onProgress,.5,1)}async function Bi(e,t="",n,r){return Wi(e=>Pi(e,{requestInit:r}))(e,t,n)}function Wi(e){return async(t,n="",r)=>{const a=t.map(()=>!1),s={},i=null!=r?r.map(()=>!1):[],o=[];if(t.forEach((e,t)=>{let n=0;e.weights.forEach(e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Ms[u]*de(e.shape),c=()=>{a[t]=!0,null==s[t]&&(s[t]=[]),s[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach((t,n)=>{t===e.name&&(c(),i[n]=!0)}):c(),o.push(e.name),n+=l})}),!i.every(e=>e)){const e=r.filter((e,t)=>!i[t]);throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=a.reduce((e,t,n)=>(t&&e.push(n),e),[]),l=[];u.forEach(e=>{t[e].paths.forEach(e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)})});const c=await e(l),d={};let h=0;return u.forEach(e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[h+e].byteLength;const a=new ArrayBuffer(r),i=new Uint8Array(a);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[h+e]);i.set(t,o),o+=t.byteLength}s[e].forEach(e=>{const t=zs(a.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)d[e]=t[e]}),h+=n}),d}}Ks.registerSaveRouter(e=>Je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Mi.URL_SCHEME)?function(e="model"){return new Mi(e)}(e.slice(Mi.URL_SCHEME.length)):null);class Vi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(oe("function"==typeof t.fetchFunc,()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)"),this.fetch=t.fetchFunc):this.fetch=Je().platform.fetch,oe(null!=e&&e.length>0,()=>"URL path for http must not be null, undefined or empty."),Array.isArray(e)&&oe(2===e.length,()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Gs(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:js(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Hs(t,e=>this.loadWeights(e))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),a=this.weightPathPrefix||n,s=[];for(const t of e)s.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(a+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[s,Vs(await Pi(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Ui(e){return null!=e.match(Vi.URL_SCHEME_REGEX)}Vi.URL_SCHEME_REGEX=/^https?:\/\//;const Gi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every(e=>Ui(e)):Ui(e),n)return Hi(e,t)}return null};function Hi(e,t){return new Vi(e,t)}function ji(e,t){return Hi(e,t)}Ks.registerSaveRouter(Gi),Ks.registerLoadRouter(Gi);class qi{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Ki{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Xi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new qi(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qi({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new qi({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Yi(e){return new Ki(e)}const Zi=As({matMul_:function(e,t,n=!1,r=!1){let a=$s(e,"a","matMul"),s=$s(t,"b","matMul");[a,s]=ls(a,s);const i={a,b:s},o={transposeA:n,transposeB:r};return bs.runKernel(vt,i,o)}}),Ji=As({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const a={indices:$s(e,"indices","oneHot","int32")},s={depth:t,onValue:n,offValue:r};return bs.runKernel(tr,a,s)}}),Qi=As({transpose_:function(e,t){const n=$s(e,"x","transpose");if(null==t&&(t=n.shape.map((e,t)=>t).reverse()),oe(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`),t.forEach(e=>{oe(e>=0&&e<n.rank,()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`)}),n.rank<=1)return n.clone();const r={x:n},a={perm:t};return bs.runKernel(Jr,r,a)}}),eo=As({confusionMatrix_:function(e,t,n){const r=$s(e,"labels","confusionMatrix"),a=$s(t,"predictions","confusionMatrix");oe(null==n||n>0&&Number.isInteger(n),()=>`If provided, numClasses must be a positive integer, but got ${n}`),oe(1===r.rank,()=>`Expected the rank of labels to be 1, but got ${r.rank}`),oe(1===a.rank,()=>`Expected the rank of predictions to be 1, but got ${a.rank}`),oe(r.shape[0]===a.shape[0],()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${a.shape[0]}. Labels and predictions should have the same number of elements.`),oe(n>0&&Number.isInteger(n),()=>`numClasses is required to be a positive integer, but got ${n}`);const s=Ji(Ai(r,"int32"),n),i=Ji(Ai(a,"int32"),n),o=Qi(s),u=Zi(o,i);return Ai(u,"int32")}});function to(e,t,n){if(le(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=Ns(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}let no;function ro(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,a=!1,s=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)a=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)s=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(a){const t=2;if(a&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=da(aa,bs.backendName)){const n={pixels:e},r={numChannels:t};return bs.runKernel(aa,n,r)}const[u,l]=a?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,d;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(s||a||o){if(null==no)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");no=new OffscreenCanvas(1,1).getContext("2d")}else no=document.createElement("canvas").getContext("2d");no.canvas.width=u,no.canvas.height=l,no.drawImage(e,0,0,u,l),c=no.getImageData(0,0,u,l).data}if(4===t)d=new Int32Array(c);else{const e=u*l;d=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)d[n*t+e]=c[4*n+e]}return to(d,[l,u,t],"int32")}async function ao(e,t=3){let n=null;if(Je().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return ro(n,t)}async function so(e,t){let n=$s(e,"img","toPixels");if(!(e instanceof Ja)){const e=n;n=Ai(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,a]=n.shape.slice(0,2),s=2===n.rank?1:n.shape[2];if(s>4||2===s)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${s}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(a*r*4);for(let e=0;e<r*a;++e){const t=[0,0,0,255];for(let r=0;r<s;r++){const a=i[e*s+r];if("float32"===n.dtype){if(a<0||a>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${a}.`)}else if("int32"===n.dtype&&(a<0||a>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${a}.`);1===s?(t[0]=a*o,t[1]=a*o,t[2]=a*o):t[r]=a*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=a,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,a,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const io=As({fromPixels_:ro});function oo(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===de(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const a=t.shape,s=a[a.length-1];let i=1;for(let e=0;e<a.length-1;++e)i*=a[e];const o=e.shape,u=a.slice();u.pop();let l=1;for(let e=s;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Le(e.shape).map(e=>e/l),1].slice(0,s);return[u,i,l,c]}function uo(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,a=t.rank>1?t.rank-1:1,s=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${a}.`;if(n.rank<a)throw new Error(s+` update.rank < ${a}. `);if(e.length<r+(n.rank-a))throw new Error(s+` Output shape length < ${r+(n.rank-a)}`);if(n.rank!==a+e.length-r)throw new Error(s+" update.rank != "+(a+e.length-r));for(let e=0;e<a;++e)if(n.shape[e]!==t.shape[e])throw new Error(s+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-a;++t)if(n.shape[t+a]!==e[t+r])throw new Error(s+` updates.shape[${t+a}] (${n.shape[t+a]}) != shape[${t+a}] (${e[t+a]})`)}function lo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}uo(n,t,e)}function co(e,t,n){const r=t.shape.length,a=r>1?t.shape[r-1]:1,s=n.length;let i=1;for(let e=a;e<s;++e)i*=n[e];const o=a<1?1:a;return{sliceRank:a,numUpdates:de(t.shape)/o,sliceSize:i,strides:[...Le(n.slice(0,a)),1],outputSize:de(n)}}const ho=-2,po=-1;function fo(e,t,n){const r=e.shape.length;oe(r===t.length,()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`),oe(r===n.length,()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`);for(let a=0;a<r;++a)oe(t[a]+n[a]<=e.shape[a],()=>`Error in slice${r}D: begin[${a}] + size[${a}] (${t[a]+n[a]}) would overflow input.shape[${a}] (${e.shape[a]})`)}function mo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function go(e,t,n){const r=[];for(let a=0;a<e.length;a++)r[a]=Math.ceil((t[a]-e[a])/n[a]);return r}function yo(e,t,n,r){const a=[...e];for(let e=a.length;e<r.length;e++)a.push(1);for(let e=0;e<n;e++)0===e?a[t]=1:(a.splice(t,0,1),a.pop());return a}function bo(e,t,n){return n<=e?n:n-(t-1)}function xo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function wo(e,t,n,r,a,s,i,o,u){const l=e.length;let c=new Array(l),d=new Array(l),h=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=vo(i,u,l,r,e),d=ko(o,u,l,a,e),h=yo(s,u,l,e)}else for(let t=0;t<l;t++)c[t]=So(i,r,s,e,t,u),d[t]=No(o,a,s,e,t,u),h[t]=Io(s,t,u);return{begin:c,end:d,strides:h}}function vo(e,t,n,r,a){const s=[...a],i=xo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=0;else{const i=bo(t,n,a);let o=r[i];e&1<<i&&(o=0),s[a]=o}return s}function ko(e,t,n,r,a){const s=[...a],i=xo(n,t);for(let a=0;a<s.length;a++)if(i.indexOf(a)>-1)s[a]=Number.MAX_SAFE_INTEGER;else{const i=bo(t,n,a);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),s[a]=o}for(let e=0;e<s.length;e++){const t=a[e];s[e]<0&&(s[e]+=t),s[e]=te(0,s[e],a[e])}return s}function Io(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function So(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=te(0,i,u-1),i}function No(e,t,n,r,a,s){let i=t[a];const o=n[a]||1;(e&1<<a||s&1<<a||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[a];return i<0&&(i+=u),i=o>0?te(0,i,u):te(-1,i,u-1),i}function To(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let a=r+1;a<n.length;a++)if(t[a]>0||n[a]!==e[a])return!1;return!0}function Co(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function $o(e,t,n){let r;const a=e.shape.length;let s;return r="number"==typeof t?[t,...new Array(a-1).fill(0)]:t.length<a?t.concat(new Array(a-t.length).fill(0)):t.slice(),r.forEach(e=>{oe(-1!==e,()=>"slice() does not support negative begin indexing.")}),s=null==n?new Array(a).fill(-1):"number"==typeof n?[n,...new Array(a-1).fill(-1)]:n.length<a?n.concat(new Array(a-n.length).fill(-1)):n,s=s.map((t,n)=>t>=0?t:(oe(-1===t,()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`),e.shape[n]-r[n])),[r,s]}function Eo(e,t,n,r,a,s,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&i&i-1)throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const d={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<d.dims;e++)c&&1<<e&o&&d.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(d.ellipsisMask|=1<<d.dims,d.dims++);const h={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const a=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<a;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(ho),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(po),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(d,h);let p=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===h.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(h.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const a=[h.beginMask&1<<t,h.endMask&1<<t],s=[h.strides[t]>0?0:-1,h.strides[t]>0?r:r-1];if(n&&h.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===h.strides[t];const i=!!(h.beginMask&1<<t&&h.endMask&1<<t);if(h.beginValid&&h.endValid){if(n){const e=h.begin[t]<0?r+h.begin[t]:h.begin[t];if(h.begin[t]=e,h.end[t]=h.begin[t]+1,e<0||e>=r)throw Error(`slice index ${h.begin[t]} of dimension ${t} out of bounds.`)}else h.begin[t]=_o(h.begin[t],0,h.strides[t],r,a,s),h.end[t]=_o(h.end[t],1,h.strides[t],r,a,s);const e=1===h.strides[t]&&0===h.begin[t]&&h.end[t]===r;p=p&&e,f=f&&(0===t&&1===h.strides[t]||e)}else p=p&&1===h.strides[t]&&i,f=f&&(0===t&&1===h.strides[t]||i);let o,u=!1;if(h.beginValid&&h.endValid?(o=h.end[t]-h.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=h.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=h.strides[t]<0?0:Math.trunc(o/h.strides[t])+(o%h.strides[t]!==0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<h.finalShapeGatherIndices.length;++e){const t=h.finalShapeGatherIndices[e];t>=0?y.push(g[t]):t===ho&&y.push(1)}return{finalShapeSparse:y.filter((e,t)=>h.finalShapeGatherIndices[t]!==ho),finalShape:y,isIdentity:p,sliceDim0:f,isSimpleSlice:m,begin:h.begin,end:h.end,strides:h.strides}}function _o(e,t,n,r,a,s){if(a[t])return n>0?s[t]:s[t+1&1];{const t=e<0?r+e:e;return t<s[0]?s[0]:t>s[1]?s[1]:t}}class Ao{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Ro{constructor(){this.classNameMap={}}static getMap(){return null==Ro.instance&&(Ro.instance=new Ro),Ro.instance}static register(e){Ro.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Fo(e){oe(null!=e.className,()=>"Class being registered does not have the static className property defined."),oe("string"==typeof e.className,()=>"className is required to be a string, but got type "+typeof e.className),oe(e.className.length>0,()=>"Class being registered has an empty-string as its className, which is disallowed."),Ro.register(e)}const Do=.001,Mo=.1;function Oo(e,t,n){return null==n&&(n=Lo()),zo(e,t,(e,t)=>Vo(e,t,n))}function Lo(){return 32===bs.backend.floatPrecision()?Do:Mo}function zo(e,t,n){let r=!0;if(($e(e)||$e(t))&&(r=!1),$e(e)&&$e(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=Ns(e),r=Ns(t);if(!pe(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const a=$e(e)?e:ce(e),s=$e(t)?t:ce(t);if(a.length!==s.length)throw new Error(`Arrays have different lengths actual: ${a.length} vs expected: ${s.length}.\nActual:   ${a}.\nExpected: ${s}.`);for(let e=0;e<s.length;++e){const t=a[e],r=s[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${a}.\nExpected: ${s}.`)}}function Po(e,t){e().then(()=>t.fail(),()=>t())}function Bo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ae(e)||Ae(e[0])||Ae(t)||Ae(t[0])?zo(e,n,(e,t)=>e==t):zo(e,t,(e,t)=>Vo(e,t,0))}function Wo(e,t,n){if(null==n&&(n=Lo()),!Vo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Vo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Uo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function Go(e,t){expect(new Float32Array(e)).toEqual(new Float32Array(t))}function Ho(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Ho(n):e[t]=za(n)}return e}const jo="3.11.0";function qo(){Je().set("PROD",!0)}function Ko(){Je().set("DEBUG",!0)}function Xo(){Je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Yo(e){Je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function Zo(){bs.disposeVariables()}function Jo(){return bs}function Qo(){return bs.memory()}function eu(e){return bs.profile(e)}function tu(e,t){return bs.tidy(e,t)}function nu(e){hs(e).forEach(e=>e.dispose())}function ru(e){return bs.keep(e)}function au(e){return bs.time(e)}function su(e){return bs.setBackend(e)}function iu(){return bs.ready()}function ou(){return bs.backendName}function uu(e){bs.removeBackend(e)}function lu(e){return bs.findBackend(e)}function cu(e){return bs.findBackendFactory(e)}function du(e,t,n=1){return bs.registerBackend(e,t,n)}function hu(){return bs.backend}function pu(e,t){Je().setPlatform(e,t)}Za=Yo;const fu=As({add_:function(e,t){let n=$s(e,"a","add"),r=$s(t,"b","add");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(it,a)}}),mu=As({floorDiv_:function(e,t){let n=$s(e,"a","floorDiv"),r=$s(t,"b","floorDiv");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(dn,a)}}),gu=As({div_:function(e,t){let n=$s(e,"a","div"),r=$s(t,"b","div");if([n,r]=ls(n,r),"int32"===n.dtype&&"int32"===r.dtype)return mu(n,r);const a={a:n,b:r};return bs.runKernel(Zt,a,{})}}),yu=As({mul_:function(e,t){let n=$s(e,"a","mul"),r=$s(t,"b","mul");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(Kn,a)}}),bu=As({sqrt_:function(e){const t={x:$s(e,"x","sqrt","float32")};return bs.runKernel(_r,t)}}),xu=As({square_:function(e){const t=$s(e,"x","square");return bs.runKernel("Square",{x:t},{})}}),wu=As({zerosLike_:function(e){const t={x:$s(e,"x","zerosLike")};return bs.runKernel(na,t)}});function vu(e){return oe(Me(e),()=>"The f passed in grad(f) must be a function"),(t,n)=>{const r=$s(t,"x","tf.grad","string_or_numeric"),a=null!=n?$s(n,"dy","tf.grad"):null;return bs.tidy(()=>{const{value:t,grads:n}=bs.gradients(()=>e(r),[r],a);return null!=a&&ue(t.shape,a.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),Cu(n),n[0]})}}function ku(e){return oe(Me(e),()=>"The f passed in grads(f) must be a function"),(t,n)=>{oe(Array.isArray(t),()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s");const r=Es(t,"args","tf.grads","string_or_numeric"),a=null!=n?$s(n,"dy","tf.grads"):null;return bs.tidy(()=>{const{value:t,grads:n}=bs.gradients(()=>e(...r),r,a);return null!=a&&ue(t.shape,a.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Cu(n),n})}}function Iu(e){return oe(Me(e),()=>"The f passed in valueAndGrad(f) must be a function"),(t,n)=>{oe(t instanceof Ja,()=>"The x passed in valueAndGrad(f)(x) must be a tensor"),oe(null==n||n instanceof Ja,()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor");const{grads:r,value:a}=bs.gradients(()=>e(t),[t],n);return Cu(r),{grad:r[0],value:a}}}function Su(e){return oe(Me(e),()=>"The f passed in valueAndGrads(f) must be a function"),(t,n)=>{oe(Array.isArray(t)&&t.every(e=>e instanceof Ja),()=>"The args passed in valueAndGrads(f)(args) must be array of tensors"),oe(null==n||n instanceof Ja,()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor");const r=bs.gradients(()=>e(...t),t,n);return null!=n&&ue(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),Cu(r.grads),r}}function Nu(e,t){oe(Me(e),()=>"The f passed in variableGrads(f) must be a function"),oe(null==t||Array.isArray(t)&&t.every(e=>e instanceof es),()=>"The varList passed in variableGrads(f, varList) must be an array of variables");const n=null!=t;if(!n){t=[];for(const e in bs.registeredVariables)t.push(bs.registeredVariables[e])}const r=n?t.filter(e=>!e.trainable):null,a=t.length;t=t.filter(e=>e.trainable),oe(t.length>0,()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${a} variables is trainable.`);const{value:s,grads:i}=bs.gradients(e,t,null,!0);oe(i.some(e=>null!=e),()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize()."),oe(0===s.rank,()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${s.rank} tensor`);const o={};return t.forEach((e,t)=>{null!=i[t]&&(o[e.name]=i[t])}),null!=r&&r.forEach(e=>o[e.name]=null),{value:s,grads:o}}function Tu(e){return bs.customGrad(e)}function Cu(e){if(e.filter(e=>null==e).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function $u(e,t){if(($e(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&$e(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Fs(e,[],[],t)}class Eu extends Ao{minimize(e,t=!1,n){const{value:r,grads:a}=this.computeGradients(e,n);if(null!=n){const e=n.map(e=>({name:e.name,tensor:a[e.name]}));this.applyGradients(e)}else this.applyGradients(a);return nu(a),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return Nu(e,t)}dispose(){null!=this.iterations_&&nu(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:$u(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Eu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class _u extends Eu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=bs.registeredVariables[t],a=!1;null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:tu(()=>wu(r).variable(a))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:tu(()=>wu(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedGrads[n].variable,o=this.accumulatedUpdates[n].variable;tu(()=>{const e=fu(yu(i,this.rho),yu(xu(s),1-this.rho)),t=yu(gu(bu(fu(o,this.epsilon)),bu(fu(i,this.epsilon))),s),n=fu(yu(o,this.rho),yu(xu(t),1-this.rho));i.assign(e),o.assign(n);const a=fu(yu(t,-this.learningRate),r);r.assign(a)})}),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(nu(this.accumulatedGrads.map(e=>e.variable)),nu(this.accumulatedUpdates.map(e=>e.variable)))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2,n=!1;this.accumulatedGrads=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedUpdates=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Au(e,t,n){const r={shape:e,value:t,dtype:n};return bs.runKernel(un,{},r)}_u.className="Adadelta",Fo(_u);class Ru extends Eu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=bs.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:tu(()=>Au(r.shape,this.initialAccumulatorValue).variable(e))}}const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const s=this.accumulatedGrads[n].variable;tu(()=>{const e=fu(s,xu(a));s.assign(e);const t=fu(yu(gu(a,bu(fu(e,bs.backend.epsilon()))),-this.learningRate),r);r.assign(t)})}),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&nu(this.accumulatedGrads.map(e=>e.variable))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Ru.className="Adagrad",Fo(Ru);const Fu=As({pow_:function(e,t){let n=$s(e,"base","pow"),r=$s(t,"exp","pow");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(sr,a)}}),Du=As({sub_:function(e,t){let n=$s(e,"a","sub"),r=$s(t,"b","sub");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(jr,a)}});class Mu extends Eu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],tu(()=>{this.accBeta1=$u(t).variable(),this.accBeta2=$u(n).variable()}),null==r&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);tu(()=>{const n=Du(1,this.accBeta1),r=Du(1,this.accBeta2);t.forEach((t,a)=>{const s=bs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:tu(()=>wu(s).variable(i))}),null==this.accumulatedSecondMoment[a]&&(this.accumulatedSecondMoment[a]={originalName:`${t}/v`,variable:tu(()=>wu(s).variable(i))});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedSecondMoment[a].variable,c=fu(yu(u,this.beta1),yu(o,1-this.beta1)),d=fu(yu(l,this.beta2),yu(xu(o),1-this.beta2)),h=gu(c,n),p=gu(d,r);u.assign(c),l.assign(d);const f=fu(yu(gu(h,fu(bu(p),this.epsilon)),-this.learningRate),s);s.assign(f)}),this.accBeta1.assign(yu(this.accBeta1,this.beta1)),this.accBeta2.assign(yu(this.accBeta2,this.beta2))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&nu(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedSecondMoment&&nu(this.accumulatedSecondMoment.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),tu(()=>{this.accBeta1.assign(Fu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Fu(this.beta2,this.iterations_+1))});const t=e.length/2,n=!1;this.accumulatedFirstMoment=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedSecondMoment=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)}))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Mu.className="Adam",Fo(Mu);const Ou=As({abs_:function(e){const t=$s(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return bs.runKernel(_t,e)}{const e={x:t};return bs.runKernel(rt,e)}}});function Lu(e,t){const n=e.length,r=[];for(let a=0;a<n;a++){const s=n-1-a,i=e[s]||1;(t[t.length-1-a]||1)>1&&1===i&&r.unshift(s)}return r}function zu(e,t){const n=[];for(let r=0;r<t.length;r++){const a=e[e.length-r-1],s=t.length-r-1,i=t[s];(null==a||1===a&&i>1)&&n.unshift(s)}return n}function Pu(e,t){const n=[],r=Math.max(e.length,t.length);for(let a=0;a<r;a++){let r=e[e.length-a-1];null==r&&(r=1);let s=t[t.length-a-1];if(null==s&&(s=1),1===r)n.unshift(s);else if(1===s)n.unshift(r);else{if(r!==s)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}const Bu=As({maximum_:function(e,t){let n=$s(e,"a","maximum"),r=$s(t,"b","maximum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=Ai(n,"int32"),r=Ai(r,"int32")),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(On,a)}});class Wu extends Eu{constructor(e,t,n,r=null,a=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=a,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],tu(()=>{this.iteration=$u(0).variable(),this.accBeta1=$u(t).variable()}),null==r&&(this.epsilon=bs.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map(e=>e.name):Object.keys(e);tu(()=>{const n=Du(1,this.accBeta1),r=gu(-this.learningRate,fu(yu(this.iteration,this.decay),1));t.forEach((t,a)=>{const s=bs.registeredVariables[t],i=!1;null==this.accumulatedFirstMoment[a]&&(this.accumulatedFirstMoment[a]={originalName:`${t}/m`,variable:wu(s).variable(i)}),null==this.accumulatedWeightedInfNorm[a]&&(this.accumulatedWeightedInfNorm[a]={originalName:`${t}/v`,variable:wu(s).variable(i)});const o=Array.isArray(e)?e[a].tensor:e[t];if(null==o)return;const u=this.accumulatedFirstMoment[a].variable,l=this.accumulatedWeightedInfNorm[a].variable,c=fu(yu(u,this.beta1),yu(o,1-this.beta1)),d=yu(l,this.beta2),h=Ou(o),p=Bu(d,h);u.assign(c),l.assign(p);const f=fu(yu(gu(r,n),gu(c,fu(p,this.epsilon))),s);s.assign(f)}),this.iteration.assign(fu(this.iteration,1)),this.accBeta1.assign(yu(this.accBeta1,this.beta1))}),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&nu(this.accumulatedFirstMoment.map(e=>e.variable)),null!=this.accumulatedWeightedInfNorm&&nu(this.accumulatedWeightedInfNorm.map(e=>e.variable))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Wu.className="Adamax",Fo(Wu);class Vu extends Eu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=bs.registeredVariables[t];tu(()=>{const e=fu(yu(this.c,r),a);a.assign(e)})}),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=ru($u(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Vu.className="SGD",Fo(Vu);class Uu extends Vu{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=$u(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=bs.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:tu(()=>wu(r).variable(e))}}const a=this.accumulations[n].variable,s=Array.isArray(e)?e[n].tensor:e[t];null!=s&&tu(()=>{let e;const t=fu(yu(this.m,a),s);e=this.useNesterov?fu(yu(this.c,fu(s,yu(t,this.m))),r):fu(yu(this.c,t),r),a.assign(t),r.assign(e)})}),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&nu(this.accumulations.map(e=>e.variable))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map(e=>({originalName:e.name,variable:e.tensor.variable(!1)}))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Uu.className="Momentum",Fo(Uu);class Gu extends Eu{constructor(e,t=.9,n=0,r=null,a=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=a,null==r&&(this.epsilon=bs.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map(e=>e.name):Object.keys(e)).forEach((t,n)=>{const r=bs.registeredVariables[t],a=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:tu(()=>wu(r).variable(a))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:tu(()=>wu(r).variable(a))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:tu(()=>wu(r).variable(a))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;tu(()=>{const e=fu(yu(i,this.decay),yu(xu(s),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,a=fu(yu(t,this.decay),yu(s,1-this.decay)),u=gu(yu(s,this.learningRate),bu(Du(e,fu(xu(a),this.epsilon)))),l=fu(yu(o,this.momentum),u);i.assign(e),t.assign(a),o.assign(l);const c=Du(r,l);r.assign(c)}else{const e=fu(yu(i,this.decay),yu(xu(s),1-this.decay)),t=fu(yu(o,this.momentum),gu(yu(s,this.learningRate),bu(fu(e,this.epsilon))));i.assign(e),o.assign(t);const n=Du(r,t);r.assign(n)}})}),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&nu(this.accumulatedMeanSquares.map(e=>e.variable)),null!=this.accumulatedMeanGrads&&this.centered&&nu(this.accumulatedMeanGrads.map(e=>e.variable)),null!=this.accumulatedMoments&&nu(this.accumulatedMoments.map(e=>e.variable))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map(e=>({name:e.originalName,tensor:e.variable})))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.accumulatedMoments=e.slice(t,2*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map(e=>({originalName:e.name,variable:e.tensor.variable(n)})))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Gu.className="RMSProp",Fo(Gu);class Hu{static sgd(e){return new Vu(e)}static momentum(e,t,n=!1){return new Uu(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,a=!1){return new Gu(e,t,n,r,a)}static adam(e=.001,t=.9,n=.999,r=null){return new Mu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new _u(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,a=0){return new Wu(e,t,n,r,a)}static adagrad(e,t=.1){return new Ru(e,t)}}const ju=As({acos_:function(e){const t={x:$s(e,"x","acos")};return bs.runKernel(at,t)}}),qu=As({acosh_:function(e){const t={x:$s(e,"x","acosh")};return bs.runKernel(st,t)}}),Ku=As({addN_:function(e){oe(Array.isArray(e),()=>"The argument passed to tf.addN() must be a list of tensors"),oe(e.length>=1,()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`);const t=e.map((e,t)=>$s(e,`tensors${t}`,"addN")),n=t[0];t.forEach(e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")}),t.forEach(e=>{if(!pe(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")});const r=t;return bs.runKernel(ot,r)}}),Xu=As({all_:function(e,t=null,n=!1){const r={x:$s(e,"x","all","bool")},a={axis:t,keepDims:n};return bs.runKernel(ut,r,a)}}),Yu=As({any_:function(e,t=null,n=!1){const r={x:$s(e,"x","any","bool")},a={axis:t,keepDims:n};return bs.runKernel(lt,r,a)}}),Zu=As({argMax_:function(e,t=0){const n={x:$s(e,"x","argMax")},r={axis:t};return bs.runKernel(ct,n,r)}}),Ju=As({argMin_:function(e,t=0){const n={x:$s(e,"x","argMin")},r={axis:t};return bs.runKernel(dt,n,r)}}),Qu=As({asin_:function(e){const t={x:$s(e,"x","asin")};return bs.runKernel(ht,t)}}),el=As({asinh_:function(e){const t={x:$s(e,"x","asinh")};return bs.runKernel(pt,t)}}),tl=As({atan_:function(e){const t={x:$s(e,"x","atan")};return bs.runKernel(ft,t)}}),nl=As({atan2_:function(e,t){let n=$s(e,"a","atan2"),r=$s(t,"b","atan2");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(gt,a)}}),rl=As({atanh_:function(e){const t={x:$s(e,"x","atanh")};return bs.runKernel(mt,t)}});function al(e,t,n,r,a="NHWC",s){return ol(e,[...t,e[3]],n,s,r,null,null,gl(a))}function sl(e,t,n,r,a,s,i="channelsLast"){const[o,u]=cl(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return ol(e,l,n,r,a,s,!1,i)}function il(e,t,n,r,a,s,i="NDHWC"){const[o,u,l]=dl(t);let c,d;if("NDHWC"===i)d="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);d="channelsFirst",c=[o,u,l,e[1],e[1]]}return ul(e,c,n,r,a,!1,d,s)}function ol(e,t,n,r,a,s,i=!1,o="channelsLast"){let[u,l,c,d]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,d]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,d,l,c]=e}const[h,p,,f]=t,[m,g]=cl(n),[y,b]=cl(r),x=hl(h,y),w=hl(p,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,r,a,s,i,o,u){let l,c,d;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,a){null==r&&(r=ll(e,t,n));const s=e[1];return[pl((e[0]-t+2*r)/n+1,a),pl((s-t+2*r)/n+1,a)]}([t,n],s,r,e,o);c=a[0],d=a[1]}else if("same"===e){c=Math.ceil(t/r),d=Math.ceil(n/a);const e=Math.max(0,(c-1)*r+s-t),o=Math.max(0,(d-1)*a+i-n),u=Math.floor(e/2),h=e-u,p=Math.floor(o/2);l={top:u,bottom:h,left:p,right:o-p,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-s+1)/r),d=Math.ceil((n-i+1)/a);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const h="channelsLast"===u?e[1][0]:e[2][0],p="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:h,bottom:p,left:f,right:m,type:0===h&&0===p&&0===f&&0===m?"VALID":"EXPLICIT"},c=pl((t-s+h+p)/r+1,o),d=pl((n-i+f+m)/a+1,o)}}return{padInfo:l,outHeight:c,outWidth:d}}(a,l,c,m,g,x,w,s,o),S=i?f*d:f;let N;return"channelsFirst"===o?N=[u,S,k,I]:"channelsLast"===o&&(N=[u,k,I,S]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:d,outHeight:k,outWidth:I,outChannels:S,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:h,filterWidth:p,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:N,filterShape:t}}function ul(e,t,n,r,a,s=!1,i="channelsLast",o){let[u,l,c,d,h]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,d,h]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,h,l,c,d]=e}const[p,f,m,,g]=t,[y,b,x]=dl(n),[w,v,k]=dl(r),I=hl(p,w),S=hl(f,v),N=hl(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,r,a,s,i,o,u,l,c){let d,h,p,f;if("number"==typeof e){d={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,a,s){null==a&&(a=ll(e,t,r));const i=e[1],o=e[2];return[pl((e[0]-t+2*a)/r+1,s),pl((i-t+2*a)/r+1,s),pl((o-t+2*a)/r+1,s),1]}([t,n,r,1],o,0,a,e,c);h=s[0],p=s[1],f=s[2]}else if("same"===e){h=Math.ceil(t/a),p=Math.ceil(n/s),f=Math.ceil(r/i);const e=(h-1)*a+o-t,c=(p-1)*s+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);d={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);d={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},h=Math.ceil((t-o+1)/a),p=Math.ceil((n-u+1)/s),f=Math.ceil((r-l+1)/i)}return{padInfo:d,outDepth:h,outHeight:p,outWidth:f}}(a,l,c,d,y,b,x,I,S,N,o),_=s?g*h:g;let A;return"channelsFirst"===i?A=[u,_,C,$,E]:"channelsLast"===i&&(A=[u,C,$,E,_]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:d,inChannels:h,outDepth:C,outHeight:$,outWidth:E,outChannels:_,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:p,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:S,effectiveFilterWidth:N,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:A,filterShape:t}}function ll(e,t,n,r=1){const a=hl(t,r);return Math.floor((e[0]*(n-1)-n+a)/2)}function cl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function dl(e){return"number"==typeof e?[e,e,e]:e}function hl(e,t){return t<=1?e:e+(e-1)*(t-1)}function pl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function fl(e){const[t,n,r]=cl(e);return 1===t&&1===n&&1===r}function ml(e,t){return fl(e)||fl(t)}function gl(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}const yl=As({reshape_:function(e,t){const n={x:$s(e,"x","reshape","string_or_numeric")},r={shape:t};return bs.runKernel(hr,n,r)}}),bl=As({avgPool_:function(e,t,n,r,a){const s=$s(e,"x","avgPool","float32");oe(ml(n,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`);let i=s,o=!1;3===s.rank&&(o=!0,i=yl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===i.rank,()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`),null!=a&&oe(fe(r),()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a};let c=bs.runKernel(yt,u,l);return c=Ai(c,s.dtype),o?yl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),xl=As({avgPool3d_:function(e,t,n,r,a,s="NDHWC"){const i=$s(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=yl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===o.rank,()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`),oe("NDHWC"===s,()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),null!=a&&oe(fe(r),()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s};let d=bs.runKernel(xt,l,c);return d=Ai(d,o.dtype),u?yl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),wl=As({concat_:function(e,t=0){oe(e.length>=1,()=>"Pass at least one tensor to concat");const n=Es(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach(e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)}),1===n.length)return Ri(n[0]);const r=n,a={axis:t};return bs.runKernel(At,r,a)}}),vl=As({sigmoid_:function(e){const t={x:$s(e,"x","sigmoid","float32")};return bs.runKernel($r,t)}}),kl=As({slice_:function(e,t,n){const r=$s(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const a={x:r},s={begin:t,size:n};return bs.runKernel(Sr,a,s)}}),Il=As({tanh_:function(e){const t={x:$s(e,"x","tanh","float32")};return bs.runKernel(Kr,t)}}),Sl=As({basicLSTMCell_:function(e,t,n,r,a,s){const i=$s(e,"forgetBias","basicLSTMCell"),o=$s(t,"lstmKernel","basicLSTMCell"),u=$s(n,"lstmBias","basicLSTMCell"),l=$s(r,"data","basicLSTMCell"),c=$s(a,"c","basicLSTMCell"),d=$s(s,"h","basicLSTMCell"),h=wl([l,d],1),p=Zi(h,o),f=fu(p,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=kl(f,[0,0],y),x=kl(f,[0,g],y),w=kl(f,[0,2*g],y),v=kl(f,[0,3*g],y),k=fu(yu(vl(b),Il(x)),yu(c,vl(fu(i,w))));return[k,yu(Il(k),vl(v))]}}),Nl=As({batchToSpaceND_:function(e,t,n){const r=$s(e,"x","batchToSpaceND"),a=t.reduce((e,t)=>e*t);oe(r.rank>=1+t.length,()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`),oe(n.length===t.length,()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`),oe(r.shape[0]%a===0,()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${a}`);const s={x:r},i={blockShape:t,crops:n};return bs.runKernel(kt,s,i)}}),Tl=As({batchNorm_:function(e,t,n,r,a,s){null==s&&(s=.001);const i=$s(e,"x","batchNorm"),o=$s(t,"mean","batchNorm"),u=$s(n,"variance","batchNorm");let l,c;null!=a&&(l=$s(a,"scale","batchNorm")),null!=r&&(c=$s(r,"offset","batchNorm")),oe(o.rank===u.rank,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),oe(null==c||o.rank===c.rank,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),oe(null==l||o.rank===l.rank,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");const d={x:function(e){let t;return t=0===e.rank||1===e.rank?yl(e,[1,1,1,e.size]):2===e.rank?yl(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?yl(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),scale:l,offset:c,mean:o,variance:u},h={varianceEpsilon:s},p=bs.runKernel(hn,d,h);return yl(p,i.shape)}}),Cl=As({batchNorm2d_:function(e,t,n,r,a,s){const i=$s(e,"x","batchNorm"),o=$s(t,"mean","batchNorm"),u=$s(n,"variance","batchNorm");let l,c;return null!=a&&(l=$s(a,"scale","batchNorm")),null!=r&&(c=$s(r,"offset","batchNorm")),oe(2===i.rank,()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`),oe(2===o.rank||1===o.rank,()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`),oe(2===u.rank||1===u.rank,()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`),null!=l&&oe(2===l.rank||1===l.rank,()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`),null!=c&&oe(2===c.rank||1===c.rank,()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`),Tl(i,o,u,c,l,s)}}),$l=As({batchNorm3d_:function(e,t,n,r,a,s){const i=$s(e,"x","batchNorm"),o=$s(t,"mean","batchNorm"),u=$s(n,"variance","batchNorm");let l,c;return null!=a&&(l=$s(a,"scale","batchNorm")),null!=r&&(c=$s(r,"offset","batchNorm")),oe(3===i.rank,()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`),oe(3===o.rank||1===o.rank,()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`),oe(3===u.rank||1===u.rank,()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`),null!=l&&oe(3===l.rank||1===l.rank,()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`),null!=c&&oe(3===c.rank||1===c.rank,()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`),Tl(i,o,u,c,l,s)}}),El=As({batchNorm4d_:function(e,t,n,r,a,s){const i=$s(e,"x","batchNorm"),o=$s(t,"mean","batchNorm"),u=$s(n,"variance","batchNorm");let l,c;return null!=a&&(l=$s(a,"scale","batchNorm")),null!=r&&(c=$s(r,"offset","batchNorm")),oe(4===i.rank,()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`),oe(4===o.rank||1===o.rank,()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`),oe(4===u.rank||1===u.rank,()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`),null!=l&&oe(4===l.rank||1===l.rank,()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`),null!=c&&oe(4===c.rank||1===c.rank,()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`),Tl(i,o,u,c,l,s)}}),_l=As({bincount_:function(e,t,n){const r=$s(e,"x","bincount"),a=$s(t,"weights","bincount");oe("int32"===r.dtype,()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`),oe(n>=0,()=>`size must be non-negative, but got ${n}.`),oe(a.size===r.size||0===a.size,()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${a.shape}.`);const s={x:r,weights:a},i={size:n};return bs.runKernel(It,s,i)}}),Al=As({broadcastArgs_:function(e,t){const n=$s(e,"s0","broadcastArgs","int32"),r=$s(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const a={s0:n,s1:r};return bs.runKernel(Nt,a)}}),Rl=As({broadcastTo_:function(e,t){let n=$s(e,"broadcastTo","x");const r=n.shape;if(t.some(e=>!(e>0)||e%1!=0))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=yl(n,e)}const a=n.shape,s=Array.from(t);for(let e=t.length-1;e>=0;e--)if(a[e]===t[e])s[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===s.map((e,t)=>e>1?t:-1).filter(e=>e>=0).length)return Ri(n);const i={x:n},o={reps:s};return bs.runKernel(Xr,i,o)}}),Fl=As({ceil_:function(e){const t={x:$s(e,"x","ceil","float32")};return bs.runKernel(Ct,t)}}),Dl=As({clipByValue_:function(e,t,n){const r=$s(e,"x","clipByValue");oe(t<=n,()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`);const a={x:r},s={clipValueMin:t,clipValueMax:n};return bs.runKernel($t,a,s)}}),Ml=As({concat1d_:function(e){return wl(e,0)}}),Ol=As({concat2d_:function(e,t){return wl(e,t)}}),Ll=As({concat3d_:function(e,t){return wl(e,t)}}),zl=As({concat4d_:function(e,t){return wl(e,t)}}),Pl=As({conv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=$s(e,"x","conv2d","float32"),u=$s(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=yl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),oe(4===l.rank,()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`),oe(4===u.rank,()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`),null!=i&&oe(fe(r),()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d="NHWC"===a?l.shape[3]:l.shape[1];oe(d===u.shape[2],()=>`Error in conv2d: depth of input (${d}) must match input depth for filter ${u.shape[2]}.`),oe(ml(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},f=bs.runKernel(Rt,h,p);return c?yl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Bl=As({conv1d_:function(e,t,n,r,a="NWC",s=1,i){const o=$s(e,"x","conv1d"),u=$s(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=yl(o,[1,o.shape[0],o.shape[1]])),oe(3===l.rank,()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`),oe(3===u.rank,()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`),null!=i&&oe(fe(r),()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),oe(l.shape[2]===u.shape[1],()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`),oe(ml(n,s),()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${s}'`),oe("NWC"===a,()=>`Error in conv1d: got dataFormat of ${a} but only NWC is currently supported.`);const d=yl(u,[1,u.shape[0],u.shape[1],u.shape[2]]),h=yl(l,[l.shape[0],1,l.shape[1],l.shape[2]]),p=Pl(h,d,[1,n],r,"NHWC",[1,s],i);return yl(p,c?[p.shape[2],p.shape[3]]:[p.shape[0],p.shape[2],p.shape[3]])}}),Wl=As({conv2DBackpropInput_:function(e,t,n,r,a,s="NHWC",i){oe(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=yl(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),oe(4===o.length,()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`),oe(4===u.rank,()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`),oe(4===n.rank,()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`);const c="NHWC"===s?o[3]:o[1],d="NHWC"===s?u.shape[3]:u.shape[1];oe(c===n.shape[2],()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`),oe(d===n.shape[3],()=>`Error in conv2dDerInput: depth of output (${d}) must match output depth for filter ${n.shape[3]}.`),null!=i&&oe(fe(a),()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const h={dy:u,filter:n},p={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,inputShape:o},f=bs.runKernel(Dt,h,p);return l?yl(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Vl=As({conv2dTranspose_:function(e,t,n,r,a,s){const i=$s(e,"x","conv2dTranspose"),o=$s(t,"filter","conv2dTranspose");return Wl(n,i,o,r,a,"NHWC",s)}}),Ul=As({conv3d_:function(e,t,n,r,a="NDHWC",s=[1,1,1]){const i=$s(e,"x","conv3d"),o=$s(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=yl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===u.rank,()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`),oe(5===o.rank,()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`),oe(u.shape[4]===o.shape[3],()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`),oe(ml(n,s),()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),oe("NDHWC"===a,()=>`Error in conv3d: got dataFormat of ${a} but only NDHWC is currently supported.`);const c={x:u,filter:o},d={strides:n,pad:r,dataFormat:a,dilations:s},h=bs.runKernel(Mt,c,d);return l?yl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Gl=As({conv3DBackpropInput_:function(e,t,n,r,a){oe(e.length===t.rank,()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`);let s=e,i=t,o=!1;4===t.rank&&(o=!0,i=yl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),s=[1,e[0],e[1],e[2],e[3]]);const u=s[4],l=i.shape[4];oe(5===s.length,()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${s.length}.`),oe(5===i.rank,()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`),oe(5===n.rank,()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`),oe(u===n.shape[3],()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`),oe(l===n.shape[4],()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`);const c={dy:i,filter:n},d={pad:a,strides:r,inputShape:s},h=bs.runKernel(Lt,c,d);return o?yl(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Hl=As({conv3dTranspose_:function(e,t,n,r,a){const s=$s(e,"x","conv3dTranspose"),i=$s(t,"filter","conv3dTranspose");return Gl(n,s,i,r,a)}}),jl=As({cos_:function(e){const t={x:$s(e,"x","cos","float32")};return bs.runKernel(zt,t)}}),ql=As({cosh_:function(e){const t={x:$s(e,"x","cosh","float32")};return bs.runKernel(Pt,t)}}),Kl=As({cumsum_:function(e,t=0,n=!1,r=!1){const a={x:$s(e,"x","cumsum")},s={axis:t,exclusive:n,reverse:r};return bs.runKernel(Bt,a,s)}}),Xl=As({denseBincount_:function(e,t,n,r=!1){const a=$s(e,"x","denseBincount"),s=$s(t,"weights","denseBincount");oe("int32"===a.dtype,()=>`Error in denseBincount: input dtype must be int32, but got ${a.dtype}`),oe(a.rank<=2,()=>`Error in denseBincount: input must be at most rank 2, but got rank ${a.rank}.`),oe(n>=0,()=>`size must be non-negative, but got ${n}.`),oe(s.size===a.size||0===s.size,()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${a.shape}, weights shape: ${s.shape}.`);const i={x:a,weights:s},o={size:n,binaryOutput:r};return bs.runKernel(Vt,i,o)}}),Yl=As({depthToSpace_:function(e,t,n="NHWC"){const r=$s(e,"x","depthToSpace","float32"),a="NHWC"===n?r.shape[1]:r.shape[2],s="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];oe(t>1,()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`),oe(a*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t}  for depthToSpace with input shape\n    ${r.shape}`),oe(s*t>=0,()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t} for depthToSpace with input shape\n        ${r.shape}`),oe(i%(t*t)===0,()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`);const o={x:r},u={blockSize:t,dataFormat:n};return bs.runKernel(Ut,o,u)}}),Zl=As({depthwiseConv2d_:function(e,t,n,r,a="NHWC",s=[1,1],i){const o=$s(e,"x","depthwiseConv2d","float32"),u=$s(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=yl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),oe(4===l.rank,()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`),oe(4===u.rank,()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`),oe(l.shape[3]===u.shape[2],()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`),null!=i&&oe(fe(r),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`);const d={x:l,filter:u},h={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i},p=bs.runKernel(Gt,d,h);return c?yl(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Jl=As({diag_:function(e){const t={x:$s(e,"x","diag")};return bs.runKernel(qt,t)}}),Ql=As({dilation2d_:function(e,t,n,r,a=[1,1],s="NHWC"){const i=$s(e,"x","dilation2d"),o=$s(t,"filter","dilation2d");oe(3===i.rank||4===i.rank,()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`),oe(3===o.rank,()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`),oe("NHWC"===s,()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${s}`);let u=i,l=!1;3===i.rank&&(u=yl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},d={strides:n,pad:r,dilations:a},h=bs.runKernel(Kt,c,d);return l?yl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),ec=As({equal_:function(e,t){let n=$s(e,"a","equal","string_or_numeric"),r=$s(t,"b","equal","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(nn,a)}}),tc=As({where_:function(e,t,n){const r=$s(t,"a","where"),a=$s(n,"b","where"),s=$s(e,"condition","where","bool"),i=Pu(Pu(s.shape,r.shape),a.shape),o={condition:Rl(s,i),t:Rl(r,i),e:Rl(a,i)};return bs.runKernel(kr,o)}}),nc=As({divNoNan_:function(e,t){let n=$s(e,"a","div"),r=$s(t,"b","div");[n,r]=ls(n,r);const a=gu(n,r),s=wu(a),i=ec(r,s);return tc(i,s,a)}}),rc=As({dot_:function(e,t){const n=$s(e,"t1","dot"),r=$s(t,"t2","dot");oe(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`);const a=1===n.rank?n.size:n.shape[1],s=1===r.rank?r.size:r.shape[0];if(oe(a===s,()=>`Error in dot: inner dimensions of inputs must match, but got ${a} and ${s}.`),1===n.rank&&1===r.rank){const e=yl(n,[1,-1]),t=yl(r,[-1,1]),a=Zi(e,t);return yl(a,[])}if(1===n.rank&&2===r.rank){const e=yl(n,[1,-1]),t=yl(r,[r.shape[0],r.shape[1]]),a=Zi(e,t);return yl(a,[a.size])}if(2===n.rank&&1===r.rank){const e=yl(r,[-1,1]),t=Zi(n,e);return yl(t,[t.size])}{const e=yl(r,[r.shape[0],r.shape[1]]);return Zi(n,e)}}}),ac=As({einsum_:function(e,...t){const n=t.map((e,t)=>$s(e,`tensors${t}`,"einsum")),r={equation:e};return bs.runKernel(Jt,n,r)}}),sc=As({elu_:function(e){const t={x:$s(e,"x","elu","float32")};return bs.runKernel(Qt,t)}}),ic=As({erf_:function(e){let t=$s(e,"x","erf");oe("int32"===t.dtype||"float32"===t.dtype,()=>"Input dtype must be `int32` or `float32`."),"int32"===t.dtype&&(t=Ai(t,"float32"));const n={x:t};return bs.runKernel(tn,n)}}),oc=As({exp_:function(e){const t={x:$s(e,"x","exp")};return bs.runKernel(rn,t)}}),uc=As({expandDims_:function(e,t=0){const n=$s(e,"x","expandDims","string_or_numeric");oe(t<=n.rank,()=>"Axis must be <= rank of the tensor");const r={input:n},a={dim:t};return bs.runKernel(an,r,a)}}),lc=As({expm1_:function(e){const t={x:$s(e,"x","expm1")};return bs.runKernel(sn,t)}}),cc=As({tile_:function(e,t){const n=$s(e,"x","tile","string_or_numeric");oe(n.rank===t.length,()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`);const r={x:n},a={reps:t};return bs.runKernel(Xr,r,a)}}),dc=As({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const a=_i([e,t],r),s=e<=t?e:t;for(let e=0;e<s;++e)a.set(1,e,e);const i=yl(a.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return cc(uc(i,0),[n[0],1,1]);if(2===n.length)return cc(uc(uc(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return cc(uc(uc(uc(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),hc=As({floor_:function(e){const t={x:$s(e,"x","floor","float32")};return bs.runKernel(cn,t)}}),pc=As({gather_:function(e,t,n=0,r=0){const a={x:$s(e,"x","gather"),indices:$s(t,"indices","gather","int32")},s={axis:n,batchDims:r};return bs.runKernel(pn,a,s)}}),fc=As({greater_:function(e,t){let n=$s(e,"a","greater","string_or_numeric"),r=$s(t,"b","greater","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(mn,a)}}),mc=As({greaterEqual_:function(e,t){let n=$s(e,"a","greaterEqual","string_or_numeric"),r=$s(t,"b","greaterEqual","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(gn,a)}}),gc=As({imag_:function(e){const t={input:$s(e,"input","imag")};return bs.runKernel(xn,t)}}),yc=As({isFinite_:function(e){const t={x:$s(e,"x","isFinite")};return bs.runKernel(wn,t)}}),bc=As({isInf_:function(e){const t={x:$s(e,"x","isInf")};return bs.runKernel(vn,t)}}),xc=As({isNaN_:function(e){const t={x:$s(e,"x","isNaN")};return bs.runKernel(kn,t)}}),wc=As({leakyRelu_:function(e,t=.2){const n={x:$s(e,"x","leakyRelu")},r={alpha:t};return bs.runKernel(In,n,r)}}),vc=As({less_:function(e,t){let n=$s(e,"a","less","string_or_numeric"),r=$s(t,"b","less","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Sn,a)}}),kc=As({lessEqual_:function(e,t){let n=$s(e,"a","lessEqual","string_or_numeric"),r=$s(t,"b","lessEqual","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Nn,a)}});function Ic(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return bs.runKernel(Tn,{},r)}const Sc=As({localResponseNormalization_:function(e,t=5,n=1,r=1,a=.5){const s=$s(e,"x","localResponseNormalization");oe(4===s.rank||3===s.rank,()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${s.rank}.`),oe(fe(t),()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`);let i=s,o=!1;3===s.rank&&(o=!0,i=yl(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:a},c=bs.runKernel(Fn,u,l);return o?yl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Nc=As({log_:function(e){const t={x:$s(e,"x","log","float32")};return bs.runKernel(Cn,t)}}),Tc=As({log1p_:function(e){const t={x:$s(e,"x","log1p")};return bs.runKernel($n,t)}}),Cc=As({neg_:function(e){const t={x:$s(e,"x","neg")};return bs.runKernel(Xn,t)}}),$c=As({softplus_:function(e){const t={x:$s(e,"x","softplus")};return bs.runKernel(Er,t)}}),Ec=As({logSigmoid_:function(e){const t=$s(e,"x","logSigmoid");return Tu(e=>({value:Cc($c(Cc(e))),gradFunc:t=>yu(t,vl(Cc(e)))}))(t)}}),_c=As({max_:function(e,t=null,n=!1){const r={x:$s(e,"x","max")},a={reductionIndices:t,keepDims:n};return bs.runKernel(Mn,r,a)}}),Ac=As({sum_:function(e,t=null,n=!1){let r=$s(e,"x","sum");"bool"===r.dtype&&(r=Ai(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return bs.runKernel(Ar,a,s)}}),Rc=As({logSoftmax_:function(e,t=-1){const n=$s(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=Tu((e,n)=>{const r=_c(e,t,!0),a=Du(e,r),s=Du(Ai(a,"float32"),Nc(Ac(oc(a),t,!0)));return n([s]),{value:s,gradFunc:(e,n)=>{const[r]=n,a=oc(r);return Du(e,yu(Ac(e,t,!0),a))}}});return r(n)}});function Fc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Dc(e,t,n){const r=e.length+t.length,a=[];let s=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?a.push(e[s++]):a.push(t[i++]);return a}function Mc(e,t){const n=[],r=e.length;for(let a=0;a<r;a++)-1===t.indexOf(a)&&n.push(e[a]);return[n,t.map(t=>e[t])]}function Oc(e,t){return Dc(e,t.map(e=>1),t)}function Lc(e,t,n){oe(Fc(t,n),()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`)}function zc(e,t){if(Fc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach(e=>n.push(e)),n}function Pc(e){return e.map((e,t)=>[t,e]).sort((e,t)=>e[1]-t[1]).map(e=>e[0])}function Bc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Wc=As({logSumExp_:function(e,t=null,n=!1){const r=$s(e,"x","logSumExp"),a=ve(t,r.shape),s=_c(r,a,!0),i=Du(r,s),o=oc(i),u=Ac(o,a),l=Nc(u),c=fu(yl(s,l.shape),l);if(n){const e=Oc(c.shape,a);return yl(c,e)}return c}}),Vc=As({logicalAnd_:function(e,t){const n=$s(e,"a","logicalAnd","bool"),r=$s(t,"b","logicalAnd","bool");Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(En,a)}}),Uc=As({logicalNot_:function(e){const t={x:$s(e,"x","logicalNot","bool")};return bs.runKernel(_n,t)}}),Gc=As({logicalOr_:function(e,t){const n=$s(e,"a","logicalOr","bool"),r=$s(t,"b","logicalOr","bool");Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(An,a)}}),Hc=As({logicalXor_:function(e,t){const n=$s(e,"a","logicalXor","bool"),r=$s(t,"b","logicalXor","bool");return Pu(n.shape,r.shape),Vc(Gc(e,t),Uc(Vc(e,t)))}}),jc=As({maxPool_:function(e,t,n,r,a){const s=$s(e,"x","maxPool");let i=s,o=!1;3===s.rank&&(o=!0,i=yl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===i.rank,()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`),oe(ml(n,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`),null!=a&&oe(fe(r),()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:a},c=bs.runKernel(Ln,u,l);return o?yl(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),qc=As({maxPool3d_:function(e,t=[1,1,1],n,r,a,s="NDHWC"){const i=$s(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=yl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),oe(5===o.rank,()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`),oe("NDHWC"===s,()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${s}`),null!=a&&oe(fe(r),()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${a} but got pad ${r}.`);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:a,dataFormat:s},d=bs.runKernel(Pn,l,c);return u?yl(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Kc=As({maxPoolWithArgmax_:function(e,t,n,r,a=!1){const s={x:$s(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:a},o=bs.runKernel(Wn,s,i);return{result:o[0],indexes:o[1]}}}),Xc=As({mean_:function(e,t=null,n=!1){const r={x:$s(e,"x","mean")},a={axis:t,keepDims:n};return bs.runKernel(Vn,r,a)}});function Yc(e,t="float32"){if("complex64"===t){const t=Yc(e,"float32"),n=Yc(e,"float32");return Rs(t,n)}const n=We(de(e),t);return bs.makeTensor(n,e,t)}function Zc(e,t="float32"){if("complex64"===t){const t=Zc(e,"float32"),n=Yc(e,"float32");return Rs(t,n)}const n=Be(de(e),t);return bs.makeTensor(n,e,t)}function Jc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=$s(e,"x","meshgrid",e instanceof Ja?e.dtype:"float32");if(void 0===t)return[r];let a=$s(t,"y","meshgrid",t instanceof Ja?t.dtype:"float32");const s=de(r.shape),i=de(a.shape);return"xy"===n?(r=yl(r,[1,-1]),a=yl(a,[-1,1]),[Zi(Zc([i,1],r.dtype),r),Zi(a,Zc([1,s],a.dtype))]):(r=yl(r,[-1,1]),a=yl(a,[1,-1]),[Zi(r,Zc([1,i],r.dtype)),Zi(Zc([s,1],a.dtype),a)])}const Qc=As({min_:function(e,t=null,n=!1){const r={x:$s(e,"x","min")},a={axis:t,keepDims:n};return bs.runKernel(Un,r,a)}}),ed=As({minimum_:function(e,t){let n=$s(e,"a","minimum"),r=$s(t,"b","minimum");[n,r]=ls(n,r),"bool"===n.dtype&&(n=Ai(n,"int32"),r=Ai(r,"int32")),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Gn,a)}}),td=As({mirrorPad_:function(e,t,n){oe("reflect"===n||"symmetric"===n,()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`);const r=$s(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");oe(t.length===r.rank,()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`);const a="reflect"===n?1:0;for(let e=0;e<r.rank;e++)oe(2===t[e].length,()=>"Invalid number of paddings. Must be length of 2 each."),oe(t[e][0]>=0&&t[e][0]<=r.shape[e]-a&&t[e][1]>=0&&t[e][1]<=r.shape[e]-a,()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-a} or less than 0 for input of shape ${r.shape}`);const s={paddings:t,mode:n},i={x:r};return bs.runKernel(Hn,i,s)}}),nd=As({mod_:function(e,t){let n=$s(e,"a","mod"),r=$s(t,"b","mod");[n,r]=ls(n,r);const a={a:n,b:r};return bs.runKernel(jn,a)}}),rd=As({moments_:function(e,t=null,n=!1){const r=ve(t,(e=$s(e,"x","moments")).shape),a=Xc(e,r,n);let s=a.shape;n||(s=Oc(a.shape,r));const i=xu(Du(Ai(e,"float32"),yl(a,s)));return{mean:a,variance:Xc(i,r,n)}}}),ad=As({multiRNNCell_:function(e,t,n,r){const a=$s(t,"data","multiRNNCell"),s=Es(n,"c","multiRNNCell"),i=Es(r,"h","multiRNNCell");let o=a;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,s[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),sd=As({multinomial_:function(e,t,n,r=!1){const a=$s(e,"logits","multinomial"),s=a.size,i=a.rank;if(s<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${s}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?yl(a,[1,-1]):a},u={numSamples:t,seed:n,normalized:r},l=bs.runKernel(qn,o,u);return 1===i?yl(l,[l.size]):l}}),id=As({notEqual_:function(e,t){let n=$s(e,"a","notEqual","string_or_numeric"),r=$s(t,"b","notEqual","string_or_numeric");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Yn,a)}}),od=As({onesLike_:function(e){const t={x:$s(e,"x","onesLike")};return bs.runKernel(er,t)}}),ud=As({outerProduct_:function(e,t){const n=$s(e,"v1","outerProduct"),r=$s(t,"v2","outerProduct");oe(1===n.rank&&1===r.rank,()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`);const a=yl(n,[-1,1]),s=yl(r,[1,-1]);return Zi(a,s)}}),ld=As({pad_:function(e,t,n=0){const r=$s(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:t,constantValue:n},s={x:r};return bs.runKernel(rr,s,a)}}),cd=As({pad1d_:function(e,t,n=0){return oe(2===t.length,()=>"Invalid number of paddings. Must be length of 2."),ld(e,[t],n)}}),dd=As({pad2d_:function(e,t,n=0){return oe(2===t.length&&2===t[0].length&&2===t[1].length,()=>"Invalid number of paddings. Must be length of 2 each."),ld(e,t,n)}}),hd=As({pad3d_:function(e,t,n=0){return oe(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,()=>"Invalid number of paddings. Must be length of 2 each."),ld(e,t,n)}}),pd=As({pad4d_:function(e,t,n=0){return oe(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,()=>"Invalid number of paddings. Must be length of 2 each."),ld(e,t,n)}}),fd=As({spaceToBatchND_:function(e,t,n){const r=$s(e,"x","spaceToBatchND");oe(r.rank>=1+t.length,()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`),oe(n.length===t.length,()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`),oe(r.shape.reduce((e,r,a)=>a>0&&a<=t.length?e&&(r+n[a-1][0]+n[a-1][1])%t[a-1]===0:e,!0),()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`);const a={x:r},s={blockShape:t,paddings:n};return bs.runKernel(Rr,a,s)}}),md=As({pool_:function(e,t,n,r,a,s){null==a&&(a=[1,1]),null==s&&(s=1),0===r&&(r="valid");const i=$s(e,"x","maxPool");let o=i,u=!1;3===i.rank&&(u=!0,o=yl(i,[1,i.shape[0],i.shape[1],i.shape[2]])),oe(ml(s,a),()=>`Error in pool: Either strides or dilations must be 1. Got strides ${s} and dilations '${a}'`);const l=sl(o.shape,t,s,a,r),c=[l.dilationHeight,l.dilationWidth];let d;d="same"===r?function(e,t){const n=e.map((e,n)=>e+(e-1)*(t[n]-1)).map(e=>e-1),r=n.map(e=>Math.floor(e/2)),a=n.map((e,t)=>e-r[t]);return n.map((e,t)=>[r[t],a[t]])}([l.filterHeight,l.filterWidth],c):[[0,0],[0,0]];const h=1===c[0]&&1===c[1],[p,f]=function(e,t,n){const r=n.map(e=>e[0]),a=n.map(e=>e[1]),s=e.concat(r,a),i=t.map((e,t)=>(e-s[t]%e)%e),o=a.map((e,t)=>e+i[t]);return[t.map((e,t)=>[r[t],o[t]]),t.map((e,t)=>[0,i[t]])]}([l.inHeight,l.inWidth],c,d),m=h?r:"valid",g=h?o:fd(o,c,p),y=("avg"===n?()=>bl(g,t,s,m):()=>jc(g,t,s,m))(),b=h?y:Nl(y,c,f);return u?yl(b,[b.shape[1],b.shape[2],b.shape[3]]):b}}),gd=As({prelu_:function(e,t){const n={x:$s(e,"x","prelu"),alpha:$s(t,"alpha","prelu")};return bs.runKernel(ir,n)}}),yd=As({prod_:function(e,t=null,n=!1){let r=$s(e,"x","prod");"bool"===r.dtype&&(r=Ai(r,"int32"));const a={x:r},s={axis:t,keepDims:n};return bs.runKernel(or,a,s)}}),bd=As({rand_:function(e,t,n){const r=de(e);let a=null;if(null==n||"float32"===n)a=new Float32Array(r);else if("int32"===n)a=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);a=new Uint8Array(r)}for(let e=0;e<r;e++)a[e]=t();return bs.makeTensor(a,e,n)}});var xd=n(264);class wd{constructor(e,t,n,r,a){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const s=a||Math.random();this.random=xd.alea(s.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,a,s;do{r=2*this.random()-1,a=2*this.random()-1,s=r*r+a*a}while(s>=1||0===s);const i=Math.sqrt(-2*Math.log(s)/s);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*a*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class vd{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const a=r||Math.random();this.randu=xd.alea(a.toString()),this.randn=new wd(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,a,s;for(;;){do{r=this.randn.nextValue(),s=1+this.c*r}while(s<=0);if(s*=s*s,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-s+Math.log(s)),a=this.randu(),a<t||Math.log(a)<n)break}return s=1/this.beta*this.d*s,this.alpha<1&&(s*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(s)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class kd{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=xd.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const Id=As({randomGamma_:function(e,t,n=1,r="float32",a){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const s=new vd(t,n,r,a),i=_i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Sd=As({randomNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const s=new wd(t,n,r,!1,a),i=_i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),Nd=As({randomUniform_:function(e,t=0,n=1,r="float32",a){const s=_i(e,r),i=new kd(t,n,null,a);for(let e=0;e<s.values.length;e++)s.values[e]=i.nextValue();return s.toTensor()}});function Td(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const a={start:e,stop:t,step:n,dtype:r};return bs.runKernel(ur,{},a)}const Cd=As({real_:function(e){const t={input:$s(e,"input","real")};return bs.runKernel(lr,t)}}),$d=As({reciprocal_:function(e){const t={x:$s(e,"x","reciprocal")};return bs.runKernel(cr,t)}}),Ed=As({relu_:function(e){const t={x:$s(e,"x","relu")};return bs.runKernel(dr,t)}}),_d=As({relu6_:function(e){const t={x:$s(e,"x","relu6")};return bs.runKernel(yr,t)}}),Ad=As({reverse_:function(e,t){const n={x:$s(e,"x","reverse")},r={dims:t};return bs.runKernel(br,n,r)}}),Rd=As({reverse1d_:function(e){const t=$s(e,"x","reverse");return oe(1===t.rank,()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`),Ad(t,0)}}),Fd=As({reverse2d_:function(e,t){const n=$s(e,"x","reverse");return oe(2===n.rank,()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`),Ad(n,t)}}),Dd=As({reverse3d_:function(e,t){const n=$s(e,"x","reverse");return oe(3===n.rank,()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`),Ad(n,t)}}),Md=As({reverse4d_:function(e,t){const n=$s(e,"x","reverse");return oe(4===n.rank,()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`),Ad(n,t)}}),Od=As({round_:function(e){const t={x:$s(e,"x","round")};return bs.runKernel(xr,t)}}),Ld=As({rsqrt_:function(e){const t={x:$s(e,"x","rsqrt","float32")};return bs.runKernel(wr,t)}}),zd=As({selu_:function(e){const t={x:$s(e,"x","selu")};return bs.runKernel(Ir,t)}}),Pd=As({separableConv2d_:function(e,t,n,r,a,s=[1,1],i="NHWC"){const o=$s(e,"x","separableConv2d"),u=$s(t,"depthwiseFilter","separableConv2d"),l=$s(n,"pointwiseFilter","separableConv2d");let c=o,d=!1;if(3===o.rank&&(d=!0,c=yl(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");oe(4===c.rank,()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`),oe(4===u.rank,()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`),oe(4===l.rank,()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`),oe(1===l.shape[0],()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`),oe(1===l.shape[1],()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`);const h=u.shape[2],p=u.shape[3];oe(l.shape[2]===h*p,()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${h*p}, but got ${l.shape[2]}.`);const f=Zl(c,u,r,a,i,s),m=Pl(f,l,1,"valid",i);return d?yl(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Bd=async function(e,t){const n=$s(e,"x","setdiff1d"),r=$s(t,"y","setdiff1d");oe(n.dtype===r.dtype,()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`),oe(1===n.rank,()=>`x should be 1D tensor, but got x (${n.shape}).`),oe(1===r.rank,()=>`y should be 1D tensor, but got y (${r.shape}).`);const a=await n.data(),s=await r.data(),i=new Set(s);let o=0;for(let e=0;e<a.length;e++)i.has(a[e])||o++;const u=new Ka([o],n.dtype),l=new Ka([o],"int32");for(let e=0,t=0;e<a.length;e++)i.has(a[e])||(u.values[t]=a[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Wd=As({sign_:function(e){const t={x:$s(e,"x","sign")};return bs.runKernel(Cr,t)}}),Vd=As({sin_:function(e){const t={x:$s(e,"x","sin","float32")};return bs.runKernel(Nr,t)}}),Ud=As({sinh_:function(e){const t={x:$s(e,"x","sinh")};return bs.runKernel(Tr,t)}}),Gd=As({slice1d_:function(e,t,n){const r=$s(e,"x","slice1d");return oe(1===r.rank,()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`),kl(r,[t],[n])}}),Hd=As({slice2d_:function(e,t,n){const r=$s(e,"x","slice2d");return oe(2===r.rank,()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`),kl(r,t,n)}}),jd=As({slice3d_:function(e,t,n){const r=$s(e,"x","slice3d");return oe(3===r.rank,()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`),kl(r,t,n)}}),qd=As({slice4d_:function(e,t,n){const r=$s(e,"x","slice4d");return oe(4===r.rank,()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`),kl(r,t,n)}}),Kd=As({softmax_:function(e,t=-1){const n=$s(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},a={dim:t};return bs.runKernel(Dr,r,a)}}),Xd=As({fft_:function(e){oe("complex64"===e.dtype,()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`);const t={input:e};return bs.runKernel(on,t)}}),Yd=As({ifft_:function(e){oe("complex64"===e.dtype,()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`);const t={input:e};return bs.runKernel(bn,t)}}),Zd=As({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const a=yl(e,[n,t]);r=Yd(a)}else{const a=[n,2*(t-1)],s=yl(Cd(e),[n,t]),i=yl(gc(e),[n,t]),o=Ad(kl(s,[0,1],[n,t-2]),1),u=yu(Ad(kl(i,[0,1],[n,t-2]),1),$u(-1)),l=wl([s,o],1),c=wl([i,u],1),d=yl(Rs(l,c),[a[0],a[1]]);r=Yd(d)}if(r=Cd(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=yl(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Jd=As({split_:function(e,t,n=0){const r={x:$s(e,"x","split")},a={numOrSizeSplits:t,axis:n};return bs.runKernel(Fr,r,a)}}),Qd=As({rfft_:function(e,t){oe("float32"===e.dtype,()=>`The dtype for rfft() must be real value but got ${e.dtype}`);let n=e.shape[e.shape.length-1];const r=e.size/n;let a;if(null!=t&&t<n){const r=e.shape.map(e=>0),s=e.shape.map(e=>e);s[e.shape.length-1]=t,a=kl(e,r,s),n=t}else if(null!=t&&t>n){const r=e.shape.map(e=>e);r[e.shape.length-1]=t-n,a=wl([e,Yc(r)],e.shape.length-1),n=t}else a=e;const s=wu(a),i=yl(Rs(a,s),[r,n]),o=Xd(i),u=Math.floor(n/2)+1,l=Cd(o),c=gc(o),d=Jd(l,[u,n-u],l.shape.length-1),h=Jd(c,[u,n-u],c.shape.length-1),p=a.shape.slice();return p[a.shape.length-1]=u,yl(Rs(d[0],h[0]),p)}}),eh=As({squaredDifference_:function(e,t){let n=$s(e,"a","squaredDifference"),r=$s(t,"b","squaredDifference");[n,r]=ls(n,r),Pu(n.shape,r.shape);const a={a:n,b:r};return bs.runKernel(Br,a,{})}}),th=As({squeeze_:function(e,t){const n=$s(e,"x","squeeze");return yl(n,ke(n.shape,t).newShape)}}),nh=As({stack_:function(e,t=0){const n=Es(e,"tensors","stack","string_or_numeric");oe(n.length>=1,()=>"Pass at least one tensor to tf.stack"),n.length>0&&oe(t<=n[0].rank,()=>"Axis must be <= rank of the tensor");const r=n,a={axis:t};return bs.runKernel(nr,r,a)}}),rh=As({step_:function(e,t=0){const n={x:$s(e,"x","step")},r={alpha:t};return bs.runKernel(ra,n,r)}}),ah=As({stridedSlice_:function(e,t,n,r,a=0,s=0,i=0,o=0,u=0){const l={x:$s(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:a,endMask:s,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return bs.runKernel(Vr,l,c)}}),sh=As({tan_:function(e){const t={x:$s(e,"x","tan","float32")};return bs.runKernel(qr,t)}});function ih(e,t){le(e);const n=Ns(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Fs(e,null,n,t)}function oh(e,t,n){if(le(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=Ns(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Fs(e,t,r,n)}function uh(e,t,n){if(le(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=Ns(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}function lh(e,t,n){if(le(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=Ns(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Fs(e,t,r,n)}function ch(e,t,n){if(le(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=Ns(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Fs(e,t=t||r,r,n)}const dh=As({topk_:function(e,t=1,n=!0){const r=$s(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${t}`);const s={x:r},i={k:t,sorted:n},[o,u]=bs.runKernel(Yr,s,i);return{values:o,indices:u}}}),hh=As({truncatedNormal_:function(e,t=0,n=1,r,a){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const s=new wd(t,n,r,!0,a),i=_i(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=s.nextValue();return i.toTensor()}}),ph=As({unique_:function(e,t=0){const n=$s(e,"x","unique","string_or_numeric");oe(n.rank>0,()=>"The input tensor must be at least 1D");const r={x:n},a={axis:t},[s,i]=bs.runKernel(Qr,r,a);return{values:s,indices:i}}}),fh=As({unsortedSegmentSum_:function(e,t,n){const r=$s(e,"x","unsortedSegmentSum"),a=$s(t,"segmentIds","unsortedSegmentSum","int32");oe(fe(n),()=>"numSegments must be of dtype int");const s={x:r,segmentIds:a},i={numSegments:n};return bs.runKernel(ta,s,i)}}),mh=As({unstack_:function(e,t=0){const n=$s(e,"x","unstack","string_or_numeric");oe(t>=-n.shape.length&&t<n.shape.length,()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`);const r={value:n},a={axis:t};return bs.runKernel(ea,r,a)}});function gh(e,t=!0,n,r){return bs.makeVariable(e,t,n,r)}function yh(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=_i(e,"int32"),a=_i([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const s=r.indexToLoc(n[t]),i=t*e.length;a.values.set(s,i)}return a.toTensor()}const bh=async function(e){const t=$s(e,"condition","whereAsync","bool"),n=await t.data(),r=yh(t.shape,n);return e!==t&&t.dispose(),r},xh=async function(e,t,n){const r=$s(e,"tensor","boolMask"),a=$s(t,"mask","boolMask","bool"),s=null==n?0:n,i=a.rank,o=r.shape;oe(i>0,()=>"mask cannot be scalar"),ue(o.slice(s,s+i),a.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=s;e<s+i;e++)u*=o[e];const l=o.slice(0,s).concat([u],o.slice(s+i)),c=yl(r,l),d=yl(a,[-1]),h=await bh(d),p=th(h,[1]),f=pc(c,p,s);return e!==r&&r.dispose(),t!==a&&a.dispose(),p.dispose(),c.dispose(),d.dispose(),h.dispose(),f};function wh(e,t,n=null){if(0===e.rank)return Ou(e);if(1!==e.rank&&null===n)return wh(yl(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Ac(Ou(e),n);if(t===1/0)return _c(Ou(e),n);if(t===-1/0)return Qc(Ou(e),n);if("euclidean"===t||2===t)return bu(Ac(Fu(Ou(e),$u(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return _c(Ac(Ou(e),n[0]),n[1]-1);if(t===1/0)return _c(Ac(Ou(e),n[1]),n[0]);if(t===-1/0)return Qc(Ac(Ou(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return bu(Ac(xu(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const vh=As({norm_:function(e,t="euclidean",n=null,r=!1){const a=wh(e=$s(e,"x","norm"),t,n);let s=a.shape;if(r){const t=ve(n,e.shape);s=Oc(a.shape,t)}return yl(a,s)}}),kh=As({movingAverage_:function(e,t,n,r,a=!0){const s=$s(e,"v","movingAverage"),i=$s(t,"x","movingAverage"),o=$s(n,"decay","movingAverage");cs(s,i),oe(pe(s.shape,i.shape),()=>"Shape mismatch in v and x");const u=$u(1),l=Du(u,o);let c=yu(Du(i,s),l);if(a){oe(null!=r,()=>"When using zeroDebias: true, step is required.");const e=$s(r,"step","movingAverage");c=gu(c,Du(u,Fu(o,e)))}return fu(s,c)}}),Ih=As({scatterND_:function(e,t,n){const r=$s(e,"indices","scatterND","int32"),a=$s(t,"updates","scatterND");lo(a,r,n);const s={indices:r,updates:a},i={shape:n};return bs.runKernel(vr,s,i)}}),Sh=As({sparseToDense_:function(e,t,n,r=0){const a=$s(e,"sparseIndices","sparseToDense","int32"),s=$s(t,"sparseValues","sparseToDense"),i=$s(r,"defaultValue","sparseToDense",s.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const a=e.rank>0?e.shape[0]:1,s=e.rank>1?e.shape[1]:1;if(n.length!==s)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${s}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==a))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${a}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(a,s,n,i);const o={sparseIndices:a,sparseValues:s,defaultValue:i},u={outputShape:n};return bs.runKernel(Pr,o,u)}}),Nh=As({gatherND_:function(e,t){const n=$s(t,"indices","gatherND","int32"),r={params:$s(e,"x","gatherND","string_or_numeric"),indices:n};return bs.runKernel(fn,r)}}),Th=As({dropout_:function(e,t,n,r){const a=$s(e,"x","dropout");if(oe("float32"===a.dtype,()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${a.dtype} tensor instead.`),oe(t>=0&&t<1,()=>`rate must be a float in the range [0, 1), but got ${t}.`),0===t)return e instanceof Ja?a.clone():a;const s=function(e,t){if(null==t)return e.shape.slice();if(pe(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(a,n),i=1-t,o=gu(hc(fu(Nd(s,0,1,"float32",r),i)),i);return yu(a,o)}});function Ch(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function $h(e,t,n){const r=1-e%2,a=new Float32Array(e);for(let s=0;s<e;++s){const i=2*Math.PI*s/(e+r-1);a[s]=t-n*Math.cos(i)}return ih(a,"float32")}const Eh=async function(e,t,n=1){const r=$s(e,"predictions","inTopK"),a=$s(t,"targets","inTopK");oe(r.rank>1,()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`),oe(r.rank-1===a.rank,()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${a.rank}`),ue(r.shape.slice(0,r.shape.length-1),a.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const s=r.shape[r.shape.length-1];oe(n>0&&n<=s,()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${s}), but got ${n}`);const i=await r.data(),o=await a.data(),[u,l]=[i.length/s,s],c=Ie("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),a=[];for(let e=0;e<r.length;e++)a.push({value:r[e],index:e});a.sort((e,t)=>t.value-e.value),c[e]=0;for(let t=0;t<n;t++)if(a[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==a&&a.dispose(),Ds(c,a.shape,"bool")},_h=As({conv2DBackpropFilter_:function(e,t,n,r,a,s="NHWC",i){let o=e;3===e.rank&&(o=yl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yl(t,[1,t.shape[0],t.shape[1],t.shape[2]])),oe(4===o.rank,()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`),oe(4===u.rank,()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`),oe(4===n.length,()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`);const l="NHWC"===s?o.shape[3]:o.shape[1],c="NHWC"===s?u.shape[3]:u.shape[1];oe(l===n[2],()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`),oe(c===n[3],()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`),null!=i&&oe(fe(a),()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${i} but got pad ${a}.`);const d={x:o,dy:u},h={strides:r,pad:a,dataFormat:s,dimRoundingMode:i,filterShape:n};return bs.runKernel(Ft,d,h)}});function Ah(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return yu(e,rh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Rh(e,t){let n=t;const r=zu(e.shape,t.shape);return r.length>0&&(n=Ac(n,r)),yl(n,e.shape)}function Fh(e,t,n,r){if("linear"===t)return e;if("relu"===t)return Ed(e);if("elu"===t)return sc(e);if("relu6"===t)return _d(e);if("prelu"===t)return gd(e,n);if("leakyrelu"===t)return wc(e,r);if("sigmoid"===t)return vl(e);throw new Error(`Unknown fused activation ${t}.`)}const Dh=(e,t)=>!(e>0)||"linear"===t,Mh=As({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Dh(bs.state.gradientDepth,u)){let d=Pl(e,t,n,r,a,s,i);return null!=o&&(d=fu(d,o)),Fh(d,u,l,c)}const d=$s(e,"x","conv2d","float32"),h=$s(t,"filter","conv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=yl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===p.rank,()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`),oe(4===h.rank,()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`),null!=i&&oe(fe(r),()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`),oe(p.shape[3]===h.shape[2],()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`),oe(ml(n,s),()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),oe("NHWC"===a,()=>`Error in conv2d: got dataFormat of ${a} but only NHWC is currently supported.`);const m=ol(p.shape,h.shape,n,s,r,i);let g,y;null!=o&&(g=$s(o,"bias","fused conv2d"),[g]=ls(g,d),Pu(m.outShape,g.shape)),null!=l&&(y=$s(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[a,i,o,l]=t,c=Ah(e,o,u);oe(fl(s),()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`);const d=[Wl(i.shape,c,a,n,r),_h(i,c,a.shape,n,r)];if(null!=l){const e=Rh(l,c);d.push(e)}return d},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Tu((e,t,n)=>{let r=bs.runKernel(oa,x,w);return n([t,e,r]),f&&(r=yl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}});return e(p,h)}{const e=Tu((e,t,n,r)=>{let a=bs.runKernel(oa,x,w);return r([t,e,a,n]),f&&(a=yl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}});return e(p,h,g)}}}),Oh=As({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,a,s=[1,1],i){let o=e;3===e.rank&&(o=yl(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=yl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,filterShape:n};return bs.runKernel(Ht,l,c)}}),Lh=As({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,a,s=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=yl(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:a,dimRoundingMode:i,dilations:s,inputShape:e},d=bs.runKernel(jt,l,c);return u?yl(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),zh=As({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:a="NHWC",dilations:s=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Dh(bs.state.gradientDepth,u)){let d=Zl(e,t,n,r,a,s,i);return null!=o&&(d=fu(d,o)),Fh(d,u,l,c)}const d=$s(e,"x","depthwiseConv2d","float32"),h=$s(t,"filter","depthwiseConv2d","float32");let p=d,f=!1;3===d.rank&&(f=!0,p=yl(d,[1,d.shape[0],d.shape[1],d.shape[2]])),oe(4===p.rank,()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`),oe(4===h.rank,()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`),oe(p.shape[3]===h.shape[2],()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`),null==s&&(s=[1,1]),oe(ml(n,s),()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`),null!=i&&oe(fe(r),()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${i} but got pad ${r}.`);const m=ol(p.shape,h.shape,n,s,r,i,!0);let g,y;null!=o&&(g=$s(o,"bias","fused conv2d"),[g]=ls(g,d),Pu(m.outShape,g.shape)),null!=l&&(y=$s(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{oe(fl(s),()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${s}'`);const[a,o,l,c]=t,d=Ah(e,l,u),h=Lh(o.shape,d,a,n,r,s,i),p=Oh(o,d,a.shape,n,r,s,i);return null!=c?[h,p,Rh(g,d)]:[h,p]},x={x:p,filter:h,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:a,dilations:s,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=Tu((e,t,n)=>{let r=bs.runKernel(ua,x,w);return n([t,e,r]),f&&(r=yl(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}});return e(p,h)}{const e=Tu((e,t,n,r)=>{let a=bs.runKernel(ua,x,w);return r([t,e,a,n]),f&&(a=yl(a,[a.shape[1],a.shape[2],a.shape[3]])),{value:a,gradFunc:b}});return e(p,h,g)}}}),Ph=As({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:a,activation:s="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Dh(bs.state.gradientDepth,s)){let u=Zi(e,t,n,r);return null!=a&&(u=fu(u,a)),Fh(u,s,i,o)}let u=$s(e,"a","fused matMul"),l=$s(t,"b","fused matMul");[u,l]=ls(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],d=r?l.shape[l.rank-1]:l.shape[l.rank-2],h=n?u.shape[u.rank-1]:u.shape[u.rank-2],p=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=de(f),y=de(m);oe(u.rank>=2&&l.rank>=2&&u.rank===l.rank,()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${u.rank} and ${l.rank}.`),oe(pe(f,m),()=>`Error in fused matMul: outer dimensions (${f}) and (${m}) of Tensors with shapes ${u.shape} and ${l.shape} must match.`),oe(c===d,()=>`Error in fused matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`);const b=u.shape.slice(0,-2).concat([h,p]),x=yl(u,n?[g,c,h]:[g,h,c]),w=yl(l,r?[y,p,d]:[y,d,p]);let v,k;null!=a&&(v=$s(a,"bias","fused matMul"),[v]=ls(v,u),Pu(b,v.shape)),null!=i&&(k=$s(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,u,l]=t,c=Ah(yl(e,u.shape),u,s);let d,h;return n||r?!n&&r?(d=Zi(c,o,!1,!1),h=Zi(c,i,!0,!1)):n&&!r?(d=Zi(o,c,!1,!0),h=Zi(i,c,!1,!1)):(d=Zi(o,c,!0,!0),h=Zi(c,i,!0,!0)):(d=Zi(c,o,!1,!0),h=Zi(i,c,!0,!1)),null!=a?[d,h,Rh(l,c)]:[d,h]},S={a:x,b:w,bias:v,preluActivationWeights:k},N={transposeA:n,transposeB:r,activation:s,leakyreluAlpha:o};if(null==a){const e=Tu((e,t,n)=>{const r=bs.runKernel(ia,S,N);return n([e,t,r]),{value:yl(r,b),gradFunc:I}});return e(x,w)}{const e=Tu((e,t,n,r)=>{const a=bs.runKernel(ia,S,N);return r([e,t,a,n]),{value:yl(a,b),gradFunc:I}});return e(x,w,v)}}}),Bh=As({hammingWindow_:function(e){return $h(e,.54,.46)}}),Wh=As({hannWindow_:function(e){return $h(e,.5,.5)}}),Vh=As({frame_:function(e,t,n,r=!1,a=0){let s=0;const i=[];for(;s+t<=e.size;)i.push(kl(e,s,t)),s+=n;if(r)for(;s<e.size;){const r=s+t-e.size,o=wl([kl(e,s,t-r),Au([r],a)]);i.push(o),s+=n}return 0===i.length?oh([],[0,t]):yl(wl(i),[i.length,t])}}),Uh=As({stft_:function(e,t,n,r,a=Wh){null==r&&(r=Ch(t));const s=Vh(e,t,n),i=yu(s,a(t));return Qd(i,r)}}),Gh=As({cropAndResize_:function(e,t,n,r,a="bilinear",s=0){const i=$s(e,"image","cropAndResize"),o=$s(t,"boxes","cropAndResize","float32"),u=$s(n,"boxInd","cropAndResize","int32"),l=o.shape[0];oe(4===i.rank,()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`),oe(2===o.rank&&4===o.shape[1],()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`),oe(1===u.rank&&u.shape[0]===l,()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`),oe(2===r.length,()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`),oe(r[0]>=1&&r[1]>=1,()=>`cropSize must be atleast [1,1], but was ${r}`),oe("bilinear"===a||"nearest"===a,()=>`method must be bilinear or nearest, but was ${a}`);const c={image:i,boxes:o,boxInd:u},d={method:a,extrapolationValue:s,cropSize:r};return bs.runKernel(Wt,c,d)}}),Hh=As({flipLeftRight_:function(e){const t=$s(e,"image","flipLeftRight","float32");oe(4===t.rank,()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`);const n={image:t};return bs.runKernel(ln,n,{})}}),jh=As({grayscaleToRGB_:function(e){const t=$s(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];oe(t.rank>=2,()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`),oe(1===r,()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`);const a=new Array(t.rank);return a.fill(1,0,n),a[n]=3,cc(t,a)}}),qh=As({rotateWithOffset_:function(e,t,n=0,r=.5){const a=$s(e,"image","rotateWithOffset","float32");oe(4===a.rank,()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${a.rank}.`);const s={image:a},i={radians:t,fillValue:n,center:r};return bs.runKernel(sa,s,i)}});function Kh(e,t,n,r,a,s){null==r&&(r=.5),null==a&&(a=Number.NEGATIVE_INFINITY),null==s&&(s=0);const i=e.shape[0];return n=Math.min(n,i),oe(0<=r&&r<=1,()=>`iouThreshold must be in [0, 1], but was '${r}'`),oe(2===e.rank,()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`),oe(4===e.shape[1],()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`),oe(1===t.rank,()=>"scores must be a 1D tensor"),oe(t.shape[0]===i,()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`),oe(0<=s&&s<=1,()=>`softNmsSigma must be in [0, 1], but was '${s}'`),{maxOutputSize:n,iouThreshold:r,scoreThreshold:a,softNmsSigma:s}}const Xh=As({nonMaxSuppression_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=$s(e,"boxes","nonMaxSuppression","float32"),i=$s(t,"scores","nonMaxSuppression","float32"),o=Kh(s,i,n,r,a),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:a=o.scoreThreshold};return bs.runKernel(Zn,{boxes:s,scores:i},u)}});function Yh(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,a=e.length,s=0,i=!1;for(;r<a;){s=r+(a-r>>>1);const o=n(t,e[s]);o>0?r=s+1:(a=s,i=!o)}return i?r:-r-1}(e,t,n||Zh)}(e,t,n),a=r<0?-(r+1):r;e.splice(a,0,t)}function Zh(e,t){return e>t?1:e<t?-1:0}function Jh(e,t,n,r,a){return tp(e,t,n,r,a,0)}function Qh(e,t,n,r,a,s){return tp(e,t,n,r,a,0,!1,s,!0)}function ep(e,t,n,r,a,s){return tp(e,t,n,r,a,s,!0)}function tp(e,t,n,r,a,s,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>a&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(ap);const c=s>0?-.5/s:0,d=[],h=[];for(;d.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:s,suppressBeginIndex:i}=t;if(n<a)break;let o=!1;for(let n=d.length-1;n>=i;--n){const i=np(e,s,d[n]);if(i>=r){o=!0;break}if(t.score=t.score*rp(r,c,i),t.score<=a)break}t.suppressBeginIndex=d.length,o||(t.score===n?(d.push(s),h.push(t.score)):t.score>a&&Yh(l,t,ap))}const p=d.length,f=n-p;o&&f>0&&(d.push(...new Array(f).fill(0)),h.push(...new Array(f).fill(0)));const m={selectedIndices:d};return i&&(m.selectedScores=h),u&&(m.validOutputs=p),m}function np(e,t,n){const r=e.subarray(4*t,4*t+4),a=e.subarray(4*n,4*n+4),s=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(a[0],a[2]),c=Math.min(a[1],a[3]),d=Math.max(a[0],a[2]),h=Math.max(a[1],a[3]),p=(o-s)*(u-i),f=(d-l)*(h-c);if(p<=0||f<=0)return 0;const m=Math.max(s,l),g=Math.max(i,c),y=Math.min(o,d),b=Math.min(u,h),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(p+f-x)}function rp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function ap(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const sp=As({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=$s(e,"boxes","nonMaxSuppression"),o=$s(t,"scores","nonMaxSuppression"),u=Kh(i,o,n,r,a,s),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:a=u.scoreThreshold,softNmsSigma:s=u.softNmsSigma},d=bs.runKernel(Qn,l,c);return{selectedIndices:d[0],selectedScores:d[1]}}}),ip=As({nonMaxSuppressionPadded_:function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=$s(e,"boxes","nonMaxSuppression"),o=$s(t,"scores","nonMaxSuppression"),u=Kh(i,o,n,r,a,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:s},d=bs.runKernel(Jn,l,c);return{selectedIndices:d[0],validOutputs:d[1]}}}),op=As({resizeBilinear_:function(e,t,n=!1,r=!1){const a=$s(e,"images","resizeBilinear");oe(3===a.rank||4===a.rank,()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`),oe(2===t.length,()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`),oe(!1===r||!1===n,()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=yl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=bs.runKernel(mr,o,u);return i?yl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),up=As({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const a=$s(e,"images","resizeNearestNeighbor");oe(3===a.rank||4===a.rank,()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`),oe(2===t.length,()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`),oe("float32"===a.dtype||"int32"===a.dtype,()=>"`images` must have `int32` or `float32` as dtype"),oe(!1===r||!1===n,()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false.");let s=a,i=!1;3===a.rank&&(i=!0,s=yl(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[]=t,o={images:s},u={alignCorners:n,halfPixelCenters:r,size:t},l=bs.runKernel(pr,o,u);return i?yl(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),lp=As({threshold_:function(e,t="binary",n=!1,r=.5){const a=$s(e,"image","threshold"),s=a.shape[0]*a.shape[1];let i,o,u,l,c=yu(ih([r]),255);if(oe(3===a.rank,()=>`Error in threshold: image must be rank 3,but got rank ${a.rank}.`),oe(3===a.shape[2]||1===a.shape[2],()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${a.shape[2]}.`),oe("int32"===a.dtype||"float32"===a.dtype,()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${a.dtype}.`),oe("otsu"===t||"binary"===t,()=>`Method must be binary or otsu, but was ${t}`),3===a.shape[2]){[i,o,u]=Jd(a,[1,1,1],-1);const e=yu(i,.2989),t=yu(o,.587),n=yu(u,.114);l=fu(fu(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,a,s,i,o,u=ih([-1]),l=ih([0]),c=ih([0]);for(let d=0;d<e.size-1;d++){n=kl(e,0,d+1),r=kl(e,d+1),i=gu(Ac(n),t),o=gu(Ac(r),t);const h=Ac(yu(n,Td(0,n.size)));a=gu(h,Ac(n));const p=Au(r.shape,n.size),f=fu(Td(0,r.size),p),m=yu(r,f);s=gu(Ac(m),Ac(r));const g=Du(a,s),y=Du(a,s),b=yu(i,o);c=yu(yu(b,g),y);const x=fc(c,l);l=tc(x,c,l),u=tc(x,ih([d]),u)}return u}(_l(Ai(Od(l),"int32"),Ds([]),256),s));const d=n?kc(l,c):fc(l,c);return Ai(yu(d,255),"int32")}}),cp=As({transform_:function(e,t,n="nearest",r="constant",a=0,s){const i=$s(e,"image","transform","float32"),o=$s(t,"transforms","transform","float32");oe(4===i.rank,()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`),oe(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],()=>"Error in transform: Input transform should be batch x 8 or 1 x 8"),oe(null==s||2===s.length,()=>`Error in transform: outputShape must be [height, width] or null, but got ${s}.`);const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:a,outputShape:s};return bs.runKernel(Zr,u,l)}}),dp=As({bandPart_:function(e,t,n){oe(t%1==0,()=>`bandPart(): numLower must be an integer, got ${t}.`),oe(n%1==0,()=>`bandPart(): numUpper must be an integer, got ${n}.`);const r=$s(e,"a","bandPart");oe(r.rank>=2,()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`);const a=r.shape,[s,i]=r.shape.slice(-2);if(!(t<=s))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${s}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=s),n<0&&(n=i);const o=yl(Td(0,s,1,"int32"),[-1,1]),u=Td(0,i,1,"int32"),l=Du(o,u),c=Vc(kc(l,$u(+t,"int32")),mc(l,$u(-n,"int32"))),d=Yc([s,i],r.dtype);return yl(nh(mh(yl(r,[-1,s,i])).map(e=>tc(c,e,d))),a)}}),hp=As({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,oe(null!=e&&e.length>0,()=>"Gram-Schmidt process: input must not be null, undefined, or empty");const n=e[0].shape[0];for(let t=1;t<e.length;++t)oe(e[t].shape[0]===n,()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`)}else t=!0,e=Jd(e,e.shape[0],0).map(e=>th(e,[0]));oe(e.length<=e[0].shape[0],()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`);const n=[],r=e;for(let t=0;t<e.length;++t)n.push(bs.tidy(()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=yu(Ac(yu(n[r],e)),n[r]);e=Du(e,t)}return gu(e,vh(e,"euclidean"))}));return t?nh(n,0):n}});function pp(e,t=!1){return bs.tidy(()=>{oe(2===e.shape.length,()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`);const n=e.shape[0],r=e.shape[1];let a=dc(n),s=Ri(e);const i=oh([[1]],[1,1]);let o=Ri(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=s,u=o,l=a;[o,s,a]=bs.tidy(()=>{const t=kl(s,[e,e],[n-e,1]),u=vh(t),l=kl(s,[e,e],[1,1]),c=tc(fc(l,0),oh([[-1]]),oh([[1]])),d=Du(l,yu(c,u)),h=gu(t,d);o=1===h.shape[0]?Ri(i):wl([i,kl(h,[1,0],[h.shape[0]-1,h.shape[1]])],0);const p=Cc(gu(Zi(c,d),u)),f=kl(s,[e,0],[n-e,r]),m=yu(p,o),g=Qi(o);if(0===e)s=Du(f,Zi(m,Zi(g,f)));else{const t=Du(f,Zi(m,Zi(g,f)));s=wl([kl(s,[0,0],[e,r]),t],0)}const y=Qi(m),b=kl(a,[0,e],[n,a.shape[1]-e]);if(0===e)a=Du(b,Zi(Zi(b,o),y));else{const t=Du(b,Zi(Zi(b,o),y));a=wl([kl(a,[0,0],[n,e]),t],1)}return[o,s,a]}),nu([t,u,l])}return!t&&n>r&&(a=kl(a,[0,0],[n,r]),s=kl(s,[0,0],[r,r])),[a,s]})}const fp=As({qr_:function(e,t=!1){if(oe(e.rank>=2,()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`),2===e.rank)return pp(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce((e,t)=>e*t),r=mh(yl(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),a=[],s=[];return r.forEach(e=>{const[n,r]=pp(e,t);a.push(n),s.push(r)}),[yl(nh(a,0),e.shape),yl(nh(s,0),e.shape)]}}});var mp;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(mp||(mp={}));const gp=As({computeWeightedLoss_:function(e,t,n=mp.SUM_BY_NONZERO_WEIGHTS){const r=$s(e,"losses","computeWeightedLoss");let a=null;null!=t&&(a=$s(t,"weights","computeWeightedLoss"));const s=null==a?r:yu(r,a);if(n===mp.NONE)return s;if(n===mp.SUM)return Ac(s);if(n===mp.MEAN){if(null==a)return Xc(s);{const e=r.size/a.size,t=gu(Ac(s),Ac(a));return e>1?gu(t,$u(e)):t}}if(n===mp.SUM_BY_NONZERO_WEIGHTS){if(null==a)return gu(Ac(s),$u(r.size));{const e=yu(a,Zc(r.shape)),t=Ai(Ac(id(e,$u(0))),"float32");return gu(Ac(s),t)}}throw Error(`Unknown reduction: ${n}`)}}),yp=As({absoluteDifference_:function(e,t,n,r=mp.SUM_BY_NONZERO_WEIGHTS){const a=$s(e,"labels","absoluteDifference"),s=$s(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=$s(n,"weights","absoluteDifference")),ue(a.shape,s.shape,"Error in absoluteDifference: ");const o=Ou(Du(a,s));return gp(o,i,r)}}),bp=As({cosineDistance_:function(e,t,n,r,a=mp.SUM_BY_NONZERO_WEIGHTS){const s=$s(e,"labels","cosineDistance"),i=$s(t,"predictions","cosineDistance");let o=null;null!=r&&(o=$s(r,"weights","cosineDistance")),ue(s.shape,i.shape,"Error in cosineDistance: ");const u=$u(1),l=Du(u,Ac(yu(s,i),n,!0));return gp(l,o,a)}}),xp=As({hingeLoss_:function(e,t,n,r=mp.SUM_BY_NONZERO_WEIGHTS){let a=$s(e,"labels","hingeLoss");const s=$s(t,"predictions","hingeLoss");let i=null;null!=n&&(i=$s(n,"weights","hingeLoss")),ue(a.shape,s.shape,"Error in hingeLoss: ");const o=$u(1);a=Du(yu($u(2),a),o);const u=Ed(Du(o,yu(a,s)));return gp(u,i,r)}}),wp=As({huberLoss_:function(e,t,n,r=1,a=mp.SUM_BY_NONZERO_WEIGHTS){const s=$s(e,"labels","huberLoss"),i=$s(t,"predictions","huberLoss");let o=null;null!=n&&(o=$s(n,"weights","huberLoss")),ue(s.shape,i.shape,"Error in huberLoss: ");const u=$u(r),l=Ou(Du(i,s)),c=ed(l,u),d=Du(l,c),h=fu(yu($u(.5),xu(c)),yu(u,d));return gp(h,o,a)}}),vp=As({logLoss_:function(e,t,n,r=1e-7,a=mp.SUM_BY_NONZERO_WEIGHTS){const s=$s(e,"labels","logLoss"),i=$s(t,"predictions","logLoss");let o=null;null!=n&&(o=$s(n,"weights","logLoss")),ue(s.shape,i.shape,"Error in logLoss: ");const u=$u(1),l=$u(r),c=Cc(yu(s,Nc(fu(i,l)))),d=yu(Du(u,s),Nc(fu(Du(u,i),l))),h=Du(c,d);return gp(h,o,a)}}),kp=As({meanSquaredError_:function(e,t,n,r=mp.SUM_BY_NONZERO_WEIGHTS){const a=$s(e,"labels","meanSquaredError"),s=$s(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=$s(n,"weights","meanSquaredError")),ue(a.shape,s.shape,"Error in meanSquaredError: ");const o=eh(a,s);return gp(o,i,r)}}),Ip=As({sigmoidCrossEntropy_:function(e,t,n,r=0,a=mp.SUM_BY_NONZERO_WEIGHTS){let s=$s(e,"multiClassLabels","sigmoidCrossEntropy");const i=$s(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=$s(n,"weights","sigmoidCrossEntropy")),ue(s.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=$u(r),t=$u(1),n=$u(.5);s=fu(yu(s,Du(t,e)),yu(n,e))}const u=function(e,t){const n=$s(e,"labels","sigmoidCrossEntropyWithLogits"),r=$s(t,"logits","sigmoidCrossEntropyWithLogits");ue(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const a=Ed(r),s=yu(r,n),i=Tc(oc(Cc(Ou(r))));return fu(Du(a,s),i)}(s,i);return gp(u,o,a)}}),Sp=As({softmaxCrossEntropy_:function(e,t,n,r=0,a=mp.SUM_BY_NONZERO_WEIGHTS){let s=$s(e,"onehotLabels","softmaxCrossEntropy");const i=$s(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=$s(n,"weights","softmaxCrossEntropy")),ue(s.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=$u(r),t=$u(1),n=$u(s.shape[1]);s=fu(yu(s,Du(t,e)),gu(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=Tu((e,t,r)=>{const a=Wc(t,[n],!0),s=Du(Ai(t,"float32"),a);r([e,s]);const i=Cc(yu(s,e));return{value:Ac(i,[n]),gradFunc:(e,t)=>{const[r,a]=t,s=Oc(e.shape,[n]);return[yu(yl(e,s),Du(Ai(r,"float32"),oc(a))),yu(yl(e,s),Du(oc(a),Ai(r,"float32")))]}}});return r(e,t)}(s,i);return gp(u,o,a)}}),Np=As({sparseFillEmptyRows_:function(e,t,n,r){const a=$s(e,"indices","sparseFillEmptyRows"),s=$s(t,"values","sparseFillEmptyRows"),i=$s(n,"denseShape","sparseFillEmptyRows"),o=$s(r,"defaultValue","sparseFillEmptyRows",s.dtype);if(2!==a.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${a.shape}`);if(1!==s.rank)throw new Error(`Values should be Tensor1D but received shape ${s.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:a,values:s,denseShape:i,defaultValue:o},l=bs.runKernel(Mr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),Tp=As({sparseReshape_:function(e,t,n){const r=$s(e,"inputIndices","sparseReshape"),a=$s(t,"inputShape","sparseReshape"),s=$s(n,"newShape","sparseReshape");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Input shape should be Tensor1D but received shape ${a.shape}`);if(1!==s.rank)throw new Error(`New shape should be Tensor1D but received shape ${s.shape}`);const i={inputIndices:r,inputShape:a,newShape:s},o=bs.runKernel(Or,i);return{outputIndices:o[0],outputShape:o[1]}}}),Cp=As({sparseSegmentMean_:function(e,t,n){const r=$s(e,"data","sparseSegmentMean"),a=$s(t,"indices","sparseSegmentMean"),s=$s(n,"segmentIds","sparseSegmentMean");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return bs.runKernel(Lr,i)}}),$p=As({sparseSegmentSum_:function(e,t,n){const r=$s(e,"data","sparseSegmentSum"),a=$s(t,"indices","sparseSegmentSum"),s=$s(n,"segmentIds","sparseSegmentSum");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${a.shape}`);if(1!==s.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${s.shape}`);const i={data:r,indices:a,segmentIds:s};return bs.runKernel(zr,i)}}),Ep=As({stringNGrams_:function(e,t,n,r,a,s,i,o){const u=$s(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=$s(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:a,rightPad:s,padWidth:i,preserveShortSequences:o},d={data:u,dataSplits:l},h=bs.runKernel(Ur,d,c);return{nGrams:h[0],nGramsSplits:h[1]}}}),_p=As({stringSplit_:function(e,t,n=!0){const r=$s(e,"input","stringSplit","string"),a=$s(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==a.rank)throw new Error(`Delimiter should be a scalar but received shape ${a.shape}`);const s={skipEmpty:n},i={input:r,delimiter:a},o=bs.runKernel(Gr,i,s);return{indices:o[0],values:o[1],shape:o[2]}}}),Ap=As({stringToHashBucketFast_:function(e,t){const n=$s(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const a={input:n};return bs.runKernel(Hr,a,r)}}),Rp={fft:Xd,ifft:Yd,rfft:Qd,irfft:Zd},Fp={hammingWindow:Bh,hannWindow:Wh,frame:Vh,stft:Uh},Dp={flipLeftRight:Hh,grayscaleToRGB:jh,resizeNearestNeighbor:up,resizeBilinear:op,rotateWithOffset:qh,cropAndResize:Gh,nonMaxSuppression:Xh,nonMaxSuppressionAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY){const s=$s(e,"boxes","nonMaxSuppressionAsync"),i=$s(t,"scores","nonMaxSuppressionAsync"),o=Kh(s,i,n,r,a);n=o.maxOutputSize,r=o.iouThreshold,a=o.scoreThreshold;const u=await Promise.all([s.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:d}=Jh(l,c,n,r,a);return s!==e&&s.dispose(),i!==t&&i.dispose(),ih(d,"int32")},nonMaxSuppressionWithScore:sp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=0){const i=$s(e,"boxes","nonMaxSuppressionAsync"),o=$s(t,"scores","nonMaxSuppressionAsync"),u=Kh(i,o,n,r,a,s);n=u.maxOutputSize,r=u.iouThreshold,a=u.scoreThreshold,s=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],d=l[1],{selectedIndices:h,selectedScores:p}=ep(c,d,n,r,a,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ih(h,"int32"),selectedScores:ih(p)}},nonMaxSuppressionPadded:ip,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,a=Number.NEGATIVE_INFINITY,s=!1){const i=$s(e,"boxes","nonMaxSuppressionAsync"),o=$s(t,"scores","nonMaxSuppressionAsync"),u=Kh(i,o,n,r,a,null),l=u.maxOutputSize,c=u.iouThreshold,d=u.scoreThreshold,[h,p]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=Qh(h,p,l,c,d,s);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:ih(f,"int32"),validOutputs:$u(m,"int32")}},threshold:lp,transform:cp},Mp={bandPart:dp,gramSchmidt:hp,qr:fp},Op={absoluteDifference:yp,computeWeightedLoss:gp,cosineDistance:bp,hingeLoss:xp,huberLoss:wp,logLoss:vp,meanSquaredError:kp,sigmoidCrossEntropy:Ip,softmaxCrossEntropy:Sp},Lp={sparseFillEmptyRows:Np,sparseReshape:Tp,sparseSegmentMean:Cp,sparseSegmentSum:$p},zp={stringNGrams:Ep,stringSplit:_p,stringToHashBucketFast:Ap},Pp={sgd:Hu.sgd,momentum:Hu.momentum,adadelta:Hu.adadelta,adagrad:Hu.adagrad,rmsprop:Hu.rmsprop,adamax:Hu.adamax,adam:Hu.adam},Bp="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Wp(){return new Promise(e=>Bp(()=>e()))}function Vp(e,t){const n=e[0].length;e.forEach((e,t)=>{oe(e.length===n,()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`)}),oe(t>=0&&t<n,()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`);const r=e[0];e.forEach((e,a)=>{for(let s=0;s<n;s++)oe(s===t||e[s]===r[s],()=>`Error in concat${n}D: Shape of tensors[${a}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${a}.`)})}function Up(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Gp=30;function Hp(e){return e<=Gp?e:Oe(e,Math.floor(Math.sqrt(e)))}function jp(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function qp(e,t,n,r=!0){let a=[];if(r)a=a.concat(t.slice(0)),a.push(e[0]/n),a=a.concat(e.slice(1));else{a=a.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)a=a.concat([e[r+1]/t[r],t[r]]);a=a.concat(e.slice(n+1))}return a}function Kp(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],a=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?a.push(r):n.push(r);r.push(...n),r.push(0),r.push(...a)}return r}function Xp(e,t,n,r=!0){const a=[];r?a.push(e[0]/n):a.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?a.push(t[n-1]*e[n]):a.push(e[n]/t[n-1]):a.push(e[n]);return a}function Yp(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Zp(e,t,n){const r=e.slice(0,1);for(let a=0;a<n;++a)r.push(e[a+1]-t[a][0]-t[a][1]);return r}const Jp=1.7580993408473768,Qp=1.0507009873554805,ef=.3275911,tf=.254829592,nf=-.284496736,rf=1.421413741,af=-1.453152027,sf=1.061405429;function of(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function uf(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function lf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function cf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function df(e,t){return{real:e[2*t],imag:e[2*t+1]}}function hf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function pf(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let a=0;a<Math.ceil(e/2);a++){const s=(t?2:-2)*Math.PI*(a/e);n[a]=Math.cos(s),r[a]=Math.sin(s)}return{real:n,imag:r}}function ff(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const mf="->",gf=/->/g,yf=",",bf="...";function xf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(gf,"").length)/mf.length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error(`Equation must contain exactly one arrow ("${mf}").`);const[r,a]=e.split(mf);oe(-1===r.indexOf(bf),()=>`The ellipsis notation ("${bf}") is not supported yet.`);const s=r.split(yf),i=s.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<a.length;++e){const t=a[e];if(!s.some(e=>-1!==e.indexOf(t)))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&t!==yf&&o.push(t)}const u=new Array(s.length);for(let e=0;e<i;++e){if(new Set(s[e].split("")).size!==s[e].length)throw new Error(`Found duplicate axes in input component ${s[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<s[e].length;++t)u[e].push(o.indexOf(s[e][t]))}const l=o.length,c=[];for(let e=a.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function wf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter(e=>-1!==e),{permutationIndices:n,expandDims:r}}function vf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const a=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=a[n]:oe(r[t[e][n]]===a[n],()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(a)}, but got dimension ${a[n]}`)}}function kf(e,t){const n=e,r=[];let a=0;0===e.length&&n.push(-1),a=e.length+1;for(let e=0;e<a;++e)r.push([]);const s=[];for(let e=0;e<n.length;++e){const a=Sf(t,n[e]);for(const t of a)-1===s.indexOf(t)&&(r[e].push(t),s.push(t))}return{path:n,steps:r}}function If(e){return e.every((e,t)=>e===t)}function Sf(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function Nf(e,t,n=0){let r=[];if("number"==typeof t)oe(e.shape[n]%t===0,()=>"Number of splits must evenly divide the axis."),r=new Array(t).fill(e.shape[n]/t);else{const a=t.reduce((e,t)=>(-1===t&&(e+=1),e),0);oe(a<=1,()=>"There should be only one negative value in split array.");const s=t.indexOf(-1);if(-1!==s){const r=t.reduce((e,t)=>t>0?e+t:e);t[s]=e.shape[n]-r}oe(e.shape[n]===t.reduce((e,t)=>e+t),()=>"The sum of sizes must match the size of the axis dimension."),r=t}return r}function Tf(e,t){let n,r=!1;for(e<=Gp?(n=e,r=!0):n=Oe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Oe(e,n+1);return n}function Cf(e,t,n){const r=[],a=e.length;for(let s=0;s<a;s++)s!==t?r.push(e[s]):r.push(n);return r}function $f(e,t,n,r){const a=t.shape.length,s=e.shape.length;if(0!==r&&(r<-a||r>a))throw new Error(`Expect batchDims in the range of [-${a}, ${a}], but got ${r}`);if(r<0&&(r+=a),r>s)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${s}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<a;e++)o.push(t.shape[e]);for(let t=n+1;t<s;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function Ef(e){try{return e.map(e=>Pa(e))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function _f(e){return e.map(e=>za(e))}var Af,Rf;!function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(Af||(Af={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(Rf||(Rf={}));const Ff={};function Df(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};Ff[e]=n}function Mf(e){return Ff[e]}function Of(e){delete Ff[e]}function Lf(e,t,n,r,a){const s=t.inputParams[e];if(s&&void 0!==s.inputIndexStart){const e=s.inputIndexStart,i=0===s.inputIndexEnd?void 0:void 0===s.inputIndexEnd?e+1:s.inputIndexEnd;if("tensor"===s.type)return zf(t.inputNames[s.inputIndexStart],n,r,a);if("tensors"===s.type)return t.inputNames.slice(e,i).map(e=>zf(e,n,r,a));const o=zf(t.inputNames.slice(e)[0],n,r,a),u=o.dataSync();return"number"===s.type?u[0]:Pe(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function zf(e,t,n,r){const[a,s]=Wf(e);if(null!=r){const e=r.getHashTableHandleByName(a);if(null!=e)return e}const i=n.currentContextIds.find(e=>!!t[Bf(a,e)]);return void 0!==i?t[Bf(a,i)][s]:void 0}function Pf(e,t){const[n,r,a]=Wf(e);return[Bf(n,t&&t.currentContextId),r,a]}function Bf(e,t){return t?`${e}-${t}`:e}function Wf(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function Vf(e,t,n){let r=Lf("pad",e,t,n);if("explicit"===r){r=Lf("explicitPaddings",e,t,n);const a=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)a[e][0]=r[2*e],a[e][1]=r[2*e+1];return a}return r}function Uf(e){return e.kept?e:Ri(e)}const Gf=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Hf=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],jf=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],qf=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],Kf=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],Xf=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],Yf=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],Zf=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],Jf=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],Qf=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],em=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],tm=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],nm=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],rm=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],am=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],sm=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],im=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],om=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],um=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class lm{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[y,b,x,w,v,k,I,S,N,T,C,$,E,_,A,R,F,D,M].map(e=>e.json));this.opMappers=e.reduce((e,t)=>(e[t.tfOpName]=t,e),{})}transformGraph(e,t={}){const n=e.node,r=[],a=[],s=[],i=n.reduce((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?a.push(e[t.name]):null!=t.input&&0!==t.input.length||s.push(e[t.name]),e),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const d=Object.keys(i);d.forEach(e=>{const t=i[e];t.inputNames.forEach((e,n)=>{const[r,,a]=Pf(e),s=i[r];if(null!=s.outputs){const e=s.outputs.indexOf(a);if(-1!==e){const a=`${r}:${e}`;t.inputNames[n]=a}}t.inputs.push(s),s.children.push(t)})}),0===Object.keys(c).length?d.forEach(e=>{const t=i[e];0===t.children.length&&u.push(t)}):Object.keys(c).forEach(e=>{const[t]=Pf(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))}),Object.keys(l).length>0?Object.keys(l).forEach(e=>{const[t]=Pf(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))}):o=r;let h={};null!=e.library&&null!=e.library.function&&(h=e.library.function.reduce((e,t)=>(e[t.signature.name]=this.mapFunction(t),e),{}));const p={nodes:i,inputs:o,outputs:u,weights:a,placeholders:r,signature:t,functions:h};return s.length>0&&(p.initNodes=s),p}mapSignatureEntries(e){return Object.keys(e||{}).reduce((t,n)=>(t[e[n].name]=n,t),{})}mapNode(e){const t=Mf(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map(e=>e.startsWith("^")?e.substr(1):e),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce((t,n)=>{const r=n.type;let a;switch(n.type){case"string":a=dm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=dm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":a=vm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=vm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":a=pm(e.attr,n.tfName,n.defaultValue||0),void 0===a&&n.tfDeprecatedName&&(a=pm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":a=wm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=wm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":a=hm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=hm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":a=Im(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=Im(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":a=xm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=xm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":a=km(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=km(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":a=gm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=gm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":a=ym(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=ym(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":a=mm(e.attr,n.tfName,n.defaultValue),void 0===a&&n.tfDeprecatedName&&(a=mm(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:a,type:r},t},{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e),{}));const a=[],s=[];e.signature.inputArg.forEach(e=>{const[t]=Pf(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:fm(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,a.push(n),r[t]=n}),Object.keys(r).forEach(e=>{const t=r[e];t.inputNames.forEach((e,n)=>{const[a,,s]=Pf(e),i=r[a];if(null!=i.outputs){const e=i.outputs.indexOf(s);if(-1!==e){const r=`${a}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)})});const i=e.ret;e.signature.outputArg.forEach(e=>{const[t,n]=Pf(i[e.name]),a=r[t];null!=a&&(a.defaultOutput=n,s.push(a))});const o=this.mapArgsToSignature(e);return{nodes:r,inputs:a,outputs:s,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e),{}),outputs:e.signature.outputArg.reduce((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function cm(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=Je().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function dm(e,t,n,r=!1){const a=e[t];return null!=a?cm(a.s,r):n}function hm(e,t,n){const r=e[t];return r?r.b:n}function pm(e,t,n){const r=e[t]||{},a=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof a?a:parseInt(a,10)}function fm(e){switch("string"==typeof e&&(e=Af[e]),e){case Af.DT_FLOAT:return"float32";case Af.DT_INT32:case Af.DT_INT64:case Af.DT_INT8:case Af.DT_UINT8:return"int32";case Af.DT_BOOL:return"bool";case Af.DT_DOUBLE:return"float32";case Af.DT_STRING:return"string";default:return null}}function mm(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function gm(e,t,n){const r=e[t];return r&&r.type?fm(r.type):n}function ym(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map(e=>fm(e)):n}function bm(e){if(!e.unknownRank)return null!=e.dim?e.dim.map(e=>"number"==typeof e.size?e.size:parseInt(e.size,10)):[]}function xm(e,t,n){const r=e[t];return r&&r.shape?bm(r.shape):n}function wm(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map(e=>"number"==typeof e?e:parseInt(e,10)):n}function vm(e,t,n,r=!1){const a=e[t];return a&&a.list&&a.list.s?a.list.s.map(e=>cm(e,r)):n}function km(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map(e=>bm(e)):n}function Im(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class Sm{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map(e=>this.getInput(e)),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce((e,t)=>(e[t]=this.getAttr(t),e),{}))}getInput(e){return zf(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return zf(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return pm(this.node.rawAttrs,e,t);if(null!=n.s)return dm(this.node.rawAttrs,e,t);if(null!=n.b)return hm(this.node.rawAttrs,e,t);if(null!=n.shape)return xm(this.node.rawAttrs,e,t);if(null!=n.type)return gm(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return wm(this.node.rawAttrs,e,t);if(null!=n.list.s)return vm(this.node.rawAttrs,e,t);if(null!=n.list.shape)return km(this.node.rawAttrs,e,t);if(null!=n.list.b)return Im(this.node.rawAttrs,e,t);if(null!=n.list.type)return ym(this.node.rawAttrs,e,t)}return t}}function Nm(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){oe(e.length===t.length,()=>n+` Shapes ${e} and ${t} must match`);for(let r=0;r<e.length;r++){const a=e[r],s=t[r];oe(a<0||s<0||a===s,()=>n+` Shapes ${e} and ${t} must match`)}}}function Tm(e){return"number"!=typeof e&&!e.some(e=>e<0)}function Cm(e,t,n){let r=$m(e,n);const a=!Tm(r);if(a&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(a&&t.forEach(e=>{r=$m(e.shape,r)}),!Tm(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function $m(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const a=e[r],s=t[r];if(a>=0&&s>=0&&a!==s)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=a>=0?a:s}return n}class Em{constructor(e,t,n,r,a,s,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=a,this.dynamicSize=s,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=$u(0),ru(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()}),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map(e=>this.read(e))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),Nm(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,ru(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach((e,n)=>this.write(e,t[n]))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ds([],[0].concat(this.elementShape));const n=this.readMany(e);return Nm(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),nh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ds([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return Nm(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),wl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,mh(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map(e=>(n+=e,n));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const a=0===n?0:t.size/n,s=[];tu(()=>{t=yl(t,[1,n,a]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],a];s[n]=yl(kl(t,i,o),this.elementShape)}return s});const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,s)}}class _m{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach(e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);Nm(t,e.shape,"TensorList shape mismatch: "),ru(e)}),this.idTensor=$u(0),this.maxNumElements=r,ru(this.idTensor)}get id(){return this.idTensor.id}copy(){return new _m([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach(t=>{null!=e&&e.has(t.id)||t.dispose()}),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);Nm(e,this.elementShape,"TensorList shape mismatch: ");const r=Cm(this.elementShape,this.tensors,e);return tu(()=>{const e=this.tensors.map(e=>yl(e,r));return nh(e,0)})}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=Cm(this.elementShape,this.tensors,e),r=this.tensors.pop();return Nm(r.shape,e,"TensorList shape mismatch: "),yl(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(Nm(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");ru(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);Nm(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=Cm(this.elementShape,this.tensors,t);return yl(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);Nm(this.elementShape,t.shape,"TensorList shape mismatch: "),ru(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);Nm(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=Cm(this.elementShape,this.tensors,n);return 0===e.length?Ds([],[0].concat(r)):tu(()=>{const t=e.map(e=>yl(this.tensors[e],r));return nh(t,0)})}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);Nm(this.elementShape,t,"TensorList shape mismatch: ");const n=Cm(this.elementShape,this.tensors,t);return 0===this.size()?Ds([],[0].concat(n)):tu(()=>{const e=this.tensors.map(e=>yl(e,n));return wl(e,0)})}}function Am(e,t,n){const[r,a]=Lf("fusedOps",e,t,n),s="biasadd"===r,i=!s,o="prelu"===a,u="fusedbatchnorm"===r,l=Lf("numArgs",e,t,n);if(s){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&s&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=Lf("strides",e,t,n),d=Vf(e,t,n),h=Lf("dataFormat",e,t,n).toUpperCase(),p=Lf("dilations",e,t,n);let[f,m]=Lf("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:d,dataFormat:h,dilations:p,biasArg:f,preluArg:m,activationFunc:a,leakyreluAlpha:Lf("leakyreluAlpha",e,t,n)}}function Rm(e,t,n){return{boxes:Lf("boxes",e,t,n),scores:Lf("scores",e,t,n),maxOutputSize:Lf("maxOutputSize",e,t,n),iouThreshold:Lf("iouThreshold",e,t,n),scoreThreshold:Lf("scoreThreshold",e,t,n),softNmsSigma:Lf("softNmsSigma",e,t,n)}}class Fm{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=$u(0),this.tensorMap=new Map,ru(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return $u(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach(e=>e.dispose()),this.tensorMap.clear(),tu(()=>{const e=mh(t),r=n.length,a=e.length;oe(r===a,()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${a} elements.`);for(let t=0;t<r;t++){const r=n[t],a=e[t];ru(a),this.tensorMap.set(r,a)}return this.handle})}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return tu(()=>{const e=[];for(let r=0;r<n.length;r++){const a=n[r],s=this.findWithDefault(a,t);e.push(s)}return nh(e)})}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function Dm(e,t,n,r){const a=((e,t,n)=>{switch(e.category){case"arithmetic":return tu(()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[fu(Lf("a",e,t,n),Lf("b",e,t,n))];case"AddN":return[Ku(Lf("tensors",e,t,n))];case"FloorMod":case"Mod":return[nd(Lf("a",e,t,n),Lf("b",e,t,n))];case"Mul":return[yu(Lf("a",e,t,n),Lf("b",e,t,n))];case"RealDiv":case"Div":return[gu(Lf("a",e,t,n),Lf("b",e,t,n))];case"DivNoNan":return[nc(Lf("a",e,t,n),Lf("b",e,t,n))];case"FloorDiv":return[mu(Lf("a",e,t,n),Lf("b",e,t,n))];case"Sub":return[Du(Lf("a",e,t,n),Lf("b",e,t,n))];case"Minimum":return[ed(Lf("a",e,t,n),Lf("b",e,t,n))];case"Maximum":return[Bu(Lf("a",e,t,n),Lf("b",e,t,n))];case"Pow":return[Fu(Lf("a",e,t,n),Lf("b",e,t,n))];case"SquaredDifference":return[eh(Lf("a",e,t,n),Lf("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"basic_math":return tu(()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Ou(Lf("x",e,t,n))];case"Acos":return[ju(Lf("x",e,t,n))];case"Acosh":return[qu(Lf("x",e,t,n))];case"Asin":return[Qu(Lf("x",e,t,n))];case"Asinh":return[el(Lf("x",e,t,n))];case"Atan":return[tl(Lf("x",e,t,n))];case"Atan2":return[nl(Lf("x",e,t,n),Lf("y",e,t,n))];case"Atanh":return[rl(Lf("x",e,t,n))];case"Ceil":return[Fl(Lf("x",e,t,n))];case"Complex":return[Rs(Lf("real",e,t,n),Lf("imag",e,t,n))];case"Cos":return[jl(Lf("x",e,t,n))];case"Cosh":return[ql(Lf("x",e,t,n))];case"Elu":return[sc(Lf("x",e,t,n))];case"Erf":return[ic(Lf("x",e,t,n))];case"Exp":return[oc(Lf("x",e,t,n))];case"Expm1":return[lc(Lf("x",e,t,n))];case"Floor":return[hc(Lf("x",e,t,n))];case"Log":return[Nc(Lf("x",e,t,n))];case"Log1p":return[Tc(Lf("x",e,t,n))];case"Imag":return[gc(Lf("x",e,t,n))];case"Neg":return[Cc(Lf("x",e,t,n))];case"Reciprocal":return[$d(Lf("x",e,t,n))];case"Real":return[Cd(Lf("x",e,t,n))];case"Relu":return[Ed(Lf("x",e,t,n))];case"Round":return[Od(Lf("x",e,t,n))];case"Selu":return[zd(Lf("x",e,t,n))];case"Sigmoid":return[vl(Lf("x",e,t,n))];case"Sin":return[Vd(Lf("x",e,t,n))];case"Sign":return[Wd(Lf("x",e,t,n))];case"Sinh":return[Ud(Lf("x",e,t,n))];case"Softplus":return[$c(Lf("x",e,t,n))];case"Sqrt":return[bu(Lf("x",e,t,n))];case"Square":return[xu(Lf("x",e,t,n))];case"Tanh":return[Il(Lf("x",e,t,n))];case"Tan":return[sh(Lf("x",e,t,n))];case"ClipByValue":return[Dl(Lf("x",e,t,n),Lf("clipValueMin",e,t,n),Lf("clipValueMax",e,t,n))];case"Relu6":return[_d(Lf("x",e,t,n))];case"Rsqrt":return[Ld(zf(e.inputNames[0],t,n))];case"Prod":return[yd(Lf("x",e,t,n),Lf("axes",e,t,n))];case"LeakyRelu":return[wc(Lf("x",e,t,n),Lf("alpha",e,t,n))];case"Prelu":return[gd(Lf("x",e,t,n),Lf("alpha",e,t,n))];case"IsNan":return[xc(zf(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=Lf("thenBranch",e,t,n),a=Lf("elseBranch",e,t,n),s=Lf("cond",e,t,n),i=Lf("args",e,t,n);return(await s.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[a].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=Lf("body",e,t,n),a=Lf("cond",e,t,n),s=Lf("args",e,t,n),i=await n.functionMap[a].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap),o=s.map(e=>e.id);let u=await i[0].data();i.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()});let l=s;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map(e=>e.id);e.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()});const s=await n.functionMap[a].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await s[0].data(),s.forEach(e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()})}return l}case"LoopCond":return[Uf(Lf("pred",e,t,n))];case"Switch":{const r=Lf("pred",e,t,n);let a=Lf("data",e,t,n);return a.kept||(a=Uf(a)),(await r.data())[0]?[void 0,a]:[a,void 0]}case"Merge":{const r=e.inputNames.find(e=>void 0!==zf(e,t,n));return r?[Uf(zf(r,t,n))]:void 0}case"Enter":{const r=Lf("frameName",e,t,n),a=Lf("tensor",e,t,n);return n.enterFrame(r),[Uf(a)]}case"Exit":{const r=Lf("tensor",e,t,n);return n.exitFrame(),[Uf(r)]}case"NextIteration":{const r=Lf("tensor",e,t,n);return n.nextIteration(),[Uf(r)]}case"TensorArrayV3":{const r=Lf("size",e,t,n),a=Lf("dtype",e,t,n),s=Lf("elementShape",e,t,n),i=Lf("dynamicSize",e,t,n),o=Lf("clearAfterRead",e,t,n),u=Lf("identicalElementShapes",e,t,n),l=Lf("name",e,t,n),c=new Em(l,a,r,s,u,i,o);return n.addTensorArray(c),[c.idTensor,$u(1)]}case"TensorArrayWriteV3":{const r=Lf("tensorArrayId",e,t,n),a=Lf("index",e,t,n),s=Lf("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(a,s),[i.idTensor]}case"TensorArrayReadV3":{const r=Lf("tensorArrayId",e,t,n),a=Lf("index",e,t,n);return[n.getTensorArray(r.id).read(a)]}case"TensorArrayGatherV3":{const r=Lf("tensorArrayId",e,t,n),a=Lf("indices",e,t,n),s=Lf("dtype",e,t,n);return[n.getTensorArray(r.id).gather(a,s)]}case"TensorArrayScatterV3":{const r=Lf("tensorArrayId",e,t,n),a=Lf("indices",e,t,n),s=Lf("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(a,s),[i.idTensor]}case"TensorArrayConcatV3":{const r=Lf("tensorArrayId",e,t,n),a=n.getTensorArray(r.id),s=Lf("dtype",e,t,n);return[a.concat(s)]}case"TensorArraySplitV3":{const r=Lf("tensorArrayId",e,t,n),a=Lf("tensor",e,t,n),s=Lf("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(s,a),[i.idTensor]}case"TensorArraySizeV3":{const r=Lf("tensorArrayId",e,t,n);return[$u(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=Lf("tensorArrayId",e,t,n),a=n.getTensorArray(r.id);return a.clearAndClose(),[a.idTensor]}case"TensorListSetItem":{const r=Lf("tensorListId",e,t,n),a=Lf("index",e,t,n),s=Lf("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(a,s),[i.idTensor]}case"TensorListGetItem":{const r=Lf("tensorListId",e,t,n),a=Lf("index",e,t,n),s=Lf("elementShape",e,t,n),i=Lf("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(a,s,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=Lf("indices",e,t,n),a=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const a=Math.max(...t);if(null!=r&&-1!==r&&a>=r)throw new Error(`Max index must be < array size (${a}  vs. ${r})`);const s=new _m([],n,e.dtype,r),i=mh(e,0);return t.forEach((e,t)=>{s.setItem(e,i[t])}),s}(Lf("tensor",e,t,n),r,Lf("elementShape",e,t,n),Lf("numElements",e,t,n));return n.addTensorList(a),[a.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=Lf("elementShape",e,t,n),a=Lf("elementDType",e,t,n);let s;s="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new _m([],e,t,n)}(r,a,Lf(s,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=Lf("tensorListId",e,t,n),a=Lf("indices",e,t,n),s=Lf("elementShape",e,t,n),i=Lf("elementDType",e,t,n);return[n.getTensorList(r.id).gather(a,i,s)]}case"TensorListStack":{const r=Lf("tensorListId",e,t,n),a=Lf("elementShape",e,t,n),s=Lf("elementDType",e,t,n),i=Lf("numElements",e,t,n);return[n.getTensorList(r.id).stack(a,s,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);Nm(e.shape.slice(1),t,"TensorList shape mismatch: ");const a=mh(e);return new _m(a,t,r)}(Lf("tensor",e,t,n),Lf("elementShape",e,t,n),Lf("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=Lf("tensorListId",e,t,n),a=n.getTensorList(r.id),s=Lf("dtype",e,t,n),i=Lf("elementShape",e,t,n);return[a.concat(s,i)]}case"TensorListPushBack":{const r=Lf("tensorListId",e,t,n),a=Lf("tensor",e,t,n),s=n.getTensorList(r.id);return s.pushBack(a),[s.idTensor]}case"TensorListPopBack":{const r=Lf("tensorListId",e,t,n),a=Lf("elementShape",e,t,n),s=Lf("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(a,s)]}case"TensorListSplit":{const r=Lf("tensor",e,t,n),a=Lf("elementShape",e,t,n),s=function(e,t,n){let r=0;const a=t.map(e=>(r+=e,r));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const s=$m(e.shape.slice(1),n),i=0===r?0:e.size/r,o=tu(()=>{const n=[];e=yl(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:a[r-1],0],u=[1,t[r],i];n[r]=yl(kl(e,o,u),s)}return e.dispose(),n}),u=new _m([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,Lf("lengths",e,t,n),a);return n.addTensorList(s),[s.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return tu(()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=Lf("stride",e,t,n),a=Lf("pad",e,t,n),s=Lf("dataFormat",e,t,n).toUpperCase(),i=Lf("dilation",e,t,n);return[Bl(Lf("x",e,t,n),Lf("filter",e,t,n),r,a,s,i)]}case"Conv2D":{const r=Lf("strides",e,t,n),a=Vf(e,t,n),s=Lf("dataFormat",e,t,n).toUpperCase(),i=Lf("dilations",e,t,n);return[Pl(Lf("x",e,t,n),Lf("filter",e,t,n),[r[1],r[2]],a,s,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Am(e,t,n);return[Mh({x:Lf("x",e,t,n),filter:Lf("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:a,dataFormat:s,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=Am(e,t,n);return[zh({x:Lf("x",e,t,n),filter:Lf("filter",e,t,n),strides:[r[1],r[2]],pad:a,dataFormat:s,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=Lf("outputShape",e,t,n),a=Lf("strides",e,t,n),s=Vf(e,t,n);return[Vl(Lf("x",e,t,n),Lf("filter",e,t,n),r,[a[1],a[2]],s)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=Lf("strides",e,t,n),a=Vf(e,t,n),s=Lf("dilations",e,t,n),i=Lf("dataFormat",e,t,n).toUpperCase();return[Zl(Lf("input",e,t,n),Lf("filter",e,t,n),[r[1],r[2]],a,i,[s[1],s[2]])]}case"Conv3D":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("dataFormat",e,t,n).toUpperCase(),i=Lf("dilations",e,t,n);return[Ul(Lf("x",e,t,n),Lf("filter",e,t,n),[r[1],r[2],r[3]],a,s,[i[1],i[2],i[3]])]}case"AvgPool":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("kernelSize",e,t,n);return[bl(Lf("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPool":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("kernelSize",e,t,n);return[jc(Lf("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a)]}case"MaxPoolWithArgmax":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("kernelSize",e,t,n),i=Lf("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Kc(Lf("x",e,t,n),[s[1],s[2]],[r[1],r[2]],a,i);return[o,u]}case"AvgPool3D":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("kernelSize",e,t,n);return[xl(Lf("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"MaxPool3D":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("kernelSize",e,t,n);return[qc(Lf("x",e,t,n),[s[1],s[2],s[3]],[r[1],r[2],r[3]],a)]}case"Dilation2D":{const r=Lf("strides",e,t,n),a=Lf("pad",e,t,n),s=Lf("dilations",e,t,n),i=r[1],o=r[2],u=s[1],l=s[2];return[Ql(Lf("x",e,t,n),Lf("filter",e,t,n),[i,o],a,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"creation":return tu(()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=Lf("shape",e,t,n),a=Lf("dtype",e,t,n);return[Au(r,Lf("value",e,t,n),a)]}case"LinSpace":return[Ic(Lf("start",e,t,n),Lf("stop",e,t,n),Lf("num",e,t,n))];case"Multinomial":{const r=Lf("logits",e,t,n),a=Lf("numSamples",e,t,n),s=Lf("seed",e,t,n);return[sd(r,a,s)]}case"OneHot":{const r=Lf("indices",e,t,n),a=Lf("depth",e,t,n),s=Lf("onValue",e,t,n),i=Lf("offValue",e,t,n);return[Ji(r,a,s,i)]}case"Ones":return[Zc(Lf("shape",e,t,n),Lf("dtype",e,t,n))];case"OnesLike":return[od(Lf("x",e,t,n))];case"RandomUniform":return[Nd(Lf("shape",e,t,n),Lf("minval",e,t,n),Lf("maxval",e,t,n),Lf("dtype",e,t,n))];case"Range":return[Td(Lf("start",e,t,n),Lf("stop",e,t,n),Lf("step",e,t,n),Lf("dtype",e,t,n))];case"TruncatedNormal":{const r=Lf("shape",e,t,n),a=Lf("mean",e,t,n),s=Lf("stdDev",e,t,n),i=Lf("seed",e,t,n);return[hh(r,a,s,Lf("dtype",e,t,n),i)]}case"Zeros":return[Yc(Lf("shape",e,t,n),Lf("dtype",e,t,n))];case"ZerosLike":return[wu(Lf("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=Rm(e,t,n),l=await Dp.nonMaxSuppressionWithScoreAsync(r,a,s,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Rm(e,t,n),u=Lf("padToMaxOutputSize",e,t,n),l=await Dp.nonMaxSuppressionPaddedAsync(r,a,s,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:a,maxOutputSize:s,iouThreshold:i,scoreThreshold:o}=Rm(e,t,n);return[await Dp.nonMaxSuppressionAsync(r,a,s,i,o)]}case"Where":{const r=Ai(Lf("condition",e,t,n),"bool"),a=[await bh(r)];return r.dispose(),a}case"ListDiff":return Bd(Lf("x",e,t,n),Lf("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return tu(()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=Lf("x",e,t,n),a=Lf("k",e,t,n),s=Lf("sorted",e,t,n),i=dh(r,a,s);return[i.values,i.indices]}case"Unique":{const r=Lf("x",e,t,n),a=ph(r);return[a.values,a.indices]}case"UniqueV2":{const r=Lf("x",e,t,n),a=Lf("axis",e,t,n),s=ph(r,a);return[s.values,s.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"image":return tu(()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=Lf("images",e,t,n),a=Lf("size",e,t,n),s=Lf("alignCorners",e,t,n),i=Lf("halfPixelCenters",e,t,n);return[Dp.resizeBilinear(r,[a[0],a[1]],s,i)]}case"ResizeNearestNeighbor":{const r=Lf("images",e,t,n),a=Lf("size",e,t,n),s=Lf("alignCorners",e,t,n),i=Lf("halfPixelCenters",e,t,n);return[Dp.resizeNearestNeighbor(r,[a[0],a[1]],s,i)]}case"CropAndResize":{const r=Lf("image",e,t,n),a=Lf("boxes",e,t,n),s=Lf("boxInd",e,t,n),i=Lf("cropSize",e,t,n),o=Lf("method",e,t,n),u=Lf("extrapolationValue",e,t,n);return[Dp.cropAndResize(r,a,s,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"graph":return tu(()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=Lf("default",e,t,n);return[zf(e.name,t,n)||r];case"Placeholder":return[zf(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[Uf(Lf("x",e,t,n))];case"IdentityN":return Lf("x",e,t,n).map(e=>Uf(e));case"Shape":return[ih(Lf("x",e,t,n).shape,"int32")];case"ShapeN":return Lf("x",e,t,n).map(e=>ih(e.shape));case"Size":return[$u(Lf("x",e,t,n).size,"int32")];case"Rank":return[$u(Lf("x",e,t,n).rank,"int32")];case"NoOp":return[$u(1)];case"Print":const a=Lf("x",e,t,n),s=Lf("data",e,t,n),i=Lf("message",e,t,n),o=Lf("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<s.length;e++)console.log(Array.prototype.slice.call(s[e].dataSync()).slice(0,o));return[a];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"logical":return tu(()=>((e,t,n)=>{switch(e.op){case"Equal":return[ec(Lf("a",e,t,n),Lf("b",e,t,n))];case"NotEqual":return[id(Lf("a",e,t,n),Lf("b",e,t,n))];case"Greater":return[fc(Lf("a",e,t,n),Lf("b",e,t,n))];case"GreaterEqual":return[mc(Lf("a",e,t,n),Lf("b",e,t,n))];case"Less":return[vc(Lf("a",e,t,n),Lf("b",e,t,n))];case"LessEqual":return[kc(Lf("a",e,t,n),Lf("b",e,t,n))];case"LogicalAnd":return[Vc(Lf("a",e,t,n),Lf("b",e,t,n))];case"LogicalNot":return[Uc(Lf("a",e,t,n))];case"LogicalOr":return[Gc(Lf("a",e,t,n),Lf("b",e,t,n))];case"Select":case"SelectV2":return[tc(Lf("condition",e,t,n),Lf("a",e,t,n),Lf("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"matrices":return tu(()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[Zi(Lf("a",e,t,n),Lf("b",e,t,n),Lf("transposeA",e,t,n),Lf("transposeB",e,t,n))];case"Einsum":return[ac(Lf("equation",e,t,n),...Lf("tensors",e,t,n))];case"Transpose":return[Qi(Lf("x",e,t,n),Lf("perm",e,t,n))];case"_FusedMatMul":const[r,a]=Lf("fusedOps",e,t,n),s="biasadd"===r,i="prelu"===a,o=Lf("numArgs",e,t,n),u=Lf("leakyreluAlpha",e,t,n);if(s){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=Lf("args",e,t,n);return[Ph({a:Lf("a",e,t,n),b:Lf("b",e,t,n),transposeA:Lf("transposeA",e,t,n),transposeB:Lf("transposeB",e,t,n),bias:l,activation:a,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"normalization":return tu(()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[Tl(Lf("x",e,t,n),Lf("mean",e,t,n),Lf("variance",e,t,n),Lf("offset",e,t,n),Lf("scale",e,t,n),Lf("epsilon",e,t,n))];case"LRN":return[Sc(Lf("x",e,t,n),Lf("radius",e,t,n),Lf("bias",e,t,n),Lf("alpha",e,t,n),Lf("beta",e,t,n))];case"Softmax":return[Kd(Lf("x",e,t,n))];case"LogSoftmax":return[Rc(Lf("x",e,t,n))];case"SparseToDense":return[Sh(Lf("sparseIndices",e,t,n),Lf("outputShape",e,t,n),Lf("sparseValues",e,t,n),Lf("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"reduction":return tu(()=>((e,t,n)=>{switch(e.op){case"Max":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[_c(Lf("x",e,t,n),r,a)]}case"Mean":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[Xc(Lf("x",e,t,n),r,a)]}case"Min":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[Qc(Lf("x",e,t,n),r,a)]}case"Sum":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[Ac(Lf("x",e,t,n),r,a)]}case"All":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[Xu(Lf("x",e,t,n),r,a)]}case"Any":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[Yu(Lf("x",e,t,n),r,a)]}case"ArgMax":{const r=Lf("axis",e,t,n);return[Zu(Lf("x",e,t,n),r)]}case"ArgMin":{const r=Lf("axis",e,t,n);return[Ju(Lf("x",e,t,n),r)]}case"Prod":{const r=Lf("axis",e,t,n),a=Lf("keepDims",e,t,n);return[yd(Lf("x",e,t,n),r,a)]}case"Cumsum":{const r=Lf("axis",e,t,n),a=Lf("exclusive",e,t,n),s=Lf("reverse",e,t,n);return[Kl(Lf("x",e,t,n),r,a,s)]}case"Bincount":const r=Lf("x",e,t,n),a=Lf("weights",e,t,n),s=Lf("size",e,t,n);return[_l(r,a,s)];case"DenseBincount":{const r=Lf("x",e,t,n),a=Lf("weights",e,t,n),s=Lf("size",e,t,n),i=Lf("binaryOutput",e,t,n);return[Xl(r,a,s,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"slice_join":return tu(()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=Lf("n",e,t,n),a=Lf("axis",e,t,n);let s=Lf("tensors",e,t,n);return s=s.slice(0,r),[wl(s,a)]}case"Gather":{const r=Lf("x",e,t,n),a=Lf("indices",e,t,n);return[pc(r,Ai(a,"int32"),0)]}case"GatherV2":{const r=Lf("axis",e,t,n),a=Lf("batchDims",e,t,n),s=Lf("x",e,t,n),i=Lf("indices",e,t,n);return[pc(s,Ai(i,"int32"),r,a)]}case"Reverse":{const r=Lf("dims",e,t,n),a=[];for(let e=0;e<r.length;e++)r[e]&&a.push(e);const s=Lf("x",e,t,n);return[Ad(s,a)]}case"ReverseV2":{const r=Lf("axis",e,t,n),a=Lf("x",e,t,n);return[Ad(a,r)]}case"Slice":{const r=Lf("begin",e,t,n),a=Lf("size",e,t,n);return[kl(Lf("x",e,t,n),r,a)]}case"StridedSlice":{const r=Lf("begin",e,t,n),a=Lf("end",e,t,n),s=Lf("strides",e,t,n),i=Lf("beginMask",e,t,n),o=Lf("endMask",e,t,n),u=Lf("ellipsisMask",e,t,n),l=Lf("newAxisMask",e,t,n),c=Lf("shrinkAxisMask",e,t,n),d=Lf("x",e,t,n);return[ah(d,r,a,s,i,o,u,l,c)]}case"Pack":return tu(()=>{const r=Lf("axis",e,t,n),a=Lf("tensors",e,t,n),s=a[0].shape,i=th(a[0]).shape,o=a.map(e=>{const t=pe(e.shape,s);if(!t&&!pe(th(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:yl(e,s)});return[nh(o,r)]});case"Unpack":{const r=Lf("axis",e,t,n),a=Lf("tensor",e,t,n);return mh(a,r)}case"Tile":{const r=Lf("reps",e,t,n);return[cc(Lf("x",e,t,n),r)]}case"Split":case"SplitV":{const r=Lf("axis",e,t,n),a=Lf("numOrSizeSplits",e,t,n),s=Lf("x",e,t,n);return Jd(s,a,r)}case"ScatterNd":{const r=Lf("indices",e,t,n),a=Lf("values",e,t,n),s=Lf("shape",e,t,n);return[Ih(r,a,s)]}case"GatherNd":{const r=Lf("x",e,t,n),a=Lf("indices",e,t,n);return[Nh(r,a)]}case"SparseToDense":{const r=Lf("sparseIndices",e,t,n),a=Lf("outputShape",e,t,n),s=Lf("sparseValues",e,t,n),i=Lf("defaultValue",e,t,n);return[Sh(r,s,a,s.dtype===i.dtype?i:Ai(i,s.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"sparse":return tu(()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:a,emptyRowIndicator:s,reverseIndexMap:i}=Lp.sparseFillEmptyRows(Lf("indices",e,t,n),Lf("values",e,t,n),Lf("denseShape",e,t,n),Lf("defaultValue",e,t,n));return[r,a,s,i]}case"SparseReshape":{const{outputIndices:r,outputShape:a}=Lp.sparseReshape(Lf("inputIndices",e,t,n),Lf("inputShape",e,t,n),Lf("newShape",e,t,n));return[r,a]}case"SparseSegmentMean":return[Lp.sparseSegmentMean(Lf("data",e,t,n),Lf("indices",e,t,n),Lf("segmentIds",e,t,n))];case"SparseSegmentSum":return[Lp.sparseSegmentSum(Lf("data",e,t,n),Lf("indices",e,t,n),Lf("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"spectral":return tu(()=>((e,t,n)=>{switch(e.op){case"FFT":return[Xd(Lf("x",e,t,n))];case"IFFT":return[Yd(Lf("x",e,t,n))];case"RFFT":return[Qd(Lf("x",e,t,n))];case"IRFFT":return[Zd(Lf("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"string":return tu(()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:a}=zp.stringNGrams(Lf("data",e,t,n),Lf("dataSplits",e,t,n),Lf("separator",e,t,n),Lf("nGramWidths",e,t,n),Lf("leftPad",e,t,n),Lf("rightPad",e,t,n),Lf("padWidth",e,t,n),Lf("preserveShortSequences",e,t,n));return[r,a]}case"StringSplit":{const{indices:r,values:a,shape:s}=zp.stringSplit(Lf("input",e,t,n),Lf("delimiter",e,t,n),Lf("skipEmpty",e,t,n));return[r,a,s]}case"StringToHashBucketFast":return[zp.stringToHashBucketFast(Lf("input",e,t,n),Lf("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"transformation":return tu(()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ai(Lf("x",e,t,n),Lf("dtype",e,t,n))];case"ExpandDims":{const r=Lf("axis",e,t,n);return[uc(Lf("x",e,t,n),r)]}case"Squeeze":{const r=Lf("axis",e,t,n);return[th(Lf("x",e,t,n),r)]}case"Reshape":return[yl(Lf("x",e,t,n),Lf("shape",e,t,n))];case"MirrorPad":return[td(Lf("x",e,t,n),Lf("padding",e,t,n),Lf("mode",e,t,n))];case"PadV2":case"Pad":return[ld(Lf("x",e,t,n),Lf("padding",e,t,n),Lf("constantValue",e,t,n))];case"SpaceToBatchND":{const r=Lf("blockShape",e,t,n),a=Lf("paddings",e,t,n);return[fd(Lf("x",e,t,n),r,a)]}case"BatchToSpaceND":{const r=Lf("blockShape",e,t,n),a=Lf("crops",e,t,n);return[Nl(Lf("x",e,t,n),r,a)]}case"DepthToSpace":{const r=Lf("blockSize",e,t,n),a=Lf("dataFormat",e,t,n).toUpperCase();return[Yl(Lf("x",e,t,n),r,a)]}case"BroadcastTo":return[Rl(Lf("x",e,t,n),Lf("shape",e,t,n))];case"BroadcastArgs":return[Al(Lf("s0",e,t,n),Lf("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const a=Lf("keyDType",e,t,n),s=Lf("valueDType",e,t,n),i=new Fm(a,s);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const a=Lf("tableHandle",e,t,n,r),s=Lf("keys",e,t,n),i=Lf("values",e,t,n),o=r.getHashTableById(a.id);return[await o.import(s,i)]}case"LookupTableFind":case"LookupTableFindV2":{const a=Lf("tableHandle",e,t,n,r),s=Lf("keys",e,t,n),i=Lf("defaultValue",e,t,n),o=r.getHashTableById(a.id);return[await o.find(s,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const a=Lf("tableHandle",e,t,n,r);return[r.getHashTableById(a.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const a=Mf(e.op);if(a&&a.customExecutor)return a.customExecutor(new Sm(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return je(a)?a.then(e=>[].concat(e)):[].concat(a)}class Mm{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map(e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function Om(e,t,n,r){const a=new Set,s=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map(e=>Wf(e)[0]);let c=[];null!=r&&(c=r.map(e=>Wf(e.name)[0]));const d=[...t];for(;d.length>0;){const e=d.pop();(Bm(e)||Wm(e)||Vm(e))&&null==i&&(i=e,o=i.children.map(e=>e.name).filter(e=>a.has(e))),a.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach(e=>{u.has(e.name)||(u.add(e.name),d.push(e))}):s.push(e.name))}return{inputs:e,outputs:t,usedNodes:a,missingInputs:s,dynamicNode:i,syncInputs:o}}const Lm=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],zm=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],Pm=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function Bm(e){return Lm.indexOf(e.op)>=0}function Wm(e){return zm.indexOf(e.op)>=0}function Vm(e){return Pm.indexOf(e.op)>=0}class Um{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach(t=>{this._functionExecutorMap[t]=new Um(e.functions[t],this)})}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map(t=>e[t].map(e=>e.id));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get outputs(){return this._outputs.map(e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0}))}get inputNodes(){return this._inputs.map(e=>e.signatureKey||e.name)}get outputNodes(){return this._outputs.map(e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t})}get functions(){return Object.keys(this._functions).reduce((e,t)=>(e[t]=this._functions[t].signature,e),{})}getCompilationKey(e,t){const n=e.map(e=>e.name).sort(),r=t.map(e=>e.name).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=Om(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:a,syncInputs:s}=n;if(null!=a)throw new Error(`This execution contains the node '${a.name}', which has the dynamic op '${a.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${s}]`);if(r.length>0){const n=t.map(e=>e.name),a=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${a}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:a}=n,s=[],i=Object.keys(a).map(e=>Wf(e)[0]).map(t=>e.nodes[t]),o=e.initNodes;i.forEach(e=>{r.has(e.name)&&s.push(e)}),e.weights.forEach(e=>{r.has(e.name)&&s.push(e)}),null!=o&&o.forEach(e=>{r.has(e.name)&&s.push(e)});const u=new Set,l=[];for(;s.length>0;){const e=s.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach(e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every(e=>u.has(e.name))&&s.push(e)})}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map(e=>this.graph.nodes[Wf(e)[0]]),a=t.map(e=>Wf(e)[0]);let s=a.map(e=>this.graph.nodes[e]);0===s.length&&(s=this._outputs);const i=this.getCompilationKey(r,s);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,s),this.compiledMap.set(i,o));const u={},l={};return tu(()=>{const n=new Mm(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,a]=Wf(t),s=[];s[a]=e[t],r[n]=s});const s=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=Dm(t,r,n,this._resourceManager);if(je(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,s,a,i)}}return null==this.parent&&n.dispose(s),t.map(e=>zf(e,r,n))})}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map(t=>e[t]).map(e=>e.map(e=>e.id)));return new Set(t)}checkTensorForDisposal(e,t,n,r,a,s,i){"control"!==t.category&&-1===s.indexOf(e)&&(n[e].forEach(e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)}),t.inputs.forEach(e=>{if("control"!==e.category){const t=function(e,t,n){return t[Bf(e,n.currentContextId)]}(e.name,n,r);null!=t&&t.forEach(e=>{if(e&&!e.kept&&!a.has(e.id)){const t=i[e.id];1===t?(e.dispose(),delete i[e.id]):null!=t&&i[e.id]--}})}}))}async executeAsync(e,t){return this._executeAsync(e,t)}async _executeAsync(e,t,n=!1,r={},a={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));const s=new Mm(this.weightMap,r,a,this.functionExecutorMap),i=await this.executeWithControlFlow(e,s,t,n),o=t.map(e=>zf(e,i,s)),u=o.map(e=>e.id),l=Object.keys(e).map(t=>e[t].id),c=new Set([...u,...l,...this.weightIds]);return Object.keys(i).forEach(e=>{i[e].forEach(e=>{!e||e.kept||e.isDisposed||c.has(e.id)||e.dispose()})}),null==this.parent&&s.dispose(c),o}async executeFunctionAsync(e,t,n){const r=e.reduce((e,t,n)=>(e[this.inputs[n].name]=t,e),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const a=Object.keys(e),s=a.map(e=>this.graph.nodes[Wf(e)[0]]),i=n.map(e=>Wf(e)[0]);let o=i.map(e=>this.graph.nodes[e]);0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:d}=Om(e,o,this.weightMap,this._initNodes),h=[...s,...this.graph.weights,...this._initNodes||[]].map(e=>({node:e,contexts:t.currentContext})),p=Object.assign({},this.weightMap);Object.keys(e).forEach(t=>{const[n,r]=Wf(t),a=[];a[r]=e[t],p[n]=a});const f={},m=this.getFrozenTensorIds(p),g={};for(;h.length>0;){const e=this.processStack(s,h,t,p,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter(e=>!Bm(e)&&!zf(e.name,p,t)).map(e=>e.name);if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${d}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${a}]. Consider providing the following inputs: [${l}]. ${e}`)}return p}processStack(e,t,n,r,a,s,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&Lf("isConstant",e.node,r,n)&&([c]=Pf(e.node.name,n)),null==r[e.node.name]){const d=Dm(e.node,r,n,this._resourceManager);c||([c]=Pf(e.node.name,n));const h=n.currentContext;je(d)?l.push(d.then(l=>(r[c]=l,n.currentContext=h,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u),l))):(r[c]=d,this.checkTensorForDisposal(c,e.node,r,n,s,i,o),this.processChildNodes(e.node,t,n,r,a,u))}else this.processChildNodes(e.node,t,n,r,a,u)}return l}processChildNodes(e,t,n,r,a,s){e.children.forEach(e=>{const[i]=Pf(e.name,n);!a[i]&&s.has(e.name)&&("Merge"===e.op?e.inputNames.some(e=>!!zf(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every(e=>!!zf(e,r,n))&&(a[i]=!0,t.push({contexts:n.currentContext,node:e})))})}dispose(){Object.keys(this.weightMap).forEach(e=>this.weightMap[e].forEach(e=>e.dispose()))}checkInputShapeAndType(e){Object.keys(e).forEach(t=>{const n=e[t],[r]=Wf(t),a=this.graph.nodes[r];if(a.attrParams.shape&&a.attrParams.shape.value){const e=a.attrParams.shape.value;oe(e.length===n.shape.length&&n.shape.every((t,n)=>-1===e[n]||e[n]===t),()=>`The shape of dict['${a.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`)}a.attrParams.dtype&&a.attrParams.dtype.value&&oe(n.dtype===a.attrParams.dtype.value,()=>`The dtype of dict['${a.name}'] provided in model.execute(dict) must be ${a.attrParams.dtype.value}, but was ${n.dtype}`)})}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter(e=>{const[t]=Wf(e);return null==this.graph.nodes[t]});if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map(e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e,{})}checkOutputs(e){e.forEach(e=>{const[t]=Wf(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)})}}class Gm{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}const Hm="?tfjs-format=file",jm="model.json";class qm{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new Gm}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=ji(e,this.loadOptions);else{const t=Js(e,this.loadOptions);if(0===t.length)t.push(ji(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=zs(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new Um(lm.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=lm.Instance.transformGraph(e.modelInitializer);this.initializer=new Um(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=Zs(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Ja||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce((t,n,r)=>(t[n]=e[r],t),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce((t,n)=>(t[n]=[e[n]],t),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Km(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}${jm}${Hm}`);const n=new qm(e,t);return await n.load(),n}const Xm="3.11.0";function Ym(e,t,n,r){return new(n||(n=Promise))(function(a,s){function i(e){try{u(r.next(e))}catch(e){s(e)}}function o(e){try{u(r.throw(e))}catch(e){s(e)}}function u(e){var t;e.done?a(e.value):(t=e.value,t instanceof n?t:new n(function(e){e(t)})).then(i,o)}u((r=r.apply(e,t||[])).next())})}function Zm(e,t){var n,r,a,s,i={label:0,sent:function(){if(1&a[0])throw a[1];return a[1]},trys:[],ops:[]};return s={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(s[Symbol.iterator]=function(){return this}),s;function o(s){return function(o){return function(s){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(a=2&s[0]?r.return:s[0]?r.throw||((a=r.return)&&a.call(r),0):r.next)&&!(a=a.call(r,s[1])).done)return a;switch(r=0,a&&(s=[2&s[0],a.value]),s[0]){case 0:case 1:a=s;break;case 4:return i.label++,{value:s[1],done:!1};case 5:i.label++,r=s[1],s=[0];continue;case 7:s=i.ops.pop(),i.trys.pop();continue;default:if(!(a=(a=i.trys).length>0&&a[a.length-1])&&(6===s[0]||2===s[0])){i=0;continue}if(3===s[0]&&(!a||s[1]>a[0]&&s[1]<a[3])){i.label=s[1];break}if(6===s[0]&&i.label<a[1]){i.label=a[1],a=s;break}if(a&&i.label<a[2]){i.label=a[2],i.ops.push(s);break}a[2]&&i.ops.pop(),i.trys.pop();continue}s=t.call(e,i)}catch(e){s=[6,e],r=0}finally{n=a=0}if(5&s[0])throw s[1];return{value:s[0]?s[1]:void 0,done:!0}}([s,o])}}}var Jm=function(e){return{startEndTensor:e,startPoint:kl(e,[0,0],[-1,2]),endPoint:kl(e,[0,2],[-1,2])}},Qm={strides:[8,16],anchors:[2,6]};function eg(e,t){var n,r,a;if(e.topLeft instanceof Ja&&e.bottomRight instanceof Ja){var s=tu(function(){return[wl([kl(Du(t-1,e.topLeft),0,1),kl(e.topLeft,1,1)]),wl([Du(t-1,kl(e.bottomRight,0,1)),kl(e.bottomRight,1,1)])]});n=s[0],r=s[1],null!=e.landmarks&&(a=tu(function(){var n=Du(ih([t-1,0]),e.landmarks),r=ih([1,-1]);return yu(n,r)}))}else{var i=e.topLeft,o=i[0],u=i[1],l=e.bottomRight,c=l[0],d=l[1];n=[t-1-o,u],r=[t-1-c,d],null!=e.landmarks&&(a=e.landmarks.map(function(e){return[t-1-e[0],e[1]]}))}var h={topLeft:n,bottomRight:r};return null!=a&&(h.landmarks=a),null!=e.probability&&(h.probability=e.probability instanceof Ja?e.probability.clone():e.probability),h}function tg(e,t){return tu(function(){var n;return n=e.hasOwnProperty("box")?e.box:e,th(function(e,t){var n=yu(e.startPoint,t),r=yu(e.endPoint,t),a=Ol([n,r],1);return Jm(a)}(n,t).startEndTensor)})}var ng=function(){function e(e,t,n,r,a,s){this.blazeFaceModel=e,this.width=t,this.height=n,this.maxFaces=r,this.anchorsData=function(e,t,n){for(var r=[],a=0;a<n.strides.length;a++)for(var s=n.strides[a],i=Math.floor((t+s-1)/s),o=Math.floor((e+s-1)/s),u=n.anchors[a],l=0;l<i;l++)for(var c=s*(l+.5),d=0;d<o;d++)for(var h=s*(d+.5),p=0;p<u;p++)r.push([h,c]);return r}(t,n,Qm),this.anchors=oh(this.anchorsData),this.inputSizeData=[t,n],this.inputSize=ih([t,n]),this.iouThreshold=a,this.scoreThreshold=s}return e.prototype.getBoundingBoxes=function(e,t,n){return void 0===n&&(n=!0),Ym(this,void 0,void 0,function(){var r,a,s,i,o,u,l,c,d,h,p,f,m,g,y=this;return Zm(this,function(b){switch(b.label){case 0:return r=tu(function(){var t=Dp.resizeBilinear(e,[y.width,y.height]),n=yu(Du(gu(t,255),.5),2),r=y.blazeFaceModel.predict(n),a=th(r),s=function(e,t,n){var r=kl(e,[0,1],[-1,2]),a=fu(r,t),s=kl(e,[0,3],[-1,2]),i=gu(s,n),o=gu(a,n),u=gu(i,2),l=Du(o,u),c=fu(o,u),d=yu(l,n),h=yu(c,n);return Ol([d,h],1)}(a,y.anchors,y.inputSize),i=kl(a,[0,0],[-1,1]);return[a,s,th(vl(i))]}),a=r[0],s=r[1],i=r[2],o=console.warn,console.warn=function(){},u=Dp.nonMaxSuppression(s,i,this.maxFaces,this.iouThreshold,this.scoreThreshold),console.warn=o,[4,u.array()];case 1:return l=b.sent(),u.dispose(),c=l.map(function(e){return kl(s,[e,0],[1,-1])}),t?[3,3]:[4,Promise.all(c.map(function(e){return Ym(y,void 0,void 0,function(){var t;return Zm(this,function(n){switch(n.label){case 0:return[4,e.array()];case 1:return t=n.sent(),e.dispose(),[2,t]}})})}))];case 2:c=b.sent(),b.label=3;case 3:for(d=e.shape[1],h=e.shape[2],p=t?gu([h,d],this.inputSize):[h/this.inputSizeData[0],d/this.inputSizeData[1]],f=[],m=function(e){var r=c[e],s=tu(function(){var s=Jm(r instanceof Ja?r:oh(r));if(!n)return s;var o,u=l[e];return o=t?kl(y.anchors,[u,0],[1,2]):y.anchorsData[u],{box:s,landmarks:yl(th(kl(a,[u,5],[1,-1])),[6,-1]),probability:kl(i,[u],[1]),anchor:o}});f.push(s)},g=0;g<c.length;g++)m(g);return s.dispose(),i.dispose(),a.dispose(),[2,{boxes:f,scaleFactor:p}]}})})},e.prototype.estimateFaces=function(e,t,n,r){return void 0===t&&(t=!1),void 0===n&&(n=!1),void 0===r&&(r=!0),Ym(this,void 0,void 0,function(){var a,s,i,o,u,l,c=this;return Zm(this,function(d){switch(d.label){case 0:return a=function(e){return e instanceof Ja?[e.shape[0],e.shape[1]]:[e.height,e.width]}(e),s=a[1],i=tu(function(){return e instanceof Ja||(e=io(e)),uc(Ai(e,"float32"),0)}),[4,this.getBoundingBoxes(i,t,r)];case 1:return o=d.sent(),u=o.boxes,l=o.scaleFactor,i.dispose(),t?[2,u.map(function(e){var t=tg(e,l),a={topLeft:kl(t,[0],[2]),bottomRight:kl(t,[2],[2])};if(r){var i=e,o=i.landmarks,u=i.probability,c=i.anchor,d=yu(fu(o,c),l);a.landmarks=d,a.probability=u}return n&&(a=eg(a,s)),a})]:[2,Promise.all(u.map(function(e){return Ym(c,void 0,void 0,function(){var t,a,i,o,u,c,d,h,p,f,m,g=this;return Zm(this,function(y){switch(y.label){case 0:return t=tg(e,l),r?[3,2]:[4,t.array()];case 1:return u=y.sent(),a={topLeft:u.slice(0,2),bottomRight:u.slice(2)},[3,4];case 2:return[4,Promise.all([e.landmarks,t,e.probability].map(function(e){return Ym(g,void 0,void 0,function(){return Zm(this,function(t){return[2,e.array()]})})}))];case 3:i=y.sent(),o=i[0],u=i[1],c=i[2],d=e.anchor,p=(h=l)[0],f=h[1],m=o.map(function(e){return[(e[0]+d[0])*p,(e[1]+d[1])*f]}),a={topLeft:u.slice(0,2),bottomRight:u.slice(2),landmarks:m,probability:c},function(e){e.startEndTensor.dispose(),e.startPoint.dispose(),e.endPoint.dispose()}(e.box),e.landmarks.dispose(),e.probability.dispose(),y.label=4;case 4:return t.dispose(),n&&(a=eg(a,s)),[2,a]}})})}))]}})})},e}();const rg={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,rh(Ai(n,"float32"),-1))}}},ag={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=xu(Ai(n,"float32")),r=bu(Du($u(1),t));return Cc(gu(e,r))}}}},sg={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bu(Du(xu(Ai(n,"float32")),1));return gu(e,t)}}}},ig={kernelName:it,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{let t=e;const r=zu(n.shape,a);return r.length>0&&(t=Ac(t,r)),yl(t,n.shape)},b:()=>{let t=e;const n=zu(r.shape,a);return n.length>0&&(t=Ac(t,n)),yl(t,r.shape)}}}},og={kernelName:ot,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach((t,r)=>{n[r]=()=>e.clone()}),n}},ug={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(n)}}},lg={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wu(n)}}},cg={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,bu(Du($u(1),xu(Ai(n,"float32")))))}}},dg={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=bu(fu($u(1),xu(Ai(n,"float32"))));return gu(e,t)}}}},hg={kernelName:gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{const t=fu(xu(n),xu(r));let s=yu(e,gu(r,t));const i=zu(n.shape,a);return i.length>0&&(s=Ac(s,i)),yl(s,n.shape)},b:()=>{const t=fu(xu(n),xu(r));let s=Cc(yu(e,gu(n,t)));const i=zu(r.shape,a);return i.length>0&&(s=Ac(s,i)),yl(s,r.shape)}}}},pg={kernelName:ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,fu(xu(Ai(n,"float32")),1))}}},fg={kernelName:mt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,Du($u(1),xu(Ai(n,"float32"))))}}},mg=As({avgPool3dGrad_:function(e,t,n,r,a,s){const i=$s(e,"dy","avgPool3dGrad"),o=$s(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=yl(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=yl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),oe(5===u.rank,()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`),oe(5===l.rank,()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`),null!=s&&oe(fe(a),()=>`Error in avgPool3dGrad: pad must be an integer when using, dimRoundingMode ${s} but got pad ${a}.`);const d={dy:u,input:l},h={filterSize:n,strides:r,pad:a,dimRoundingMode:s},p=bs.runKernel(wt,d,h);return c?yl(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),gg={kernelName:xt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i,dimRoundingMode:o}=n;return{x:()=>mg(e,r,a,s,i,o)}}},yg=As({avgPoolGrad_:function(e,t,n,r,a){const s=$s(e,"dy","avgPoolGrad"),i=$s(t,"input","avgPoolGrad");oe(i.rank===s.rank,()=>`Rank of input (${i.rank}) does not match rank of dy (${s.rank})`);let o=i,u=s,l=!1;3===i.rank&&(l=!0,o=yl(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=yl(s,[1,s.shape[0],s.shape[1],s.shape[2]])),oe(4===u.rank,()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`),oe(4===o.rank,()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`);const c={dy:u,input:o},d={filterSize:n,strides:r,pad:a},h=bs.runKernel(bt,c,d);return l?yl(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),bg={kernelName:yt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:a,strides:s,pad:i}=n;return{x:()=>yg(e,r,a,s,i)}}},xg={kernelName:vt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,a]=t,{transposeA:s,transposeB:i}=n;return s||i?!s&&i?{a:()=>Zi(e,a,!1,!1),b:()=>Zi(e,r,!0,!1)}:s&&!i?{a:()=>Zi(a,e,!1,!0),b:()=>Zi(r,e,!1,!1)}:{a:()=>Zi(a,e,!0,!0),b:()=>Zi(e,r,!0,!0)}:{a:()=>Zi(e,a,!1,!0),b:()=>Zi(r,e,!0,!1)}}},wg={kernelName:kt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:a}=n;return{x:()=>fd(e,r,a)}}},vg={kernelName:St,gradFunc:(e,t,n)=>{const r=n,a=r.inputShape,s=r.shape,i=Array.from(s);for(let e=a.length-1;e>=0;e--)if(a[e]===s[e])i[e]=1;else if(1!==a[e])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${s}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Ac(e,o,!0)}}},kg={kernelName:Tt,gradFunc:e=>({x:()=>e.clone()})},Ig={kernelName:Ct,gradFunc:e=>({x:()=>wu(e)})},Sg={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:a,clipValueMax:s}=n;return{x:()=>tc(Vc(mc(r,a),kc(r,s)),e,wu(e))}}},Ng={kernelName:_t,inputsToSave:["x"],gradFunc:rg.gradFunc},Tg={kernelName:At,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map(e=>e.shape),{axis:a}=n,s=ve(a,t[0].shape)[0],i=r.map(e=>e[s]);return Jd(e,i,s).map(e=>()=>e)}},Cg={kernelName:Rt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{dilations:s,strides:i,pad:o,dataFormat:u}=n;return oe(fl(s),()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`),{x:()=>Wl(r.shape,e,a,i,o,u),filter:()=>_h(r,e,a.shape,i,o,u)}}},$g={kernelName:Dt,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,{strides:s,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>Pl(e,a,s,i,o,1,u),filter:()=>_h(e,r,a.shape,s,i,o,u)}}},Eg=As({conv3DBackpropFilter_:function(e,t,n,r,a){let s=e;4===e.rank&&(s=yl(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=yl(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),oe(5===s.rank,()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${s.shape}.`),oe(5===i.rank,()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`),oe(5===n.length,()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`),oe(s.shape[4]===n[3],()=>`Error in conv3dDerFilter: depth of input ${s.shape[4]}) must match input depth in filter (${n[3]}.`),oe(i.shape[4]===n[4],()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`);const o={x:s,dy:i},u={strides:r,pad:a,filterShape:n};return bs.runKernel(Ot,o,u)}}),_g={kernelName:Mt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s}=n;oe(fl(r),()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`);const[i,o]=t;return{x:()=>Gl(i.shape,e,o,a,s),filter:()=>Eg(i,e,o.shape,a,s)}}},Ag={kernelName:zt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(Cc(Vd(Ai(n,"float32"))),e)}}},Rg={kernelName:Pt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(Ud(Ai(n,"float32")),e)}}},Fg={kernelName:Bt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a,exclusive:s,reverse:i}=n;return{x:()=>{const t=zc([a],r.rank);let n=Kl(e,a,s,!i);return null!=t&&(n=Qi(n,t)),n}}}},Dg={kernelName:Gt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:a,pad:s,dimRoundingMode:i}=n,o=null==r?[1,1]:r;oe(fl(o),()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`);const[u,l]=t;return oe(4===u.rank,()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`),oe(4===l.rank,()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`),oe(u.shape[3]===l.shape[2],()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`),oe(ml(a,o),()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${a} and dilations '${o}'.`),null!=i&&oe(fe(s),()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`),{x:()=>Lh(u.shape,e,l,a,s,o,i),filter:()=>Oh(u,e,l.shape,a,s,o,i)}}},Mg={kernelName:Kt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,a]=t,s={x:r,filter:a,dy:e},i={x:r,filter:a,dy:e};return{x:()=>bs.runKernel(Xt,s,n),filter:()=>bs.runKernel(Yt,i,n)}}},Og={kernelName:Qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>bs.runKernel(en,r)}}},Lg={kernelName:tn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yu(oc(Cc(xu(n))),2/Math.sqrt(Math.PI));return{x:()=>yu(e,r)}}},zg={kernelName:rn,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,n)}}},Pg={kernelName:an,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>yl(e,n.shape)}}},Bg={kernelName:sn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,oc(n))}}},Wg={kernelName:cn,gradFunc:e=>({x:()=>wu(e)})},Vg={kernelName:dn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{const t=gu(e,Ai(r,"float32")),s=zu(n.shape,a);return s.length>0?yl(Ac(t,s),n.shape):t},b:()=>{let t=yu(e,Ai(n,"float32"));const s=zu(r.shape,a);s.length>0&&(t=yl(Ac(t,s),r.shape));const i=xu(r);return Cc(gu(t,Ai(i,"float32")))}}}},Ug={kernelName:hn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[a,s,i,o]=t,u=null==o?$u(1):o,l=zu(s.shape,a.shape),c=[];if(1===s.rank){for(let e=0;e<a.shape.length-1;++e)c.push(a.shape[e]);c.push(1)}const d=Du(a,s),h=yu(e,u),p=Ld(fu(i,$u(r))),f=yu(yu(yu(p,p),p),$u(-.5));return{x:()=>1===s.rank?yl(yu(yu(e,cc(yl(p,[1,1,1,s.shape[0]]),c)),u),a.shape):yl(yu(yu(e,p),u),a.shape),mean:()=>{let e=yu(yu(p,$u(-1)),h);return 1===s.rank&&(e=Ac(e,l)),yl(e,s.shape)},variance:()=>{let e=yu(yu(f,d),h);return 1===s.rank&&(e=Ac(e,l)),yl(e,s.shape)},scale:()=>{const t=yu(d,p);let n=yu(e,t);return 1===s.rank&&(n=Ac(n,l)),yl(n,s.shape)},offset:()=>{let t=e;return 1===s.rank&&(t=Ac(t,l)),yl(t,s.shape)}}}},Gg={kernelName:pn,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,a]=t,{axis:s}=n,i=ve(s,r.shape)[0];return{x:()=>{const t=r.shape,n=a.size,o=t.slice(0,i),u=o.length,l=t.slice(s,t.length).slice(1),c=l.length,d=Hg(0,u),h=Hg(u+1,u+1+c),p=jg([o,[n],l]),f=yl(e,p),m=yl(a,[n]),g=jg([[u],d,h]),y=Qi(f,g);let b=fh(y,m,r.shape[i]);const x=Pc(g);return b=Qi(b,x),b},indices:()=>a}}};function Hg(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function jg(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const qg={kernelName:gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>wu(n),b:()=>wu(r)}}},Kg={kernelName:yn,gradFunc:e=>({x:()=>Ai(e,"float32")})},Xg={kernelName:wn,gradFunc:e=>({x:()=>wu(e)})},Yg={kernelName:vn,gradFunc:e=>({x:()=>wu(e)})},Zg={kernelName:kn,gradFunc:e=>({x:()=>wu(e)})},Jg={kernelName:In,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:a}=n,s=fc(r,0);return{x:()=>tc(s,e,yu(e,a))}}},Qg={kernelName:$n,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,fu(n,1))}}},ey={kernelName:Cn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,Ai(n,"float32"))}}},ty={kernelName:Rn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n;return{logits:()=>{const t=oc(r);return Du(e,yu(Ac(e,a,!0),t))}}}},ny=As({localResponseNormalizationBackprop_:function(e,t,n,r=5,a=1,s=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:a,alpha:s,beta:i};return bs.runKernel(Dn,o,u)}}),ry={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{depthRadius:s,bias:i,alpha:o,beta:u}=n;return{x:()=>ny(r,a,e,s,i,o,u)}}};function ay(e,t,n,r){return t.rank<n.rank&&(t=yl(t,Oc(t.shape,r))),e.rank<n.rank&&(e=yl(e,Oc(e.shape,r))),{x:()=>yu(e,Ai(ec(n,t),e.dtype))}}const sy={kernelName:Mn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:a}=r,s=t[0],i=ay(e,t[1],s,ve(a,s.shape));return{x:()=>i.x()}}},iy={kernelName:On,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>yu(e,Ai(mc(n,r),"float32")),b:()=>yu(e,Ai(vc(n,r),"float32"))}}},oy=As({maxPool3dGrad_:function(e,t,n,r,a,s,i){const o=$s(e,"dy","maxPool3dGrad"),u=$s(t,"input","maxPool3dGrad"),l=$s(n,"output","maxPool3dGrad");let c=o,d=u,h=l,p=!1;4===u.rank&&(p=!0,c=yl(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),d=yl(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),h=yl(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),oe(5===c.rank,()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`),oe(5===d.rank,()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${d.rank}.`),oe(5===h.rank,()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${h.rank}.`),null!=i&&oe(fe(s),()=>`Error in maxPool3dGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const f={dy:c,input:d,output:h},m={filterSize:r,strides:a,pad:s,dimRoundingMode:i},g=bs.runKernel(Bn,f,m);return p?yl(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),uy={kernelName:Pn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>oy(e,r,a,s,i,o,u)}}},ly=As({maxPoolGrad_:function(e,t,n,r,a,s,i){const o=$s(e,"dy","maxPoolGrad"),u=$s(t,"input","maxPoolGrad"),l=$s(n,"output","maxPoolGrad");oe(u.rank===o.rank,()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`),oe(4===o.rank,()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`),oe(4===u.rank,()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`),null!=i&&oe(fe(s),()=>`Error in maxPoolGrad: pad must be an integer when using, dimRoundingMode ${i} but got pad ${s}.`);const c={dy:o,input:u,output:l},d={filterSize:r,strides:a,pad:s,dimRoundingMode:i};return bs.runKernel(zn,c,d)}}),cy={kernelName:Ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,a]=t,{filterSize:s,strides:i,pad:o}=n;return{x:()=>ly(e,r,a,s,i,o)}}},dy={kernelName:Hn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>kl(e,s,r.shape)}}},hy={kernelName:rr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:a}=n,s=a.map(e=>e[0]);return{x:()=>kl(e,s,r.shape)}}},py={kernelName:sr,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,a]=t,s=n,i=r,o=Pu(s.shape,i.shape);return{a:()=>{const t=Ai(i,"float32");let n=yu(e,yu(t,Fu(s,Du(t,$u(1)))));const r=zu(s.shape,o);return r.length>0&&(n=Ac(n,r)),yl(n,s.shape)},b:()=>{const t=fc(s,0),n=tc(t,Nc(s),wu(s));let r=yu(e,yu(a,n));const u=zu(i.shape,o);return u.length>0&&(r=Ac(r,u)),yl(r,i.shape)}}}},fy={kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fc(n,$u(0)),r=$u(Jp),a=$u(Qp),s=yu(e,a),i=yu(yu(e,r),oc(Ai(n,"float32")));return tc(t,s,i)}}}},my={kernelName:Rr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:a}=n;return{x:()=>Nl(e,r,a)}}},gy={kernelName:Fr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>wl(e,r)}}},yy=[rg,ag,sg,ig,og,ug,lg,cg,dg,hg,pg,fg,gg,bg,xg,wg,vg,kg,Ig,Sg,Ng,Tg,$g,Cg,_g,Ag,Rg,Fg,Dg,Mg,{kernelName:Zt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{const t=gu(e,Ai(r,"float32")),s=zu(n.shape,a);return s.length>0?yl(Ac(t,s),n.shape):t},b:()=>{let t=yu(e,Ai(n,"float32"));const s=zu(r.shape,a);s.length>0&&(t=yl(Ac(t,s),r.shape));const i=xu(r);return Cc(gu(t,Ai(i,"float32")))}}}},Og,Lg,zg,Pg,Bg,Vg,Wg,Ug,Gg,qg,Kg,Xg,Yg,Zg,Jg,Qg,ey,ty,ry,sy,sy,iy,uy,cy,{kernelName:Vn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:a}=n,s=ve(a,r.shape),i=de(Mc(r.shape,s)[1]);return{x:()=>{const t=r.shape.slice();s.forEach(e=>{t[e]=1});const n=yl(e,t);return gu(yu(n,Zc(r.shape,"float32")),i)}}}},{kernelName:Un,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:a}=r,[s,i]=t,o=ay(e,i,s,ve(a,s.shape));return{x:()=>o.x()}}},{kernelName:Gn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>yu(e,Ai(kc(n,r),"float32")),b:()=>yu(e,Ai(fc(n,r),"float32"))}}},dy,{kernelName:jn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{const t=zu(n.shape,a);return t.length>0?yl(Ac(e,t),n.shape):e},b:()=>{const t=yu(e,Cc(hc(gu(n,r)))),s=zu(r.shape,a);return s.length>0?yl(Ac(t,s),r.shape):t}}}},{kernelName:Kn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{const t=yu(e,Ai(r,"float32")),s=zu(n.shape,a);return s.length>0?yl(Ac(t,s),n.shape):t},b:()=>{const t=yu(e,Ai(n,"float32")),s=zu(r.shape,a);return s.length>0?yl(Ac(t,s),r.shape):t}}}},{kernelName:Xn,gradFunc:e=>({x:()=>Cc(e)})},{kernelName:tr,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Yc(n.shape,"float32")}}},{kernelName:er,gradFunc:e=>({x:()=>wu(e)})},{kernelName:nr,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return mh(e,r).map(e=>()=>e)}},hy,hy,py,{kernelName:ir,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,a=fc(n,0);return{x:()=>tc(a,e,yu(e,r)),alpha:()=>{let t=tc(a,wu(e),yu(e,n));const s=zu(r.shape,e.shape);return s.length>0&&(t=Ac(t,s)),yl(t,r.shape)}}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,Cc(xu(n)))}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=yu(kc(n,6),rh(n));return{x:()=>yu(e,Ai(r,"float32"))}}},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,Ai(rh(n),"float32"))}}},{kernelName:hr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yl(e,n.shape)}}},{kernelName:mr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>bs.runKernel(gr,a,n)}}},{kernelName:pr,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,a={dy:e,images:r};return{images:()=>bs.runKernel(fr,a,n)}}},{kernelName:br,gradFunc:(e,t,n)=>{const{dims:r}=n,a=ve(r,e.shape);return{x:()=>Ad(e,a)}}},{kernelName:xr,gradFunc:e=>({x:()=>wu(e)})},{kernelName:wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>Cc(gu(e,yu(Fu(n,1.5),2)))}}},{kernelName:kr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ai(wu(n),"float32"),t:()=>yu(e,Ai(n,e.dtype)),e:()=>yu(e,Ai(Uc(n),e.dtype))}}},fy,{kernelName:$r,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,yu(n,Du($u(1),n)))}}},{kernelName:Cr,gradFunc:e=>({x:()=>wu(e)})},{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(jl(Ai(n,"float32")),e)}}},{kernelName:Tr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(ql(Ai(n,"float32")),e)}}},{kernelName:Sr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:a,size:s}=n,i=r.shape,[o,u]=$o(r,a,s),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>ld(e,l)}}},{kernelName:Dr,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:a}=n,s=yu(e,r);return{logits:()=>Du(s,yu(Ac(s,[a],!0),r))}}},{kernelName:Er,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,vl(n))}}},my,my,gy,gy,{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,yu(bu(Ai(n,"float32")),2))}}},{kernelName:Br,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=$u(2);return{a:()=>yu(e,yu(a,Du(n,r))),b:()=>yu(e,yu(a,Du(r,n)))}}},{kernelName:Wr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(e,yu(Ai(n,"float32"),2))}}},{kernelName:ra,gradFunc:e=>({x:()=>wu(e)})},{kernelName:jr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,a=Pu(n.shape,r.shape);return{a:()=>{let t=e;const r=zu(n.shape,a);return r.length>0&&(t=Ac(t,r)),yl(t,n.shape)},b:()=>{let t=e;const n=zu(r.shape,a);return n.length>0&&(t=Ac(t,n)),yl(Cc(t),r.shape)}}}},{kernelName:Ar,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,a=r.shape.slice(),{axis:s}=n;ve(s,r.shape).forEach(e=>{a[e]=1});const i=yl(e,a),o=yu(i,Zc(r.shape,"float32"));return{x:()=>o}}},{kernelName:qr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>gu(e,xu(jl(n)))}}},{kernelName:Kr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>yu(Du($u(1),xu(n)),e)}}},{kernelName:Xr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:a}=n;return{x:()=>{let t=wu(r);if(1===r.rank)for(let n=0;n<a[0];++n)t=fu(t,kl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)t=fu(t,kl(e,[n*r.shape[0],s*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)t=fu(t,kl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<a[0];++n)for(let s=0;s<a[1];++s)for(let i=0;i<a[2];++i)for(let o=0;o<a[3];++o)t=fu(t,kl(e,[n*r.shape[0],s*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:Jr,gradFunc:(e,t,n)=>{const r=n,{perm:a}=r,s=Pc(a);return{x:()=>Qi(e,s)}}},{kernelName:ea,gradFunc:(e,t,n)=>{const r=n,{axis:a}=r;return{value:()=>nh(e,a)}}},{kernelName:ta,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Bu(t,wu(t)),r=pc(e,n);let a=mc(t,$u(0,"int32"));const s=r.rank-a.rank;for(let e=0;e<s;++e)a=uc(a,e+1);a=Vc(a,Zc(r.shape,"bool"));const i=wu(r);return tc(a,r,i)}(e,n)}}},{kernelName:na,gradFunc:e=>({x:()=>wu(e)})}];for(const e of yy)ma(e);let by;function xy(){return null==by&&(by=hu().epsilon()),by}Qa().prototype.abs=function(){return this.throwIfDisposed(),Ou(this)},Qa().prototype.acos=function(){return this.throwIfDisposed(),ju(this)},Qa().prototype.acosh=function(){return this.throwIfDisposed(),qu(this)},Qa().prototype.add=function(e){return this.throwIfDisposed(),fu(this,e)},Qa().prototype.all=function(e,t){return this.throwIfDisposed(),Xu(this,e,t)},Qa().prototype.any=function(e,t){return this.throwIfDisposed(),Yu(this,e,t)},Qa().prototype.argMax=function(e){return this.throwIfDisposed(),Zu(this,e)},Qa().prototype.argMin=function(e){return this.throwIfDisposed(),Ju(this,e)},Qa().prototype.asScalar=function(){return this.throwIfDisposed(),oe(1===this.size,()=>"The array must have only 1 element."),yl(this,[])},Qa().prototype.asType=function(e){return this.throwIfDisposed(),Ai(this,e)},Qa().prototype.as1D=function(){return this.throwIfDisposed(),yl(this,[this.size])},Qa().prototype.as2D=function(e,t){return this.throwIfDisposed(),yl(this,[e,t])},Qa().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),yl(this,[e,t,n])},Qa().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),yl(this,[e,t,n,r])},Qa().prototype.as5D=function(e,t,n,r,a){return this.throwIfDisposed(),yl(this,[e,t,n,r,a])},Qa().prototype.asin=function(){return this.throwIfDisposed(),Qu(this)},Qa().prototype.asinh=function(){return this.throwIfDisposed(),el(this)},Qa().prototype.atan=function(){return this.throwIfDisposed(),tl(this)},Qa().prototype.atan2=function(e){return this.throwIfDisposed(),nl(this,e)},Qa().prototype.atanh=function(){return this.throwIfDisposed(),rl(this)},Qa().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),bl(this,e,t,n,r)},Qa().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),Nl(this,e,t)},Qa().prototype.batchNorm=function(e,t,n,r,a){return this.throwIfDisposed(),Tl(this,e,t,n,r,a)},Qa().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Rl(this,e)},Qa().prototype.cast=function(e){return this.throwIfDisposed(),Ai(this,e)},Qa().prototype.ceil=function(){return this.throwIfDisposed(),Fl(this)},Qa().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Dl(this,e,t)},Qa().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Ja&&(e=[e]),wl([this,...e],t)},Qa().prototype.conv1d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Bl(this,e,t,n,r,a,s)},Qa().prototype.conv2dTranspose=function(e,t,n,r,a){return this.throwIfDisposed(),Vl(this,e,t,n,r,a)},Qa().prototype.conv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Pl(this,e,t,n,r,a,s)},Qa().prototype.cos=function(){return this.throwIfDisposed(),jl(this)},Qa().prototype.cosh=function(){return this.throwIfDisposed(),ql(this)},Qa().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Kl(this,e,t,n)},Qa().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Yl(this,e,t)},Qa().prototype.depthwiseConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Zl(this,e,t,n,r,a,s)},Qa().prototype.dilation2d=function(e,t,n,r,a){return this.throwIfDisposed(),Ql(this,e,t,n,r,a)},Qa().prototype.divNoNan=function(e){return this.throwIfDisposed(),nc(this,e)},Qa().prototype.div=function(e){return this.throwIfDisposed(),gu(this,e)},Qa().prototype.dot=function(e){return this.throwIfDisposed(),rc(this,e)},Qa().prototype.elu=function(){return this.throwIfDisposed(),sc(this)},Qa().prototype.equal=function(e){return this.throwIfDisposed(),ec(this,e)},Qa().prototype.erf=function(){return this.throwIfDisposed(),ic(this)},Qa().prototype.exp=function(){return this.throwIfDisposed(),oc(this)},Qa().prototype.expandDims=function(e){return this.throwIfDisposed(),uc(this,e)},Qa().prototype.expm1=function(){return this.throwIfDisposed(),lc(this)},Qa().prototype.fft=function(){return this.throwIfDisposed(),Xd(this)},Qa().prototype.flatten=function(){return this.throwIfDisposed(),yl(this,[this.size])},Qa().prototype.floor=function(){return this.throwIfDisposed(),hc(this)},Qa().prototype.floorDiv=function(e){return this.throwIfDisposed(),mu(this,e)},Qa().prototype.gather=function(e,t){return this.throwIfDisposed(),pc(this,e,t)},Qa().prototype.greaterEqual=function(e){return this.throwIfDisposed(),mc(this,e)},Qa().prototype.greater=function(e){return this.throwIfDisposed(),fc(this,e)},Qa().prototype.ifft=function(){return this.throwIfDisposed(),Yd(this)},Qa().prototype.irfft=function(){return this.throwIfDisposed(),Zd(this)},Qa().prototype.isFinite=function(){return this.throwIfDisposed(),yc(this)},Qa().prototype.isInf=function(){return this.throwIfDisposed(),bc(this)},Qa().prototype.isNaN=function(){return this.throwIfDisposed(),xc(this)},Qa().prototype.leakyRelu=function(e){return this.throwIfDisposed(),wc(this,e)},Qa().prototype.lessEqual=function(e){return this.throwIfDisposed(),kc(this,e)},Qa().prototype.less=function(e){return this.throwIfDisposed(),vc(this,e)},Qa().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),Sc(this,e,t,n,r)},Qa().prototype.logSigmoid=function(){return this.throwIfDisposed(),Ec(this)},Qa().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Rc(this,e)},Qa().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Wc(this,e,t)},Qa().prototype.log=function(){return this.throwIfDisposed(),Nc(this)},Qa().prototype.log1p=function(){return this.throwIfDisposed(),Tc(this)},Qa().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Vc(this,e)},Qa().prototype.logicalNot=function(){return this.throwIfDisposed(),Uc(this)},Qa().prototype.logicalOr=function(e){return this.throwIfDisposed(),Gc(this,e)},Qa().prototype.logicalXor=function(e){return this.throwIfDisposed(),Hc(this,e)},Qa().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),Zi(this,e,t,n)},Qa().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),jc(this,e,t,n,r)},Qa().prototype.max=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},Qa().prototype.maximum=function(e){return this.throwIfDisposed(),Bu(this,e)},Qa().prototype.mean=function(e,t){return this.throwIfDisposed(),Xc(this,e,t)},Qa().prototype.min=function(e,t){return this.throwIfDisposed(),Qc(this,e,t)},Qa().prototype.minimum=function(e){return this.throwIfDisposed(),ed(this,e)},Qa().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),td(this,e,t)},Qa().prototype.mod=function(e){return this.throwIfDisposed(),nd(this,e)},Qa().prototype.mul=function(e){return this.throwIfDisposed(),yu(this,e)},Qa().prototype.neg=function(){return this.throwIfDisposed(),Cc(this)},Qa().prototype.norm=function(e,t,n){return this.throwIfDisposed(),vh(this,e,t,n)},Qa().prototype.notEqual=function(e){return this.throwIfDisposed(),id(this,e)},Qa().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Ji(this,e,t,n)},Qa().prototype.onesLike=function(){return this.throwIfDisposed(),od(this)},Qa().prototype.pad=function(e,t){return this.throwIfDisposed(),ld(this,e,t)},Qa().prototype.pool=function(e,t,n,r,a){return this.throwIfDisposed(),md(this,e,t,n,r,a)},Qa().prototype.pow=function(e){return this.throwIfDisposed(),Fu(this,e)},Qa().prototype.prelu=function(e){return this.throwIfDisposed(),gd(this,e)},Qa().prototype.prod=function(e,t){return this.throwIfDisposed(),yd(this,e,t)},Qa().prototype.reciprocal=function(){return this.throwIfDisposed(),$d(this)},Qa().prototype.relu=function(){return this.throwIfDisposed(),Ed(this)},Qa().prototype.relu6=function(){return this.throwIfDisposed(),_d(this)},Qa().prototype.reshapeAs=function(e){return this.throwIfDisposed(),yl(this,e.shape)},Qa().prototype.reshape=function(e){return this.throwIfDisposed(),yl(this,e)},Qa().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),op(this,e,t,n)},Qa().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),up(this,e,t,n)},Qa().prototype.reverse=function(e){return this.throwIfDisposed(),Ad(this,e)},Qa().prototype.rfft=function(){return this.throwIfDisposed(),Qd(this)},Qa().prototype.round=function(){return this.throwIfDisposed(),Od(this)},Qa().prototype.rsqrt=function(){return this.throwIfDisposed(),Ld(this)},Qa().prototype.selu=function(){return this.throwIfDisposed(),zd(this)},Qa().prototype.separableConv2d=function(e,t,n,r,a,s){return this.throwIfDisposed(),Pd(this,e,t,n,r,a,s)},Qa().prototype.sigmoid=function(){return this.throwIfDisposed(),vl(this)},Qa().prototype.sign=function(){return this.throwIfDisposed(),Wd(this)},Qa().prototype.sin=function(){return this.throwIfDisposed(),Vd(this)},Qa().prototype.sinh=function(){return this.throwIfDisposed(),Ud(this)},Qa().prototype.slice=function(e,t){return this.throwIfDisposed(),kl(this,e,t)},Qa().prototype.softmax=function(e){return this.throwIfDisposed(),Kd(this,e)},Qa().prototype.softplus=function(){return this.throwIfDisposed(),$c(this)},Qa().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),fd(this,e,t)},Qa().prototype.split=function(e,t){return this.throwIfDisposed(),Jd(this,e,t)},Qa().prototype.sqrt=function(){return this.throwIfDisposed(),bu(this)},Qa().prototype.square=function(){return this.throwIfDisposed(),xu(this)},Qa().prototype.squaredDifference=function(e){return this.throwIfDisposed(),eh(this,e)},Qa().prototype.squeeze=function(e){return this.throwIfDisposed(),th(this,e)},Qa().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Ja?[this,e]:[this,...e];return nh(n,t)},Qa().prototype.step=function(e){return this.throwIfDisposed(),rh(this,e)},Qa().prototype.stridedSlice=function(e,t,n,r,a,s,i,o){return this.throwIfDisposed(),ah(this,e,t,n,r,a,s,i,o)},Qa().prototype.sub=function(e){return this.throwIfDisposed(),Du(this,e)},Qa().prototype.sum=function(e,t){return this.throwIfDisposed(),Ac(this,e,t)},Qa().prototype.tan=function(){return this.throwIfDisposed(),sh(this)},Qa().prototype.tanh=function(){return this.throwIfDisposed(),Il(this)},Qa().prototype.tile=function(e){return this.throwIfDisposed(),cc(this,e)},Qa().prototype.toBool=function(){return this.throwIfDisposed(),Ai(this,"bool")},Qa().prototype.toFloat=function(){return this.throwIfDisposed(),Ai(this,"float32")},Qa().prototype.toInt=function(){return this.throwIfDisposed(),Ai(this,"int32")},Qa().prototype.topk=function(e,t){return this.throwIfDisposed(),dh(this,e,t)},Qa().prototype.transpose=function(e){return this.throwIfDisposed(),Qi(this,e)},Qa().prototype.unique=function(e){return this.throwIfDisposed(),ph(this,e)},Qa().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),fh(this,e,t)},Qa().prototype.unstack=function(e){return this.throwIfDisposed(),mh(this,e)},Qa().prototype.where=function(e,t){return this.throwIfDisposed(),tc(e,this,t)},Qa().prototype.zerosLike=function(){return this.throwIfDisposed(),wu(this)};class wy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,wy.prototype)}}class vy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,vy.prototype)}}class ky extends Error{constructor(e){super(e),Object.setPrototypeOf(this,ky.prototype)}}class Iy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Iy.prototype)}}class Sy extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Sy.prototype)}}function Ny(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function Ty(e,t){if(!e)throw new Sy(t)}function Cy(e,t){let n=0;for(const r of e)r===t&&n++;return n}function $y(e){return 1===e.length?e[0]:e}function Ey(e){return Array.isArray(e)?e:[e]}function _y(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function Ay(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,(e,t)=>t.toUpperCase())}Error;let Ry={};function Fy(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function Dy(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach(e=>Dy(e));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?Dy(t):e[n]=t.value)}}}function My(e,t={},n={},r="object",a=!1){if("string"==typeof e){const a=e;let s;if(a in n)s=n[a];else if(a in Ry)s=Ry[a];else if(s=t[a],null==s)throw new ky(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return s}{const s=e;if(null==s.className||null==s.config)throw new ky(`${r}: Improper config format: ${JSON.stringify(s)}.\n'className' and 'config' must set.`);const i=s.className;let o,u;if(i in n?[o,u]=n[i]:i in Ry?[o,u]=Ry.className:i in t&&([o,u]=t[i]),null==o)throw new ky(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(Ry))e[t]=Ry[t];for(const t of Object.keys(n))e[t]=n[t];s.config.customObjects=e;const t=Object.assign({},Ry);for(const e of Object.keys(n))Ry[e]=n[e];Dy(s.config);const r=u(o,s.config,n,a);return Ry=Object.assign({},t),r}{const e=Object.assign({},Ry);for(const e of Object.keys(n))Ry[e]=n[e];const t=new o(s.config);return Ry=Object.assign({},e),t}}}function Oy(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function Ly(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function zy(e){if(null==e)throw new ky(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function Py(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new ky(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function By(e,t,n=0,r=1/0){return Ty(n>=0),Ty(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every(e=>typeof e===t)}function Wy(e,t){Array.isArray(e)?(oe(e.length>0,()=>`${t} is unexpectedly an empty array.`),e.forEach((e,n)=>Wy(e,`element ${n+1} of ${t}`))):oe(Number.isInteger(e)&&e>0,()=>`Expected ${t} to be a positive integer, but got ${Vy(e)}.`)}function Vy(e){return null===e?"null":Array.isArray(e)?"["+e.map(e=>Vy(e)).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function Uy(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function Gy(e,t){return tu(()=>bu(Ac(yu(e,e),t,!0)))}class Hy extends Ao{getConfig(){return{}}}class jy extends Hy{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return tu(()=>{const t=Gy(e,this.axis),n=Dl(t,0,this.maxValue);return yu(e,gu(n,fu(xy(),t)))})}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}jy.className="MaxNorm",Fo(jy);class qy extends Hy{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return tu(()=>gu(e,fu(xy(),Gy(e,this.axis))))}getConfig(){return{axis:this.axis}}}qy.className="UnitNorm",Fo(qy);class Ky extends Hy{apply(e){return Ed(e)}}Ky.className="NonNeg",Fo(Ky);class Xy extends Hy{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return tu(()=>{const t=Gy(e,this.axis),n=fu(yu(this.rate,Dl(t,this.minValue,this.maxValue)),yu(1-this.rate,t));return yu(e,gu(n,fu(xy(),t)))})}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Xy.className="MinMaxNorm",Fo(Xy);const Yy={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Zy(e){return Fy(e)}function Jy(e,t={}){return My(e,Ro.getMap().classNameMap,t,"constraint")}function Qy(e){return null==e?null:"string"==typeof e?Jy({className:e in Yy?Yy[e]:e,config:{}}):e instanceof Hy?e:Jy(e)}function eb(e){return new jy(e)}function tb(e){return new qy(e)}function nb(){return new Ky}function rb(e){return new Xy(e)}const ab=["channelsFirst","channelsLast"],sb=["nearest","bilinear"],ib=["valid","same","causal"],ob=["max","avg"],ub=["sum","mul","concat","ave"],lb=new Map;function cb(e){Py(ab,"DataFormat",e)}function db(e){Py(ib,"PaddingMode",e)}function hb(e){Py(ob,"PoolMode",e)}const pb=[];function fb(e,t){pb.push(e);try{const e=t();return pb.pop(),e}catch(e){throw pb.pop(),e}}function mb(e){if(!bb(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===pb.length?"":pb.join("/")+"/")+e}function gb(e){if(!bb(e))throw new Error("Not a valid tensor name: '"+e+"'");lb.has(e)||lb.set(e,0);const t=lb.get(e);if(lb.set(e,lb.get(e)+1),t>0){const n=`${e}_${t}`;return lb.set(n,1),n}return e}const yb=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function bb(e){return!!e.match(yb)}function xb(e){return e===parseInt(e.toString(),10)}function wb(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let a=t;a<n;++a)r*=e[a];return r}function vb(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function kb(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Ib(e,t){if(t<e)throw new ky(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Sb(e,t){return Ai(e,t)}function Nb(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),yl(e,n)}function Tb(e,t,n){return tu(()=>{switch(e.rank){case 1:return Gd(e,t,n);case 2:return Hd(e,[t,0],[n,e.shape[1]]);case 3:return jd(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return qd(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return kl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return kl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new ky(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Cb(e,t,n){return tu(()=>{switch(e.rank){case 1:return Gd(e,t,n);case 2:return Hd(e,[0,t],[e.shape[0],n]);case 3:return jd(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return qd(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function $b(e,t,n,r){return tu(()=>{switch(e.rank){case 1:return Gd(e,t,n);case 2:switch(r){case 1:return Tb(e,t,n);case 2:return Cb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return Tb(e,t,n);case 2:return jd(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return Cb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return Tb(e,t,n);case 2:return qd(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return qd(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return Cb(e,t,n);default:throw new ky(`The axis is not within the rank of the tensor ${r}`)}default:throw new ky(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}})}function Eb(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),wl(e,t)}function _b(e,t){switch(e.rank){case 1:return Ml([e,t]);case 2:return Ol([e,t],0);case 3:return Ll([e,t],0);case 4:return zl([e,t],0);default:throw new ky(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function Ab(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new ky(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return cc(e,t)}function Rb(e,t=0,n=1,r,a){return Sd(e,t,n,r,a)}function Fb(e,t,n,r){if(e.rank<2||t.rank<2)throw new Iy(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Iy(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Ph({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Ob(e.rank,r,"channelsLast"):null,activation:n});{const a=e.shape.slice(),s=a.pop();e=yl(e,[-1,s]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},(e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n);t=yl(Qi(t,c),[u,-1]);const d=[...a,...l];return yl(Ph({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?Ob(e.rank,r,"channelsLast"):null,activation:n}),d)}}function Db(e,t,n){return tu(()=>(t=Array.isArray(t)?ih(t,"int32"):Ai(t,"int32"),pc(e,t,n)))}function Mb(e){return yu(e,e)}function Ob(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new ky(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?yl(t,[1,r[0],1,1,1]):yl(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?yl(t,[1,1,1,1,r[0]]):yl(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?yl(t,[1,r[0],1,1]):yl(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?yl(t,[1,1,1,r[0]]):yl(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?yl(t,[1,r[0],1]):yl(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?yl(t,[1,1,r[0]]):yl(t,[1].concat(r))}else if(e<3)return t;throw new ky(`Unsupported input rank by biasAdd: ${t.rank}`)}function Lb(e,t,n){return tu(()=>(null==n&&(n="channelsLast"),cb(n),fu(e,Ob(e.rank,t,n))))}function zb(e,t,n,r){return tu(()=>Th(e,t,n,r))}function Pb(e,t,n=!1){return n?e():t()}const Bb=["fanIn","fanOut","fanAvg"],Wb=["normal","uniform","truncatedNormal"];class Vb extends Ao{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class Ub extends Vb{apply(e,t){return Yc(e,t)}}Ub.className="Zeros",Fo(Ub);class Gb extends Vb{apply(e,t){return Zc(e,t)}}Gb.className="Ones",Fo(Gb);class Hb extends Vb{constructor(e){if(super(),"object"!=typeof e)throw new ky(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new ky(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return tu(()=>yu($u(this.value),Zc(e,t)))}getConfig(){return{value:this.value}}}Hb.className="Constant",Fo(Hb);class jb extends Vb{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return Nd(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}jb.className="RandomUniform",Fo(jb);class qb extends Vb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Iy(`randomNormal does not support dType ${t}.`);return Rb(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}qb.className="RandomNormal",Fo(qb);class Kb extends Vb{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Iy(`truncatedNormal does not support dType ${t}.`);return hh(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Kb.className="TruncatedNormal",Fo(Kb);class Xb extends Vb{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return tu(()=>{if(2!==e.length||e[0]!==e[1])throw new ky("Identity matrix initializer can only be used for 2D square matrices.");return yu(this.gain,dc(e[0]))})}getConfig(){return{gain:this.gain}}}Xb.className="Identity",Fo(Xb);class Yb extends Vb{constructor(e){if(super(),e.scale<0)throw new ky(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,Py(Bb,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){Py(Wb,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(cb(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=wb(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=wb(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=wb(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],a=n[1];let s=this.scale;if("fanIn"===this.mode?s/=Math.max(1,r):"fanOut"===this.mode?s/=Math.max(1,a):s/=Math.max(1,(r+a)/2),"normal"===this.distribution){const n=Math.sqrt(s);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Iy(`${this.getClassName()} does not support dType ${t}.`);return hh(e,0,n,t,this.seed)}{const n=Math.sqrt(3*s);return Nd(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Yb.className="VarianceScaling",Fo(Yb);class Zb extends Yb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}Zb.className="GlorotUniform",Fo(Zb);class Jb extends Yb{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}Jb.className="GlorotNormal",Fo(Jb);class Qb extends Yb{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}Qb.className="HeNormal",Fo(Qb);class ex extends Yb{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}ex.className="HeUniform",Fo(ex);class tx extends Yb{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}tx.className="LeCunNormal",Fo(tx);class nx extends Yb{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Yb.className}}nx.className="LeCunNormal",Fo(nx);class rx extends Vb{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Iy("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return tu(()=>{if(e.length<2)throw new Iy("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=Rb(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Mp.gramSchmidt(t);return e[0]>e[1]&&(n=Qi(n)),yu(this.gain,n)})}getConfig(){return{gain:this.gain,seed:this.seed}}}rx.className="Orthogonal",Fo(rx);const ax={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function sx(e,t={}){return My(e,Ro.getMap().classNameMap,t,"initializer")}function ix(e){return Fy(e)}function ox(e){if("string"==typeof e){const t=e in ax?ax[e]:e;if("GlorotNormal"===t)return new Jb;if("GlorotUniform"===t)return new Zb;if("HeNormal"===t)return new Qb;if("HeUniform"===t)return new ex;if("LeCunNormal"===t)return new tx;if("LeCunUniform"===t)return new nx;{const e={};return e.className=t,e.config={},sx(e)}}return e instanceof Vb?e:sx(e)}function ux(){return new Ub}function lx(){return new Gb}function cx(e){return new Hb(e)}function dx(e){return new jb(e)}function hx(e){return new qb(e)}function px(e){return new Kb(e)}function fx(e){return new Xb(e)}function mx(e){return new Yb(e)}function gx(e){return new Zb(e)}function yx(e){return new Jb(e)}function bx(e){return new Qb(e)}function xx(e){return new ex(e)}function wx(e){return new tx(e)}function vx(e){return new nx(e)}function kx(e){return new rx(e)}let Ix=0;function Sx(){return Ix++}const Nx={};function Tx(e=""){return e in Nx||(Nx[e]=0),Nx[e]+=1,e+Nx[e].toString()}function Cx(e){return Array.isArray(e)&&Array.isArray(e[0])}function $x(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function Ex(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new ky(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function _x(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new ky(`Expected exactly 1 Shape; got ${e.length}`)}return e}function Ax(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce((e,t)=>e*t);return t}const Rx="Variable";class Fx{constructor(e,t="float32",n=Rx,r=!0,a=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Sx(),n=null==n?Rx:n,this.originalName=mb(n),this.name=gb(this.originalName),this.trainable_=r,this.constraint=a,this.val=gh(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function Dx(e){return e.map(e=>e.read())}function Mx(e){e.forEach(e=>{e[0].write(e[1])})}class Ox{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class Lx{constructor(e,t,n,r,a,s,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=a,this.outputTensorIndex=i,this.id=Sx(),null!=s&&(this.originalName=mb(s),this.name=gb(this.originalName)),this.rank=t.length}}let zx=0;class Px{constructor(e,t){this.callArgs=t,this.id=zx++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let Bx=0;class Wx extends Ao{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=Bx++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=_y(e)+"_"+Tx(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new vy(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new ky(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return $y(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return $y(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new wy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new wy(`Layer ${this.name} is not connected, no input to return.`);return $y(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new wy(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new wy(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return $y(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map(e=>e())}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach(t=>t.trainable=e),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter(e=>e.trainable):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter(e=>!e.trainable).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=Ey(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=Ey(this.inputSpec);if(e.length!==t.length)throw new ky(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],a=t[n];if(null==a)continue;const s=r.rank;if(null!=a.ndim&&s!==a.ndim)throw new ky(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${a.ndim}, found ndim=${s}`);if(null!=a.maxNDim&&s>a.maxNDim)throw new ky(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${a.maxNDim}, found ndim=${s}`);if(null!=a.minNDim&&s<a.minNDim)throw new ky(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${a.minNDim}, found ndim=${s}.`);if(null!=a.dtype&&r.dtype!==a.dtype)throw new ky(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${a.dtype}, found dtype=${r.dtype}.`);if(a.axes){const e=r.shape;for(const t in a.axes){const r=Number(t),s=a.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=s&&-1===[s,null].indexOf(i))throw new ky(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${s} but got shape ${e}.`)}}if(null!=a.shape)for(let e=0;e<a.shape.length;++e){const t=a.shape[e],s=r.shape[e];if(null!=t&&null!=s&&t!==s)throw new ky(`Input ${n} is incompatible with layer ${this.name}: expected shape=${a.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=Ey(e);let r=!0;for(const e of n)if(!(e instanceof Lx)){r=!1;break}let a=!0;for(const e of n)if(e instanceof Lx){a=!1;break}if(r===a)throw new ky("Arguments to apply() must be all SymbolicTensors or all Tensors");return fb(this.name,()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of Ey(e))t.push(n.shape);this.build($y(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&a&&(this._refCount=1)}if(this.assertInputCompatibility(e),a){let r=this.call(e,t);const a=Ey(r),s=[];for(let e of a)-1!==n.indexOf(e)&&(e=e.clone()),s.push(e);if(r=$y(s),null!=this.activityRegularizer)throw new Iy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=Ey(e);const t=[];for(const n of e)t.push(n.shape);return $y(t)}(e),r=this.computeOutputShape(n);let a;const s="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),a=null!=r&&r.length>0&&Array.isArray(r[0])?r.map((n,r)=>new Lx(s,n,this,Ey(e),t,this.name,r)):new Lx(s,r,this,Ey(e),t,this.name),this.addInboundNode(e,a,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Iy("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return a}})}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)}),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new wy(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new wy(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new vy(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return Ax(this.weights)}build(e){this.built=!0}getWeights(e=!1){return Dx(e?this.trainableWeights:this.weights)}setWeights(e){tu(()=>{const t=this.weights;if(t.length!==e.length)throw new ky(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=Dx(t);for(let a=0;a<r.length;++a){const s=r[a],i=t[a],o=e[a];if(!pe(s.shape,o.shape))throw new ky(`Layer weight shape ${s.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}Mx(n)})}addWeight(e,t,n,r,a,s,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new ky(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():ox("zeros"));const u=r.apply(t,n),l=new Fx(u,n,e,s,i);return u.dispose(),null!=a&&this.addLoss(()=>a.apply(l.read())),null==s&&(s=!0),s?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=Ey(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach(e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)})}return null}return t}addInboundNode(e,t,n,r,a,s,i=null){const o=Ey(e);t=Ey(t),n=Ey(n),r=Ey(r),a=$x(a),s=$x(s);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new Px({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:a,outputShapes:s},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach(e=>e.dispose()),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0===--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function Vx(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=Vx(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class Ux extends Wx{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:Tx("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new ky("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new ky("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new ky("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new Lx(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new Px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new ky(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function Gx(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new ky("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new Ux({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function Hx(e){if(null==e)return;const t=[],n=[],r=[];for(const a in e){const s=e[a];if("number"!=typeof s){const e=s;t.push(e.data()),n.push(a),r.push(e)}}if(t.length>0){const a=await Promise.all(t);for(let t=0;t<a.length;++t)e[n[t]]=a[t][0];nu(r)}}function jx(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var qx;Ux.className="InputLayer",Fo(Ux),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(qx||(qx={}));class Kx{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Xx{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Yx extends Kx{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const a=tu(()=>fu(this.totals[e],yu(r,n)));this.totals[e]=a,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:tu(()=>{const n=yu(gu(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),ru(t[e])}))}}class Zx extends Kx{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const a=this.history[r];for(let s=0;s<a.length;++s)if("number"!=typeof a[s]){const i=a[s];e.push(i.data()),t.push(r),n.push(s)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Jx extends Kx{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Wp,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Fe(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,a=null!=n?n():Oa();return(...s)=>{const i=null!=n?n():Oa();return i-a<t||(a=i,r=e(...s)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await Hx(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await Hx(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await Hx(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await Hx(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await Hx(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Fe(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await Hx(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await Hx(e),await this.trainEnd(e))}}function Qx(e,t){return null==e&&(e={}),e instanceof Kx?[e]:Array.isArray(e)&&e[0]instanceof Kx?e:Ey(e).map(e=>new Jx(e,t))}class ew{constructor(){}static registerCallbackConstructor(e,t){oe(e>=0&&Number.isInteger(e),()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`),ew.checkForDuplicate(t),null==ew.constructors[e]&&(ew.constructors[e]=[]),ew.constructors[e].push(t)}static checkForDuplicate(e){for(const t in ew.constructors)ew.constructors[+t].forEach(t=>{if(t===e)throw new ky("Duplicate callback constructor.")})}static clear(){ew.constructors={}}static createCallbacks(e){const t=[];for(const n in ew.constructors){const r=+n;e>=r&&t.push(...ew.constructors[r])}return t.map(e=>new e)}}function tw(e,t,n,r,a,s,i,o,u){const l=new Zx,c=[new Yx,...ew.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const d=new Xx(c);return d.setParams({epochs:n,initialEpoch:r,samples:a,steps:s,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:d,history:l}}function nw(e,t={},n=!1){return My(e,Ro.getMap().classNameMap,t,"layer",n)}function rw(e,t){return tu(()=>{"float32"!==e.dtype&&(e=Ai(e,"float32"));const n=Ac(Mb(e),t,!0),r=Au(n.shape,xy()),a=bu(Bu(n,r));return gu(e,a)})}function aw(e,t){return tu(()=>Xc(Mb(Du(t,e)),-1))}function sw(e,t){return tu(()=>Xc(Ou(Du(t,e)),-1))}function iw(e,t){return tu(()=>{const n=Du(e,t),r=Dl(Ou(e),xy(),Number.MAX_VALUE),a=Ou(gu(n,r));return yu(100,Xc(a,-1))})}function ow(e,t,n=!1){return tu(()=>{if(n)t=Kd(t);else{const e=Ac(t,t.shape.length-1,!0);t=gu(t,e)}return t=Dl(t,xy(),1-xy()),Cc(Ac(yu(Ai(e,"float32"),Nc(t)),t.shape.length-1))})}function uw(e,t,n=!1){return tu(()=>{const r=Ai(hc(function(e){const t=[wb(e.shape)];return yl(e,t)}(e)),"int32"),a=(t=Dl(t,xy(),1-xy())).shape;return ow(yl(Ji(r,a[a.length-1]),a),t,n)})}function lw(e,t){return tu(()=>{let n;return n=Dl(t,xy(),1-xy()),n=Nc(gu(n,Du(1,n))),Xc(function(e,t){if(!pe(e.shape,t.shape))throw new ky(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return tu(()=>{const n=Ed(t),r=Cc(Ou(t));return fu(Du(n,yu(t,e)),Tc(oc(r)))})}(e,n),-1)})}function cw(e,t){return tu(()=>{const n=rw(e,-1),r=rw(t,-1),a=yu(n,r);return Cc(Ac(a,-1))})}ew.constructors={};const dw={meanSquaredError:aw,meanAbsoluteError:sw,meanAbsolutePercentageError:iw,meanSquaredLogarithmicError:function(e,t){return tu(()=>{const n=Dl(t,xy(),Number.MAX_VALUE),r=Nc(fu(1,n)),a=Dl(e,xy(),Number.MAX_VALUE),s=Nc(fu(1,a));return Xc(Mb(Du(r,s)),-1)})},squaredHinge:function(e,t){return tu(()=>{const n=Bu(0,Du(1,yu(e,t)));return Xc(Mb(n),-1)})},hinge:function(e,t){return tu(()=>{const n=Bu(0,Du(1,yu(e,t)));return Xc(n,-1)})},categoricalHinge:function(e,t){return tu(()=>{const n=Ac(yu(e,t),-1),r=_c(yu(Du(1,e),t),-1);return Bu(0,fu(1,Du(r,n)))})},logcosh:function(e,t){return tu(()=>{const n=Math.log(2),r=Du(t,e),a=Du(fu(r,$c(yu(-2,r))),n);return Xc(a,-1)})},categoricalCrossentropy:ow,sparseCategoricalCrossentropy:uw,binaryCrossentropy:lw,kullbackLeiblerDivergence:function(e,t){return tu(()=>{const n=Dl(e,xy(),1),r=Dl(t,xy(),1);return Ac(yu(e,Nc(gu(n,r))),-1)})},poisson:function(e,t){return tu(()=>{const n=Nc(fu(xy(),t));return Xc(Du(t,yu(e,n)),-1)})},cosineProximity:cw};function hw(e){if("string"==typeof e){if(e in dw)return dw[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new ky(t)}return e}function pw(e,t){return tu(()=>{const n=yu(.5,od(t)),r=Sb(fc(t,n),e.dtype);return Xc(ec(e,r),-1)})}function fw(e,t){return tu(()=>Sb(ec(Zu(e,-1),Zu(t,-1)),"float32"))}function mw(e,t){return tu(()=>Ai(Ac(Vc(ec(e,1),ec(t,1))),"float32"))}function gw(e,t){return tu(()=>{const n=mw(e,t),r=function(e,t){return tu(()=>Ai(Ac(Vc(ec(e,0),ec(t,1))),"float32"))}(e,t),a=fu(n,r);return Ai(tc(fc(a,0),gu(n,a),0),"float32")})}function yw(e,t){return lw(e,t)}function bw(e,t){return e.rank===t.rank&&(e=th(e,[e.rank-1])),(t=Zu(t,-1)).dtype!==e.dtype&&(t=Ai(t,e.dtype)),Ai(ec(e,t),"float32")}const xw=ow,ww=uw,vw={binaryAccuracy:pw,categoricalAccuracy:fw,precision:gw,categoricalCrossentropy:xw,sparseCategoricalCrossentropy:ww,mse:aw,MSE:aw,mae:sw,MAE:sw,mape:iw,MAPE:iw,cosine:cw};function kw(e){if("string"==typeof e&&e in vw)return vw[e];if("string"!=typeof e&&null!=e)return e;throw new ky(`Unknown metric ${e}`)}function Iw(e){if(Ty(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(dw))if(dw[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(vw))if(vw[n]===e){t=n;break}return void 0!==t?t:e.name}}function Sw(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Nw(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Nw(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Nw(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Nw(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function Tw(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function Cw(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}Tw([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function $w(e,t,n,r){let a;try{a=JSON.stringify(e.outputShape)}catch(e){a="multiple"}const s=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],a=t.tensorIndices[e];s.push(`${n}[${r}][${a}]`)}const i=e.name,o=e.getClassName(),u=0===s.length?"":s[0];Tw([`${i} (${o})`,a,e.countParams().toString(),u],t,r);for(let e=1;e<s.length;++e)Tw(["","","",s[e]],t,r)}function Ew(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function _w(e,t){if(null===e)return null;if("string"==typeof e)return Ay(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ew(t,a,r)?n.push(r):n.push(_w(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=Ay(n);t[e]=_w(r,e)}}return t}}function Aw(e,t){if(null==e)return null;if("string"==typeof e)return _y(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let a=0;a<r;++a){const r=e[a];Ew(t,a,r)?n.push(r):n.push(Aw(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[_y(n)]="name"!==n&&"className"!==n||"string"!=typeof r?Aw(r,n):r}return t}}const Rw="3.11.0";class Fw{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof Fw)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new ky(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ai(t,e.dtype)}catch(n){throw new ky(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof Lx){if(null==this.id2Value[e.id])throw new ky(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof Lx){if(null==this.id2Value[e.id])throw new ky(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new ky(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&nu(this.id2Mask)}}const Dw={},Mw={};function Ow(e,t,n,r){const a=null!=n&&n.training,s=Array.isArray(e),i=s?e:[e],o=i.map(e=>e.name),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let d,h;if(null==Dw[c]){const e=function(e,t){oe(null!=e&&e.length>0,()=>"Expected at least one fetch, got none");let n=[],r={};if(1===e.length){const a=zw(e[0],t);n=a.sorted,r=a.recipientMap}else{const a=new Set;for(const s of e){const{sorted:e,recipientMap:i}=zw(s,t);for(const t of e)a.has(t.name)||(n.push(t),a.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach(t=>r[e].add(t))}}return{sorted:n,recipientCounts:Lw(r)}}(i,t);d=e.sorted,h=e.recipientCounts,Dw[c]=d,Mw[c]=h}d=Dw[c],h={},a||Object.assign(h,Mw[c]);const p=new Fw(t);for(let e=0;e<d.length;++e){if(null!=r){const e=Qo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const s=d[e],i=s.sourceLayer;if(i instanceof Ux)continue;const l=[],c=[],f=[];let m=!1;for(const e of s.inputs){const n=p.getValue(e),r=p.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),a||(h[e.name]--,0!==h[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=Ey(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=Pw(s),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){p.hasKey(x[e])||p.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}a||nu(f)}return p.disposeMasks(),s?u:u[0]}function Lw(e){const t={};for(const n in e)t[n]=e[n].size;return t}function zw(e,t){const n=new Set,r=[],a={};for(const e of t.names())n.add(e);const s=[],i=[];for(s.push(e);s.length>0;){const e=s[s.length-1];if(n.has(e.name)){s.pop();continue}const t=i[i.length-1]===s.length-1;if(0===e.inputs.length||t)s.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(s.length-1);for(const t of e.inputs)null==a[t.name]&&(a[t.name]=new Set),a[t.name].add(e.name),n.has(t.name)||s.push(t)}}return{sorted:r,recipientMap:a}}function Pw(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class Bw extends Wx{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=Tx(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],Ly(this.inputs).length!==this.inputs.length)throw new ky(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map(e=>e.name)}`);Ly(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map(e=>e.name)}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;Ty(0===n,"input layer has >1 nodes"),Ty(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof Ux))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map(e=>e.shape),this.internalOutputShapes=this.outputs.map(e=>e.shape);const t={},n={},r={},a={},s={},i=[],o=(e,t,n,r,a,u)=>{null!=r&&null!=a&&null!=u||(r=e.sourceLayer,a=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[a];if(-1!==n.indexOf(l))throw new vy(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(Bw.nodeKey(r,a)),r.id in s||(s[r.id]=Object.keys(s).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],a=l.inboundLayers[e],s=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,a,s,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let s=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];s=Math.max(s,i),r[e.outboundLayer.id]=s,a[e.outboundLayer.id]=e.outboundLayer,t[e.id]=s;for(let r=0;r<e.inboundLayers.length;r++){const a=e.inboundLayers[r],i=e.nodeIndices[r],o=a.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(s+1,u),n[o.id]=o}}const d={};for(const e in t){const r=t[e];r in d||(d[r]=[]),d[r].push(n[e])}const h={};for(const e in r){const t=r[e];t in h||(h[t]=[]),h[t].push(a[e])}let p=Object.keys(h).map(e=>parseInt(e,10)).sort(Oy);this.layers=[];for(const e of p){const t=h[e];t.sort((e,t)=>{const n=s[e.id],r=s[t.id];return n<r?-1:n>r?1:0});for(const e of t)e instanceof Bw&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=h,p=Object.keys(d).map(e=>parseInt(e,10)).sort(Oy);const f=this.inputs.slice(),m=[];for(const e of p)for(const t of d[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new vy(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=d;const g=this.layers.map(e=>e.name);for(const e of g){const t=g.filter(t=>t===e).length;if(1!==t)throw new vy(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new Px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map(e=>null),outputMasks:this.outputs.map(e=>null),inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs.map(e=>e.shape)}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0===--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach(t=>{t._trainableWeights.forEach(t=>t.trainable=e)}),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new ky("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new ky(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const a=[];for(const r in e){let s=r;if(null==n[r]){const e=r.split("/");s=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[s])a.push([n[s],e[r]]);else if(t)throw new ky(`Provided weight data has no target variable: ${r}`);delete n[s]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new ky(`${e.length} of ${r} weights are not set: ${e}`)}Mx(a)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${Rw}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=Aw(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return tu(()=>{e=Ey(e);const n=new Fw;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return Ow(this.outputs,n,t)})}computeMask(e,t){return tu(()=>{let n;return e=Ey(e),n=null==t?Ny(null,e.length):Ey(t),this.runInternalGraph(e,n)[1]})}computeOutputShape(e){const t=$x(e);if(t.length!==this.inputLayers.length)throw new ky(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],a=t[e];n[r.name+"_0_0"]=a}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Oy);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map(e=>e.id).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const a=e.inboundLayers[t],s=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${a.name}_${s}_${i}`];r.push(o)}const a=$x(t.computeOutputShape($y(r))),s=t.inboundNodes.indexOf(e);for(let e=0;e<a.length;e++)n[`${t.name}_${s}_${e}`]=a[e]}}const a=[],s=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],a=`${t.name}_${n}_${r}`;s.push(a)}for(let e=0;e<s.length;e++){const t=s[e];Ty(t in n),a.push(n[t])}return $y(a)}runInternalGraph(e,t){null==t&&(t=Ny(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const a=this.inputs[r],s=e[r],i=t[r];n[a.id]=[s,i]}const r=Object.keys(this.nodesByDepth).map(e=>parseInt(e,10)).sort(Oy);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,a=e.outputTensors,s=new Array;for(const e of r)e.id in n&&s.push(n[e.id]);if(s.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===s.length){const[e,n]=s[0];null==l.mask&&(l.mask=n),o=Ey(t.call(e,l)),u=Ey(t.computeMask(e,n)),r=[e],i=[n]}else r=s.map(e=>e[0]),i=s.map(e=>e[1]),null==l.mask&&(l.mask=i),o=Ey(t.call(r,l)),u=Ey(t.computeMask(r,i));if(t.activityRegularizer)throw new Iy("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<a.length;++e){const t=a[e],r=o[e],s=u[e];n[t.id]=[r,s]}}}}const a=[],s=[],i=[];for(const e of this.outputs){Ty(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),a.push(t),s.push(r)}return[a,s,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof Bw?1:0;for(let r=0;r<e.inboundNodes.length;r++){const a=Bw.nodeKey(e,r);this.containerNodes.has(a)&&(t[a]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new ky(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new ky("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new ky(`No such layer: ${e}`)}calculateLosses(){return tu(()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=Bw.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e})}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),a=e.getConfig(),s=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],a=Bw.nodeKey(e,n);let i={};if(this.containerNodes.has(a)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const a=r.inboundLayers[n],s=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[Bw.nodeKey(a,s)];null==u&&(u=0),e.push([a.name,u,o,i])}s.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=a,i.inboundNodes=s,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],a=this.inputLayersNodeIndices[e],s=Bw.nodeKey(n,a);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const a=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],s=Bw.nodeKey(n,r);if(!this.containerNodes.has(s))continue;let i=t[s];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];a.push([n.name,i,o])}return e.outputLayers=a,e}static fromConfig(e,t,n={},r=!1){const a={},s={};function i(e,t){e.name in s?s[e.name].push(t):s[e.name]=[t]}function o(e,t){const n=[];let r;for(const s of t){const o=s[0],u=s[1],l=s[2];if(r=null==s[3]?{}:s[3],!(o in a))return void i(e,t);const c=a[o];if(c.inboundNodes.length<=u)return void i(e,t);const d=c.inboundNodes[u];n.push(d.outputTensors[l])}n.length>0&&e.apply($y(n),r)}function u(e){const n=e.name,s=nw(e,null!=t.customObjects?t.customObjects:{});s.setFastWeightInitDuringBuild(r),a[n]=s,e.inboundNodes.forEach(e=>{if(!(e instanceof Array))throw new ky(`Corrupted configuration, expected array for nodeData: ${e}`);i(s,e)})}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!zy(s);)for(const e of c){const t=a[e.name];if(t.name in s){const e=s[t.name];delete s[t.name];for(const n of e)o(t,n)}}const d=[],h=[],p=t.inputLayers;for(const e of p){const t=e[0],n=e[1],r=e[2];Ty(t in a);const s=a[t].inboundNodes[n].outputTensors;d.push(s[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];Ty(t in a);const s=a[t].inboundNodes[n].outputTensors;h.push(s[r])}return new e({inputs:d,outputs:h,name:l})}get stateful(){if(this._stateful)throw new ky("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){tu(()=>{this.layers.forEach(e=>{e.stateful&&e.resetStates()})})}}function Ww(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>null);if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach(t=>{t in e?n.push(e[t]):n.push(null)}),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function Vw(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=tu(()=>{if(1===e.shape.length)return Ri(e);if(2===e.shape.length){if(e.shape[1]>1)return Zu(e,1);if(1===e.shape[1])return yl(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)}),r=Array.from(await t.data());nu(t);const a=[];return r.forEach(e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);a.push(n[e])}),ih(a,"float32")}return null}function Uw(e,t){return yu(e,t)}function Gw(e,t){let n,r;const a=t;n=a.xs,r=a.ys,oe(null!=n&&null!=r,()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`);const s=Hw("input",e.inputNames,n),i=Hw("output",e.outputNames,r),o=s[0].shape[0];oe(s.length===e.inputs.length,()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${s.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`),oe(i.length===e.outputs.length,()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`);for(let t=0;t<s.length;t++)oe(s[t].shape[0]===o,()=>`Batch size mismatch: input ${e.inputNames[t]} has ${s[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);for(let t=0;t<i.length;t++)oe(i[t].shape[0]===o,()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`);return{xs:s,ys:i}}function Hw(e,t,n){if(n instanceof Ja)return[n];if(Array.isArray(n))return oe(n.length===t.length,()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`),n;{const r=[];for(const a of t){if(null==n[a])throw new ky(`The feature data generated by the dataset lacks the required ${e} key '${a}'.`);r.push(n[a])}return r}}function jw(e){return"function"==typeof e.iterator}function qw(e){oe(e>0&&Number.isInteger(e),()=>`batchSize is required to be a positive integer, but got ${e}`)}function Kw(e,t,n){return null==e?[null]:Array.isArray(e)?e.map(e=>Tb(e,t,n-t)):Tb(e,t,n-t)}function Xw(e,t){return tu(()=>null==e?null:Array.isArray(e)?e.map(e=>Xw(e,t)):Db(e,"int32"===t.dtype?t:Ai(t,"int32")))}function Yw(e,t){const n=[];let r=0,a=null;for(;r<e;)a=r+t,a>=e&&(a=e),n.push([r,a]),r=a;return n}function Zw(e){const t=[];e instanceof Ja&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(Nb(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Jw(e,t){if(null==e)return;const n=[];if(t instanceof Ja)n.push(t.id);else if(Array.isArray(t))t.forEach(e=>n.push(e.id));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof Ja)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach(e=>{-1===n.indexOf(e.id)&&r.push(e)});else if(null!=e)for(const t in e){const a=e[t];-1===n.indexOf(a.id)&&r.push(a)}r.forEach(e=>{e.isDisposed||e.dispose()})}function Qw(e){return Array.isArray(e)}function ev(e){return!function(e){return e instanceof Ja}(e)&&!Qw(e)}function tv(e,t,n,r=!0,a=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Qw(e)&&e.length>0)t=!0;else if(ev(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new ky(`Error when checking model ${a} expected no data, but got ${e}`)}return[]}if(null==e)return t.map(e=>null);let s;if(ev(e)){s=[];for(const n of t){if(null==e[n])throw new ky(`No data provided for "${n}". Need data for each key in: ${t}`);s.push(e[n])}}else if(Qw(e)){if(e.length!==t.length)throw new ky(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);s=e}else{if(t.length>1)throw new ky(`The model ${a} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);s=[e]}if(s=Zw(s),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ky(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const s=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&s!==o)throw new ky(`${a} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${a} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return s}function nv(e,t,n,r=!0,a=""){let s;if(Array.isArray(e)){if(e.length!==t.length)throw new ky(`Error when checking model ${a}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);s=e}else{if(t.length>1)throw new ky(`The model expects ${t.length} ${a} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);s=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=s[e];if(i.shape.length!==n[e].length)throw new ky(`Error when checking ${a}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let s=0;s<n[e].length;++s){if(0===s&&!r)continue;const o=i.shape[s],u=n[e][s];if(null!=u&&u!==o)throw new ky(`Error when checking ${a}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class rv extends Bw{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new ky("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const a=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const a of n.inboundNodes)if(-1!==r.indexOf(a)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),s=["Layer (type)","Output shape","Param #"];let i;if(a?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map(e=>Math.floor(t*e))),!a){s.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),Tw(s,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)a?Cw(o[e],n,r):$w(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?Ax(e.collectedTrainableWeights):Ax(e.trainableWeights),t}(e),l=Ax(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Pp.adagrad(.01),Adadelta:()=>Pp.adadelta(1,.95,xy()),Adam:()=>Pp.adam(.001,.9,.999,xy()),Adamax:()=>Pp.adamax(.002,.9,.999,xy(),0),RMSProp:()=>Pp.rmsprop(.001,.9,0,xy()),SGD:()=>Pp.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new ky(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Eu))throw new ky("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new ky(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map(e=>hw(e))}else{const n=hw(e.loss);this.outputs.forEach(e=>{t.push(n)})}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new ky(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(hw(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],fb("loss",()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}});const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map(e=>[]);let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map(e=>n);{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),a=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};fb("metric",()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,s;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let a;1===t[t.length-1]||this.lossFunctions[e]===lw?-1!==["accuracy","acc"].indexOf(i)?r=pw:-1!==["crossentropy","ce"].indexOf(i)&&(r=yw):this.lossFunctions[e]===uw?-1!==["accuracy","acc"].indexOf(i)?r=bw:-1!==["crossentropy","ce"].indexOf(i)&&(r=ww):-1!==["accuracy","acc"].indexOf(i)?r=fw:-1!==["crossentropy","ce"].indexOf(i)&&(r=xw),-1!==["accuracy","acc"].indexOf(i)?a="acc":-1!==["crossentropy","ce"].indexOf(i)&&(a="ce"),s=r,n=""+a}else{const e=kw(i);s=e,n=""+Iw(i)}let t;fb(n,()=>{t=s}),a(e,n,t)}})(r[e])}),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;qw(r);const a=this.standardizeUserDataXY(e,t,!0,r);try{const e=a[0].concat(a[1]);this.makeTestFunction();const t=this.testFunction;return $y(this.testLoop(t,e,r,n.verbose,n.steps))}finally{Jw(a[0],e),Jw(a[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,a=e.testFunction;let s=[];if(n.verbose>0)throw new Iy("Verbose mode is not implemented yet.");oe(!r||n.batches>0&&Number.isInteger(n.batches),()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`);const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(s=tu(()=>{if(t.value){const{xs:n,ys:r}=Gw(e,t.value),i=n.concat(r),l=tu(()=>a(i));if(nu(i),0===u)for(let e=0;e<l.length;++e)s.push($u(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=s[e];s[e]=tu(()=>fu(s[e],yu(c,t))),u>0&&nu(n)}nu(l),o+=c,++u}return s}),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<s.length;++e){const t=s[e];s[e]=gu(s[e],o),nu(t)}return $y(s)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let a;if(null!=n){if(a=null,null!=t)throw new ky(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new ky(`Either the input data should have a defined shape, or ${r} shoud be specified.`);a=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return a}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new ky("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],a=this.retrieveSymbolicTensors(r),s=new Fw;if(e instanceof Ja&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new ky(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)s.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new ky(`No value is provided for the model's input ${t.name}`);s.add(t,n)}const i=Ow(a,s);return n?i:i[0]}retrieveSymbolicTensors(e){const t=Ny(null,e.length);let n=e.length;for(const r of this.layers){const a=Array.isArray(r.output)?r.output:[r.output],s=a.map(e=>e.name);for(let r=0;r<e.length;++r){const i=s.indexOf(e[r]);if(-1!==i&&(t[r]=a[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach((t,r)=>{null==t&&n.push(e[r])}),new ky(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return tu(()=>{const r=this.checkNumSamples(e);if(n)throw new Iy("Verbose predictLoop() is not implemented yet.");const a=Yw(r,t),s=this.outputs.map(e=>[]);for(let t=0;t<a.length;++t)tu(()=>{const n=a[t][0],r=a[t][1],s=Kw(e,n,r),i=[];if(Array.isArray(s))for(let e=0;e<s.length;++e)i.push({key:this.inputs[e],value:s[e]});else i.push({key:this.inputs[0],value:s});const o=new Fw(i);return Ow(this.outputs,o)}).forEach((e,t)=>s[t].push(e));return $y(s.map(e=>wl(e,0)))})}predict(e,t={}){const n=Zw(e);nv(n,this.inputNames,this.feedInputShapes,!1);try{const e=null==t.batchSize?32:t.batchSize;return qw(e),this.predictLoop(n,e)}finally{Jw(n,e)}}predictOnBatch(e){nv(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new vy("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const a=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===uw?a.push(t.slice(0,t.length-1).concat([1])):a.push(t)}if(function(e,t){const n=Ly(e.map(e=>e.shape[0]));n.sort();const r=Ly(t.map(e=>e.shape[0]));if(r.sort(),n.length>1)throw new ky(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map(e=>e.shape))}`);if(r.length>1)throw new ky(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map(e=>e.shape))}`);if(n.length>0&&r.length>0&&!pe(n,r))throw new ky(`Input Tensors should have the same number of samples as target Tensors. Found ${n[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=tv(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=tv(t,this.feedOutputNames,a,!1,"target")),function(e,t,n){const r=[aw,lw,ow];for(let a=0;a<e.length;++a){const s=e[a],i=t[a],o=n[a];if(null!=i){if(i===ow&&1===s.shape[s.shape.length-1])throw new ky(`You are passing a target array of shape ${s.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=s.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],a=t[n];if(null!=a&&r!==a)throw new ky(`A target Tensor with shape ${s.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!==0)throw new ky(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,a=!0,s){const[i,o]=this.standardizeUserDataXY(e,t,a,s);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=Ww(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await Vw(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,a){return tu(()=>{const s=this.checkNumSamples(t,n,a,"steps"),i=[];if(r>0)throw new Iy("Verbose mode is not implemented yet.");if(null!=a)throw new Iy("steps mode in testLoop() is not implemented yet");{const r=Yw(s,n),a=ih(Ib(0,s));for(let n=0;n<r.length;++n){const s=r[n][0],o=r[n][1],u=Tb(a,s,o-s),l=Xw(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push($u(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=fu(i[e],yu(o-s,t))}}for(let e=0;e<i.length;++e)i[e]=gu(i[e],s)}return i})}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let a=r;Cy(e,r)>1&&(a+=`_${Cy(e.slice(0,n),r)}`),t.push(a)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),s=[],i=this.collectedTrainableWeights.map(e=>e.read());return[this.optimizer_.minimize(()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new Fw(e),o=Ow(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=a[e]&&(n=Uw(n,a[e]));const s=Xc(n);t.push(s),u=0===e?n:fu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],a=this.metricsTensors[e][1];n=Xc(t(r[a],o[a]))}ru(n),s.push(n)}return u=Xc(u),this.calculateLosses().forEach(e=>{u=fu(u,e)}),u},!0,i)].concat(s)}}makeTestFunction(){this.testFunction=e=>tu(()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),a=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=[];for(let e=0;e<this.inputs.length;++e)s.push({key:this.inputs[e],value:r[e]});const i=new Fw(s),o=Ow(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],s=Xc(r(a[e],o[e]));n=0===e?s:fu(n,s),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],s=Xc(n(a[r],o[r]));t.push(s)}return t})}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let a,s,i,o,u,l,c;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;qw(d);const h=!1,p=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,h,d);a=p[0],s=p[1],c=p[2];let f,m=!1;if(null!=r.validationData&&r.validationData.length>0){if(m=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Iy("validationData including sample weights is not supported yet."):new ky(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);i=r.validationData[0],o=r.validationData[1];const t=!0,n=await e.standardizeUserData(i,o,null,null,t,d);u=n[0],l=n[1],f=u.concat(l)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){m=!0;const e=Math.floor(a[0].shape[0]*(1-r.validationSplit)),t=a[0].shape[0];u=Kw(a,e,t),a=Kw(a,0,e),l=Kw(s,e,t),s=Kw(s,0,e),f=u.concat(l)}else null!=r.validationSteps&&(m=!0);const g=a.concat(s).concat(c);e.checkTrainableWeightsConsistency();const y=e.makeTrainFunction(),b=e.getDedupedMetricsNames();let x,w;m?(e.makeTestFunction(),x=e.testFunction,w=b.slice().concat(b.map(e=>"val_"+e))):(x=null,f=[],w=b.slice());const v=Qx(r.callbacks,r.yieldEvery),k=await async function(e,t,n,r,a,s,i,o,u,l,c,d,h,p){null==a&&(a=32),null==s&&(s=1),null==c&&(c=!0),null==h&&(h=0);let f=!1;null!=u&&null!=l&&(f=!0);const m=e.checkNumSamples(n,a,p,"steps_per_epoch");let g;null!=m&&(g=Ib(0,m)),null==i&&(i=1);const{callbackList:y,history:b}=tw(o,i,s,h,m,p,a,f,d);y.setModel(e),e.history=b,await y.onTrainBegin(),e.stopTraining_=!1;for(let i=h;i<s;++i){await y.onEpochBegin(i);const s={};{if("batch"===c)throw new Iy("batch shuffling is not implemneted yet");c&&Q(g);const i=ih(g),o=Yw(m,a);for(let c=0;c<o.length;++c){const d={};if(await y.onBatchBegin(c,d),tu(()=>{const h=o[c][0],p=o[c][1],m=Tb(i,h,p-h);d.batch=c,d.size=p-h;const g=Xw(n,m),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];d[t]=n,ru(n)}if(c===o.length-1&&f){const t=e.testLoop(u,l,a);for(let e=0;e<r.length;++e){const n=r[e],a=t[e];ru(a),s["val_"+n]=a}}}),await y.onBatchEnd(c,d),jx(d),e.stopTraining_)break}i.dispose()}if(await y.onEpochEnd(i,s),e.stopTraining_)break}return await y.onTrainEnd(),await e.history.syncData(),e.history}(e,y,g,b,d,r.epochs,r.verbose,v,x,f,r.shuffle,w,r.initialEpoch,null);return k}finally{e.isTraining=!1,Jw(a,t),Jw(s,n),Jw(u,i),Jw(l,o),null!=c&&nu(c)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(oe(null!=e.optimizer,()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig)."),oe(null!=n,()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call."),oe(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`),oe(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`),oe(null==n.validationSplit,()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead."),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const a=null!=n.validationData;let s,i;if(a)if(jw(n.validationData))oe(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`);else{const e=function(e){if(3===e.length)throw new Iy("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);s=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=a?u.slice().concat(u.map(e=>"val_"+e)):u.slice();const c=Qx(n.callbacks,n.yieldEvery),d=null==n.verbose?1:n.verbose,{callbackList:h,history:p}=tw(c,d,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,a,l);h.setModel(e),e.history=p,await h.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await h.onEpochBegin(f);let c=0,d=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:a}=Gw(e,t.value),s={};s.batch=d,s.size=r[0].shape[0],await h.onBatchBegin(d,s);const i=[];if(null!=n.classWeight){const t=Ww(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await Vw(a[e],null,t[e]))}const l=r.concat(a).concat(i),p=o(l);nu(l);for(let e=0;e<u.length;++e){const t=u[e],n=p[e];s[t]=n,ru(n)}await h.onBatchEnd(d,s),jx(s),d++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(a){let t;t=jw(n.validationData)?Ey(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):Ey(e.evaluate(s,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await h.onEpochEnd(f,l),f++,e.stopTraining_)break}return await h.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],a=n[1],s=this.makeTrainFunction()(r.concat(a)),i=[];for(const e of s){const t=await e.data();i.push(t[0])}return nu(s),$y(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,a=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:a[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Qo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Qo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=_y(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map(e=>_y(e))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=_y(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[_y(Iw(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map(e=>_y(Iw(e)));{const e={};for(const t in this.metrics)e[t]=_y(Iw(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=nw(_w(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=Ay(e.loss);else if(Array.isArray(e.loss))n=e.loss.map(e=>Ay(e));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=Ay(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map(e=>Ay(e));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=Ay(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=Zs(e);if(0===t.length)throw new ky(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new ky(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new ky("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Ls(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${Rw}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:a}=await Ls(await this.optimizer.getWeights(),e);n.specs.push(...a),n.data=Vs([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Sw(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Sw(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}rv.className="Model",Fo(rv);class av extends rv{}async function sv(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=nw(_w(n),t);if(null!=e.weightsManifest){const t=await Bi(e.weightsManifest,e.pathPrefix,r.weights.map(e=>e.originalName)),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),nu(t)}return r}av.className="Functional",Fo(av);class iv extends rv{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:Tx("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some(e=>e<0))throw new ky(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof iv||e instanceof rv;let n;if(t){if(n=e,1!==n.outputs.length)throw new ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new ky("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new ky("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=Gx({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new ky(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new ky("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=Vx(this.outputs[0])}this.inboundNodes=[],new Px({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:Ny(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map(e=>e.shape),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(_x(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new rv({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new vy("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new vy("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new vy("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new vy("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let a,s={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new ky("Legacy serialization format not supported yet.");a=t}else oe(null!=t.layers,()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field."),a=t.layers,delete t.layers,s=t;const i=new e(s);if(!(i instanceof iv))throw new Iy(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of a){const t=nw(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new ky("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new ky("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function ov(e){return new rv(e)}function uv(e){return new iv(e)}function lv(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Js(e,t);if(0===n.length)n.push(ji(e,t));else if(n.length>1)throw new ky(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new ky("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let a=r.modelTopology;null!=a.model_config&&(a=a.model_config);const s=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&s,o=nw(_w(a),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new ky("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=zs(e,t),r={},a=[];return t.forEach(e=>{"optimizer"===e.group?a.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]}),{modelWeights:r,optimizerWeights:a}}(r.weightData,r.weightSpecs);o.loadWeights(e,s),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),nu(e),nu(t.map(e=>e.tensor))}return o}(e,0,t)}(e,t)}function cv(e){return Gx(e)}function dv(e,t){ew.registerCallbackConstructor(e,t)}iv.className="Sequential",Fo(iv);class hv extends Ao{getConfig(){return{}}}class pv extends hv{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Iy(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return sc(e)}(e,t)}}pv.className="elu",Fo(pv);class fv extends hv{apply(e){return zd(e)}}fv.className="selu",Fo(fv);class mv extends hv{apply(e){return Ed(e)}}mv.className="relu",Fo(mv);class gv extends hv{apply(e){return tu(()=>ed(6,Ed(e)))}}gv.className="relu6",Fo(gv);class yv extends hv{apply(e){return e}}yv.className="linear",Fo(yv);class bv extends hv{apply(e){return vl(e)}}bv.className="sigmoid",Fo(bv);class xv extends hv{apply(e){return function(e){return tu(()=>{const t=fu(.5,yu(.2,e));return Dl(t,0,1)})}(e)}}xv.className="hardSigmoid",Fo(xv);class wv extends hv{apply(e){return $c(e)}}wv.className="softplus",Fo(wv);class vv extends hv{apply(e){return function(e){return tu(()=>gu(e,fu(Ou(e),1)))}(e)}}vv.className="softsign",Fo(vv);class kv extends hv{apply(e){return Il(e)}}kv.className="tanh",Fo(kv);class Iv extends hv{apply(e,t=-1){return Kd(e,t)}}Iv.className="softmax",Fo(Iv);class Sv extends hv{apply(e,t=-1){return Rc(e,t)}}Sv.className="logSoftmax",Fo(Sv);class Nv extends hv{apply(e,t=1){return tu(()=>yu(vl(yu(e,t)),e))}}Nv.className="swish",Fo(Nv);class Tv extends hv{apply(e){return tu(()=>yu(e,Il($c(e))))}}function Cv(e){return e.getClassName()}function $v(e,t={}){return My(e,Ro.getMap().classNameMap,t,"activation")}function Ev(e){if(null==e){return $v({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},$v(t)}return e instanceof hv?e:$v(e)}function _v(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}Tv.className="mish",Fo(Tv);class Av extends Ao{}class Rv extends Av{constructor(e){super(),_v(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return tu(()=>{let t=Yc([1]);return this.hasL1&&(t=fu(t,Ac(yu(this.l1,Ou(e))))),this.hasL2&&(t=fu(t,Ac(yu(this.l2,Mb(e))))),yl(t,[])})}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}Rv.className="L1L2",Fo(Rv);const Fv={l1l2:"L1L2"};function Dv(e){return Fy(e)}function Mv(e,t={}){return My(e,Ro.getMap().classNameMap,t,"regularizer")}function Ov(e){return null==e?null:"string"==typeof e?Mv({className:e in Fv?Fv[e]:e,config:{}}):e instanceof Av?e:Mv(e)}class Lv extends Wx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=Ex(e);let n=Ed(e);return null!=this.maxValue&&(n=Dl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}Lv.className="ReLU",Fo(Lv);class zv extends Wx{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ex(e);return wc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}zv.className="LeakyReLU",Fo(zv);class Pv extends Wx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=ox(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=Ov(e.alphaRegularizer),this.alphaConstraint=Qy(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new ky(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=_x(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new Ox({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=Ex(e),gd(e,this.alpha.read())}getConfig(){const e={alphaInitializer:ix(this.alphaInitializer),alphaRegularizer:Dv(this.alphaRegularizer),alphaConstraint:Zy(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}Pv.className="PReLU",Fo(Pv);class Bv extends Wx{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Iy(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=Ex(e);return sc(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}Bv.className="ELU",Fo(Bv);class Wv extends Wx{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=Ex(e);return yu(n,Ai(fc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}Wv.className="ThresholdedReLU",Fo(Wv);class Vv extends Wx{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Iv).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=Ex(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Uv(e,t,n){if("number"==typeof e)return Ny(e,t);if(e.length!==t)throw new ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if(!xb(a))throw new ky(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e}function Gv(e,t,n,r,a=1){if(null==e)return e;let s;return s="same"===n?e:e-(t+(t-1)*(a-1))+1,Math.floor((s+r-1)/r)}function Hv(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+kb([n-t,0]);else{if("same"!==r)throw new ky(`Unsupport padding mode: ${r}.`);e*=t}return e}function jv(e,t){return tu(()=>(cb(t),"channelsFirst"===t?Qi(e,[0,2,3,1]):e))}function qv(e,t){return tu(()=>(cb(t),"channelsFirst"===t?Qi(e,[0,2,3,4,1]):e))}function Kv(e,t,n,r=[1,1],a="valid",s,i,o=null){return tu(()=>{if(null==s&&(s="channelsLast"),cb(s),3!==e.rank&&4!==e.rank)throw new ky(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new ky(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=jv(e,s);if("causal"===a)throw new Iy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Mh({x:u,filter:t,strides:r,pad:"same"===a?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===s&&(u=Qi(u,[0,3,1,2])),u})}Vv.className="Softmax",Fo(Vv);class Xv extends Wx{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Xv.verifyArgs(t),this.rank=e,Wy(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Iy(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=Uv(t.kernelSize,e,"kernelSize"),this.strides=Uv(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,db(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,cb(this.dataFormat),this.activation=Ev(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=ox(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Qy(t.biasConstraint),this.biasRegularizer=Ov(t.biasRegularizer),this.activityRegularizer=Ov(t.activityRegularizer),this.dilationRate=Uv(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new ky(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new ky(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new ky(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(Ty("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!By(e.kernelSize,"number",1,3))throw new ky(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:Cv(this.activation),useBias:this.useBias,biasInitializer:ix(this.biasInitializer),biasRegularizer:Dv(this.biasRegularizer),activityRegularizer:Dv(this.activityRegularizer),biasConstraint:Zy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Yv extends Xv{constructor(e,t){super(e,t),this.kernel=null,Yv.verifyArgs(t),this.filters=t.filters,Wy(this.filters,"filters"),this.kernelInitializer=ox(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Qy(t.kernelConstraint),this.kernelRegularizer=Ov(t.kernelRegularizer)}build(e){e=_x(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return tu(()=>{let t;e=Ex(e);const n=null==this.bias?null:this.bias.read(),r=Uy(this.activation.getClassName());if(null!=r&&2===this.rank)t=Kv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,a="valid",s,i=1){return tu(()=>{if(null==s&&(s="channelsLast"),cb(s),3!==e.shape.length)throw new ky(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new ky(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new ky(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===s&&(e=Qi(e,[0,2,1])),"causal"===a)throw new Iy("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Bl(e,t,r,"same"===a?"same":"valid","NWC",i);return null!=n&&(o=Lb(o,n)),o})}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=Kv(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Iy("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],a="valid",s,i){return tu(()=>{if(null==s&&(s="channelsLast"),cb(s),4!==e.rank&&5!==e.rank)throw new ky(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new ky(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=qv(e,s);if("causal"===a)throw new Iy("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ul(o,t,r,"same"===a?"same":"valid","NDHWC",i),null!=n&&(o=Lb(o,n)),"channelsFirst"===s&&(o=Qi(o,[0,4,1,2,3])),o})}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t})}computeOutputShape(e){e=_x(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=Gv(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:ix(this.kernelInitializer),kernelRegularizer:Dv(this.kernelRegularizer),kernelConstraint:Zy(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new ky(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Zv extends Yv{constructor(e){super(2,e),Zv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!By(e.kernelSize,"number",1,2))throw new ky(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Zv.className="Conv2D",Fo(Zv);class Jv extends Yv{constructor(e){super(3,e),Jv.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new ky(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Jv.className="Conv3D",Fo(Jv);class Qv extends Zv{constructor(e){if(super(e),this.inputSpec=[new Ox({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new ky(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=_x(e)).length)throw new ky("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ox({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return tu(()=>{let t=Ex(e);if(4!==t.shape.length)throw new ky(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s;"channelsFirst"===this.dataFormat?(a=2,s=3):(a=1,s=2);const i=n[a],o=n[s],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],d=this.strides[1],h=[r,Hv(i,c,u,this.padding),Hv(o,d,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qi(t,[0,2,3,1]));let p=Vl(t,this.kernel.read(),h,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(p=Qi(p,[0,3,1,2])),null!=this.bias&&(p=Lb(p,this.bias.read(),this.dataFormat)),null!=this.activation&&(p=this.activation.apply(p)),p})}computeOutputShape(e){const t=(e=_x(e)).slice();let n,r,a;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3):(n=3,r=1,a=2);const s=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=Hv(t[r],o,s,this.padding),t[a]=Hv(t[a],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Qv.className="Conv2DTranspose",Fo(Qv);class ek extends Jv{constructor(e){if(super(e),this.inputSpec=[new Ox({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new ky(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=_x(e)).length)throw new ky("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new ky("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new Ox({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return tu(()=>{let t=Ex(e);if(5!==t.shape.length)throw new ky(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let a,s,i;"channelsFirst"===this.dataFormat?(i=2,a=3,s=4):(i=1,a=2,s=3);const o=n[i],u=n[a],l=n[s],c=this.kernelSize[0],d=this.kernelSize[1],h=this.kernelSize[2],p=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,Hv(o,p,c,this.padding),Hv(u,f,d,this.padding),Hv(l,m,h,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Qi(t,[0,2,3,4,1]));let y=Hl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Qi(y,[0,4,1,2,3])),null!==this.bias&&(y=Lb(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y})}computeOutputShape(e){const t=(e=_x(e)).slice();let n,r,a,s;"channelsFirst"===this.dataFormat?(n=1,r=2,a=3,s=4):(n=4,r=1,a=2,s=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],d=this.strides[2];return t[n]=this.filters,t[r]=Hv(t[r],l,i,this.padding),t[a]=Hv(t[a],c,o,this.padding),t[s]=Hv(t[s],d,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}ek.className="Conv3DTranspose",Fo(ek);class tk extends Yv{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new ky("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new ky("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new ky(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=ox(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=Ov(t.depthwiseRegularizer),this.depthwiseConstraint=Qy(t.depthwiseConstraint),this.pointwiseInitializer=ox(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=Ov(t.pointwiseRegularizer),this.pointwiseConstraint=Qy(t.pointwiseConstraint)}build(e){if((e=_x(e)).length<this.rank+2)throw new ky(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new ky(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),a=[];for(let e=0;e<this.rank;++e)a.push(1);a.push(n*this.depthMultiplier,this.filters);const s=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,s,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",a,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,s,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,s,this.biasConstraint):this.bias=null,this.inputSpec=[new Ox({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return tu(()=>{let t;if(e=Ex(e),1===this.rank)throw new Iy("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Qi(e,[0,2,3,1])),t=Pd(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=Lb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Qi(t,[0,3,1,2])),t})}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=ix(this.depthwiseInitializer),e.pointwiseInitializer=ix(this.pointwiseInitializer),e.depthwiseRegularizer=Dv(this.depthwiseRegularizer),e.pointwiseRegularizer=Dv(this.pointwiseRegularizer),e.depthwiseConstraint=Zy(this.depthwiseConstraint),e.pointwiseConstraint=Zy(this.pointwiseConstraint),e}}tk.className="SeparableConv";class nk extends tk{constructor(e){super(2,e)}}nk.className="SeparableConv2D",Fo(nk);class rk extends Yv{constructor(e){super(1,e),rk.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!By(e.kernelSize,"number",1,1))throw new ky(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}rk.className="Conv1D",Fo(rk);class ak extends Wx{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return tu(()=>{if(e=Ex(e),"channelsLast"===this.dataFormat){const t=$b(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return $b(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=$b(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return $b(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}})}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}ak.className="Cropping2D",Fo(ak);class sk extends Wx{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,cb(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,Py(sb,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return tu(()=>{let t=Ex(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Qi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],a="nearest"===this.interpolation?Dp.resizeNearestNeighbor(t,[e,r]):Dp.resizeBilinear(t,[e,r]);return Qi(a,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Dp.resizeNearestNeighbor(t,[e,r]):Dp.resizeBilinear(t,[e,r])}})}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}sk.className="UpSampling2D",Fo(sk);class ik extends Xv{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=ox(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Qy(e.depthwiseConstraint),this.depthwiseRegularizer=Ov(e.depthwiseRegularizer)}build(e){if((e=_x(e)).length<4)throw new ky(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new ky(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tu(()=>{let t=function(e,t,n=[1,1],r="valid",a,s){return tu(()=>{null==a&&(a="channelsLast"),cb(a);let i=jv(e,a);if(4!==e.rank)throw new ky(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new ky(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Zl(i,t,n,"same"===r?"same":"valid","NHWC",s),"channelsFirst"===a&&(i=Qi(i,[0,3,1,2])),i})}(e=Ex(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=Lb(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t})}computeOutputShape(e){e=_x(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,a=Gv(t,this.kernelSize[0],this.padding,this.strides[0]),s=Gv(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,a,s]:[e[0],a,s,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=ix(this.depthwiseInitializer),e.depthwiseRegularizer=Dv(this.depthwiseRegularizer),e.depthwiseConstraint=Zy(this.depthwiseRegularizer),e}}function ok(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new ky("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function a(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=a(t),constants:n=a(n)}}function uk(e,t,n,r=!1,a,s,i=!1,o=!1){return tu(()=>{const u=t.shape.length;if(u<3)throw new ky(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Ib(2,u));if(t=Qi(t,l),null!=s)throw new Iy("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=a&&((a=Ai(Ai(a,"bool"),"float32")).rank===u-1&&(a=uc(a,-1)),a=Qi(a,l)),r&&(t=Ad(t,0),null!=a&&(a=Ad(a,0)));const c=[];let d,h=n;const p=t.shape[0],f=mh(t);let m,g;null!=a&&(m=mh(a));for(let t=0;t<p;++t){const n=f[t],r=tu(()=>e(n,h));if(null==a)d=r[0],h=r[1];else{const e=tu(()=>{const e=m[t],n=Du(od(e),e);return{output:fu(yu(r[0],e),yu(h[0],n)),newStates:h.map((t,a)=>fu(yu(r[1][a],e),yu(t,n)))}});d=e.output,h=e.newStates}o&&c.push(d)}return o&&(g=nh(c,1)),[d,g,h]})}ik.className="DepthwiseConv2D",Fo(ik);class lk extends Wx{constructor(e){let t;if(super(e),null==e.cell)throw new ky("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new yk({cells:e.cell}):e.cell,null==t.stateSize)throw new ky("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new Ox({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Ib(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map(e=>null):this.states_}setStates(e){this.states_=e}computeOutputShape(e){Cx(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return tu(()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map(e=>null);return[e].concat(t)}return e})}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Iy("Constants support is not implemented in RNN yet.");Cx(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new Ox({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let a;if(this.cell.build(r),a=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!pe(this.stateSpec.map(e=>e.shape[e.shape.length-1]),a))throw new ky(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=a.map(e=>new Ox({shape:[null,e]}));this.stateful&&this.resetStates()}resetStates(e,t=!1){tu(()=>{if(!this.stateful)throw new wy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Yc([n,e])):this.states_=[Yc([n,this.cell.stateSize])];else if(null==e)nu(this.states_),null!=this.keptStates&&(nu(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(e=>Yc([n,e])):this.states_[0]=Yc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):nu(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],a=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,s=[n,a];if(!pe(r.shape,s))throw new ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map(e=>ru(e.clone()))})}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=ok(e,n,r,this.numConstants);e=a.inputs,n=a.initialState,r=a.constants;let s=[],i=[];if(null!=n){t.initialState=n,s=s.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new Ox({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,s=s.concat(r),this.numConstants=r.length),s[0]instanceof Lx){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return tu(()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let a=null==t?null:t.initialState;e=Ex(e),null==a&&(a=this.stateful?this.states_:this.getInitialState(e));const s=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(a.length!==s)throw new ky(`RNN Layer has ${s} state(s) but was passed ${a.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=uk((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]},e,a,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const d=this.returnSequences?l:u;return this.returnState?[d].concat(c):d})}getInitialState(e){return tu(()=>{let t=Yc(e.shape);return t=Ac(t,[1,2]),t=Nb(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map(e=>e>1?Ab(t,[1,e]):t):this.cell.stateSize>1?[Ab(t,[1,this.cell.stateSize])]:[t]})}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===lk.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=nw(t.cell,n);return new e(Object.assign(t,{cell:r}))}}lk.className="RNN",Fo(lk);class ck extends Wx{}class dk extends ck{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wy(this.units,"units"),this.activation=Ev(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ox(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ox(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ox(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ov(e.kernelRegularizer),this.recurrentRegularizer=Ov(e.recurrentRegularizer),this.biasRegularizer=Ov(e.biasRegularizer),this.kernelConstraint=Qy(e.kernelConstraint),this.recurrentConstraint=Qy(e.recurrentConstraint),this.biasConstraint=Qy(e.biasConstraint),this.dropout=vb([1,kb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vb([1,kb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=_x(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tu(()=>{if(2!==e.length)throw new ky(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let a;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bk({ones:()=>od(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bk({ones:()=>od(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;a=Fb(null!=s?yu(e,s):e,this.kernel.read()),null!=this.bias&&(a=Lb(a,this.bias.read())),null!=i&&(n=yu(n,i));let o=fu(a,Fb(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),useBias:this.useBias,kernelInitializer:ix(this.kernelInitializer),recurrentInitializer:ix(this.recurrentInitializer),biasInitializer:ix(this.biasInitializer),kernelRegularizer:Dv(this.kernelRegularizer),recurrentRegularizer:Dv(this.recurrentRegularizer),biasRegularizer:Dv(this.biasRegularizer),activityRegularizer:Dv(this.activityRegularizer),kernelConstraint:Zy(this.kernelConstraint),recurrentConstraint:Zy(this.recurrentConstraint),biasConstraint:Zy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}dk.className="SimpleRNNCell",Fo(dk);class hk extends lk{constructor(e){e.cell=new dk(e),super(e)}call(e,t){return tu(()=>{null!=this.cell.dropoutMask&&(nu(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nu(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return new e(t)}}hk.className="SimpleRNN",Fo(hk);class pk extends ck{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new ky("GRUCell does not support reset_after parameter set to true.");this.units=e.units,Wy(this.units,"units"),this.activation=Ev(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ev(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ox(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ox(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ox(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=Ov(e.kernelRegularizer),this.recurrentRegularizer=Ov(e.recurrentRegularizer),this.biasRegularizer=Ov(e.biasRegularizer),this.kernelConstraint=Qy(e.kernelConstraint),this.recurrentConstraint=Qy(e.recurrentConstraint),this.biasConstraint=Qy(e.biasConstraint),this.dropout=vb([1,kb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vb([1,kb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=_x(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return tu(()=>{if(2!==e.length)throw new ky(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bk({ones:()=>od(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bk({ones:()=>od(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,s=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=yu(e,a[0]));let l=Fb(e,this.kernel.read());this.useBias&&(l=Lb(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yu(r,s[0]));const c=this.recurrentKernel.read(),[d,h]=Jd(c,[2*this.units,this.units],c.rank-1),p=Fb(r,d),[f,m,g]=Jd(l,3,l.rank-1),[y,b]=Jd(p,2,p.rank-1);i=this.recurrentActivation.apply(fu(f,y)),o=this.recurrentActivation.apply(fu(m,b));const x=Fb(yu(o,r),h);u=this.activation.apply(fu(g,x));const w=fu(yu(i,r),yu(fu(1,Cc(i)),u));return[w,w]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),recurrentActivation:Cv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ix(this.kernelInitializer),recurrentInitializer:ix(this.recurrentInitializer),biasInitializer:ix(this.biasInitializer),kernelRegularizer:Dv(this.kernelRegularizer),recurrentRegularizer:Dv(this.recurrentRegularizer),biasRegularizer:Dv(this.biasRegularizer),activityRegularizer:Dv(this.activityRegularizer),kernelConstraint:Zy(this.kernelConstraint),recurrentConstraint:Zy(this.recurrentConstraint),biasConstraint:Zy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}pk.className="GRUCell",Fo(pk);class fk extends lk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new pk(e),super(e)}call(e,t){return tu(()=>{null!=this.cell.dropoutMask&&(nu(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nu(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}fk.className="GRU",Fo(fk);class mk extends ck{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,Wy(this.units,"units"),this.activation=Ev(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=Ev(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=ox(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=ox(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=ox(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=Ov(e.kernelRegularizer),this.recurrentRegularizer=Ov(e.recurrentRegularizer),this.biasRegularizer=Ov(e.biasRegularizer),this.kernelConstraint=Qy(e.kernelConstraint),this.recurrentConstraint=Qy(e.recurrentConstraint),this.biasConstraint=Qy(e.biasConstraint),this.dropout=vb([1,kb([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=vb([1,kb([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=_x(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends Vb{apply(t,r){const a=e.apply([n]),s=(new Gb).apply([n]),i=e.apply([2*n]);return _b(_b(a,s),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return tu(()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new ky(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const a=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bk({ones:()=>od(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bk({ones:()=>od(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=yu(e,s[0]));let d=Fb(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=yu(r,i[0])),d=fu(d,Fb(r,this.recurrentKernel.read())),this.useBias&&(d=Lb(d,this.bias.read()));const[h,p,f,m]=Jd(d,4,d.rank-1);o=this.recurrentActivation.apply(h),u=this.recurrentActivation.apply(p),l=fu(yu(u,a),yu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=yu(c,this.activation.apply(l));return[g,g,l]})}getConfig(){const e=super.getConfig(),t={units:this.units,activation:Cv(this.activation),recurrentActivation:Cv(this.recurrentActivation),useBias:this.useBias,kernelInitializer:ix(this.kernelInitializer),recurrentInitializer:ix(this.recurrentInitializer),biasInitializer:ix(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:Dv(this.kernelRegularizer),recurrentRegularizer:Dv(this.recurrentRegularizer),biasRegularizer:Dv(this.biasRegularizer),activityRegularizer:Dv(this.activityRegularizer),kernelConstraint:Zy(this.kernelConstraint),recurrentConstraint:Zy(this.recurrentConstraint),biasConstraint:Zy(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}mk.className="LSTMCell",Fo(mk);class gk extends lk{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new mk(e),super(e)}call(e,t){return tu(()=>{null!=this.cell.dropoutMask&&(nu(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nu(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}gk.className="LSTM",Fo(gk);class yk extends ck{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return tu(()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const a=[];let s;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],s=0===i?[e[0]].concat(n):[s[0]].concat(n),s=o.call(s,t),a.push(s.slice(1))}n=[];for(const e of a.slice().reverse())n.push(...e);return[s[0]].concat(n)})}build(e){let t;Cx(e)&&(e=e[0]),this.cells.forEach((n,r)=>{fb(`RNNCell_${r}`,()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]})}),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map(e=>({className:e.getClassName(),config:e.getConfig()}))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(nw(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return Dx(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,a=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],a[e]])}Mx(t)}}function bk(e){const{ones:t,rate:n,training:r=!1,count:a=1,dropoutFunc:s}=e,i=()=>null!=s?s(t(),n):zb(t(),n),o=()=>Pb(i,t,r);return!a||a<=1?ru(o().clone()):Array(a).fill(void 0).map(o).map(e=>ru(e.clone()))}yk.className="StackedRNNCells",Fo(yk);class xk extends lk{constructor(e){if(e.unroll)throw new Iy("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Iy("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new Ox({ndim:5})]}call(e,t){return tu(()=>{if(null!=this.cell.dropoutMask&&(nu(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(nu(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new ky("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,a=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:a})})}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return tu(()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),a=Yc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(a):[a]})}resetStates(e,t=!1){tu(()=>{if(!this.stateful)throw new wy("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),a=[r[0],...r.slice(2)];if(null==n[0])throw new ky("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Yc(a)):this.states_=[Yc(a)];else if(null==e)nu(this.states_),null!=this.keptStates&&(nu(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map(()=>Yc(a)):this.states_[0]=Yc(a);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new ky(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):nu(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=a;if(!pe(n.shape,r))throw new ky(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map(e=>ru(e.clone()))})}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:a,strides:s,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=Gv(u,r[0],a,s[0],i[0]),d=Gv(l,r[1],a,s[1],i[1]);return[...e.slice(0,2),...o?[n,c,d]:[c,d,n]]}}xk.className="ConvRNN2D";class wk extends mk{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:a,dataFormat:s,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,Wy(this.filters,"filters"),this.kernelSize=Uv(n,2,"kernelSize"),this.kernelSize.forEach(e=>Wy(e,"kernelSize")),this.strides=Uv(r||1,2,"strides"),this.strides.forEach(e=>Wy(e,"strides")),this.padding=a||"valid",db(this.padding),this.dataFormat=s||"channelsLast",cb(this.dataFormat),this.dilationRate=Uv(i||1,2,"dilationRate"),this.dilationRate.forEach(e=>Wy(e,"dilationRate"))}build(e){var t;e=_x(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new ky(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],a=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",a,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const s=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",s,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends Vb{apply(e,t){return Eb([n.apply([r]),Zc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return tu(()=>{if(3!==e.length)throw new ky(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],a=e[1],s=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=bk({ones:()=>od(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?yu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),d=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=bk({ones:()=>od(a),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const h=this.recurrentDropoutMask;let p=o(a,h,0),f=o(a,h,1),m=o(a,h,2),g=o(a,h,3);const[y,b,x,w]=Jd(this.kernel.read(),4,3),[v,k,I,S]=this.useBias?Jd(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),d=this.inputConv(d,w,S,this.padding);const[N,T,C,$]=Jd(this.recurrentKernel.read(),4,3);p=this.recurrentConv(p,N),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(fu(u,p)),_=this.recurrentActivation.apply(fu(l,f)),A=fu(yu(_,s),yu(E,this.activation.apply(fu(c,m)))),R=yu(this.recurrentActivation.apply(fu(d,g)),this.activation.apply(A));return[R,R,A]})}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var a=0;for(r=Object.getOwnPropertySymbols(e);a<r.length;a++)t.indexOf(r[a])<0&&Object.prototype.propertyIsEnumerable.call(e,r[a])&&(n[r[a]]=e[r[a]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const a=Pl(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?Lb(a,n,this.dataFormat):a}recurrentConv(e,t){return Pl(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}wk.className="ConvLSTM2DCell",Fo(wk);class vk extends xk{constructor(e){const t=new wk(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}vk.className="ConvLSTM2D",Fo(vk);class kk extends Wx{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return Pb(()=>zb(n,this.rate,r,this.seed),()=>n,e)}return e})}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}kk.className="Dropout",Fo(kk);class Ik extends kk{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Ik.className="SpatialDropout1D",Fo(Ik);class Sk extends Wx{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,Wy(this.units,"units"),this.activation=Ev(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=ox(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=ox(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Qy(e.kernelConstraint),this.biasConstraint=Qy(e.biasConstraint),this.kernelRegularizer=Ov(e.kernelRegularizer),this.biasRegularizer=Ov(e.biasRegularizer),this.activityRegularizer=Ov(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=_x(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=_x(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e),r=Uy(this.activation.getClassName());let a;return null!=r?a=Fb(n,this.kernel.read(),r,this.bias?this.bias.read():null):(a=Fb(n,this.kernel.read()),null!=this.bias&&(a=Lb(a,this.bias.read())),null!=this.activation&&(a=this.activation.apply(a))),a})}getConfig(){const e={units:this.units,activation:Cv(this.activation),useBias:this.useBias,kernelInitializer:ix(this.kernelInitializer),biasInitializer:ix(this.biasInitializer),kernelRegularizer:Dv(this.kernelRegularizer),biasRegularizer:Dv(this.biasRegularizer),activityRegularizer:Dv(this.activityRegularizer),kernelConstraint:Zy(this.kernelConstraint),biasConstraint:Zy(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Sk.className="Dense",Fo(Sk);class Nk extends Wx{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=_x(e);for(const t of e.slice(1))if(null==t)throw new ky(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],wb(e,1)]}call(e,t){return tu(()=>{this.invokeCallHook(e,t);let n=Ex(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Qi(n,e)}return function(e){if(e.rank<=1)throw new ky(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],wb(e.shape,1)];return yl(e,t)}(n)})}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Nk.className="Flatten",Fo(Nk);class Tk extends Wx{constructor(e){super(e),this.supportsMasking=!0,this.activation=Ev(e.activation)}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e);return this.activation.apply(n)})}getConfig(){const e={activation:Cv(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}Tk.className="Activation",Fo(Tk);class Ck extends Wx{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return tu(()=>{return e=Ex(e),t=e,n=this.n,tu(()=>{if(2!==t.shape.length)throw new ky(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return Ab(Nb(t,1),[1,n,1])});var t,n})}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}Ck.className="RepeatVector",Fo(Ck);class $k extends Wx{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let a=1,s=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==s)throw new ky("Can only specifiy one unknown dimension.");s=e}else a*=t}const i=wb(e);if(null!==s){if(0===a||i%a!==0)throw new ky(n);r[s]=i/a}else if(i!==a)throw new ky(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e),r=n.shape,a=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return yl(n,a)})}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}$k.className="Reshape",Fo($k);class Ek extends Wx{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Ib(1,e.dims.length+1);if(!pe(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new Ox({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=_x(e)).slice();return this.dims.forEach((n,r)=>{t[r+1]=e[n]}),t}call(e,t){return Qi(Ex(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}Ek.className="Permute",Fo(Ek);class _k extends Wx{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=Ex(e);return Yu(id(n,this.maskValue),-1)}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e),r=Yu(id(n,this.maskValue),-1,!0);return yu(n,Ai(r,n.dtype))})}}_k.className="Masking",Fo(_k);class Ak extends Wx{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(Ey(e.inputLength))}this.inputDim=e.inputDim,Wy(this.inputDim,"inputDim"),this.outputDim=e.outputDim,Wy(this.outputDim,"outputDim"),this.embeddingsInitializer=ox(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=Ov(e.embeddingsRegularizer),this.activityRegularizer=Ov(e.activityRegularizer),this.embeddingsConstraint=Qy(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return tu(()=>this.maskZero?(e=Ex(e),id(e,wu(e))):null)}computeOutputShape(e){if(e=_x(e),null==this.inputLength)return[...e,this.outputDim];const t=Ey(this.inputLength);if(t.length!==e.length-1)throw new ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const a=t[r],s=e[r+1];if(null!=a&&null!=s&&a!==s)throw new ky(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==a&&(t[n]=s),n++}}return[e[0],...t,this.outputDim]}call(e,t){return tu(()=>{this.invokeCallHook(e,t);let n=Ex(e);"int32"!==n.dtype&&(n=Sb(n,"int32"));const r=Db(this.embeddings.read(),yl(n,[n.size]));return yl(r,_x(this.computeOutputShape(n.shape)))})}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:ix(this.embeddingsInitializer),embeddingsRegularizer:Dv(this.embeddingsRegularizer),activityRegularizer:Dv(this.activityRegularizer),embeddingsConstraint:Zy(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}Ak.className="Embedding",Fo(Ak);class Rk extends Wx{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Iy}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const a=e[e.length-t.length+r],s=t[r];if(null==a||null==s||a<0||s<0)n.push(null);else if(1===a)n.push(s);else if(1===s)n.push(a);else{if(a!==s)throw new ky("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(a)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[_x(e)]),e.length<2)throw new ky(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=Ly(t),t.length>1)throw new ky(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map(e=>e.length);-1===e.indexOf(null)&&1===Ly(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return tu(()=>{if(this.reshapeRequired){const t=[],n=e.map(e=>e.rank);if(-1===n.indexOf(null)){const r=kb(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=Nb(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,a=e[0],s=e.slice(1).concat([a]);let i=yl(r,[a].concat(wb(e.slice(1))));i=Qi(i,[1,0]),i=yl(i,s),t.push(i),n=!0}else if(e>1){const a=Ib(1,e).concat([0]);t.push(Qi(r,a)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const a=r.rank;if(n)if(null==a){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=yl(Qi(yl(r,[-1,t]),[1,0]),n)}else if(a>1){const e=[a-1].concat(Ib(0,a-1));r=Qi(r,e)}return r}}return this.mergeFunction(e)})}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=Ly(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return tu(()=>{if(null==t)return null;if(!Array.isArray(t))throw new ky("`mask` should be an Array");if(!Array.isArray(e))throw new ky("`inputs` should be an Array");if(t.length!==e.length)throw new ky(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every(e=>null==e))return null;let n=(t=t.map(e=>null==e?e:uc(e,0)))[0];for(let e=1;e<t.length-1;++e)n=Vc(n,t[e]);return n})}}class Fk extends Rk{constructor(e){super(e)}mergeFunction(e){return tu(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fu(t,e[n]);return t})}}Fk.className="Add",Fo(Fk);class Dk extends Rk{constructor(e){super(e)}mergeFunction(e){return tu(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=yu(t,e[n]);return t})}}Dk.className="Multiply",Fo(Dk);class Mk extends Rk{constructor(e){super(e)}mergeFunction(e){return tu(()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=fu(t,e[n]);return yu(1/e.length,t)})}}Mk.className="Average",Fo(Mk);class Ok extends Rk{constructor(e){super(e)}mergeFunction(e){return tu(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Bu(t,e[n]);return t})}}Ok.className="Maximum",Fo(Ok);class Lk extends Rk{constructor(e){super(e)}mergeFunction(e){return tu(()=>{let t=e[0];for(let n=1;n<e.length;++n)t=ed(t,e[n]);return t})}}Lk.className="Minimum",Fo(Lk);class zk extends Rk{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new ky("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let a=!1;for(const e of n)if(pe(e,r)){a=!0;break}a||n.push(r)}if(n.length>1)throw new ky("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return tu(()=>Eb(e,this.axis))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new ky("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new ky("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new ky("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new ky(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return tu(()=>{let n=!0;if(t.forEach(e=>{null==e||(n=!1)}),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ai(od(e[n]),"bool")):t[n].rank<e[n].rank?r.push(uc(t[n],-1)):r.push(t[n]);const a=wl(r,this.axis);return Xu(a,-1,!1)})}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function Pk(e,t){for(;e<0;)e+=t;return e}zk.className="Concatenate",Fo(zk);class Bk extends Rk{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Iy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new ky(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new ky(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map((t,n)=>Pk(t,e[n].shape.length)):[Pk(this.axes,n.shape.length),Pk(this.axes,r.shape.length)],this.normalize&&(n=rw(n,t[0]),r=rw(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Iy("batchDot is not implemented for tensors of 4D or higher rank yet");if(oe(e.shape.length>=2,()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`),oe(e.shape.length>=2,()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Iy("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,a=t.shape.length;null==n&&(n=[r-1,a-2]);const s=n;return tu(()=>{let n,i;if(r>a){n=r-a;const e=[];for(let t=0;t<n;++t)e.push(1);t=yl(t,t.shape.concat(e))}else if(a>r){n=a-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=yl(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=s[0]===s[1]?Ac(yu(e,t),s[0]):Ac(yu(Qi(e,[1,0]),t),s[1]);else{const n=s[0]!==e.shape.length-1,r=s[1]===t.shape.length-1;i=Zi(e,t,n,r)}if(n>0){let e;e=r>a?r+a-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=th(i,t)}return 1===i.shape.length&&(i=uc(i,1)),i})}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[Pk(this.axes,e.length),Pk(this.axes,t.length)],n}computeOutputShape(e){oe(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),()=>"A `Dot` layer should be called on a list of exactly 2 inputs.");const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Iy("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const a=t.concat(n);return 1===a.length&&a.push(1),a}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}Bk.className="Dot",Fo(Bk);class Wk extends Wx{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e);return Pb(()=>fu(Rb(n.shape,0,this.stddev),n),()=>n,t.training||!1)})}}Wk.className="GaussianNoise",Fo(Wk);class Vk extends Wx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tu(()=>{this.invokeCallHook(e,t);const n=Ex(e);return this.rate>0&&this.rate<1?Pb(()=>{const e=Math.sqrt(this.rate/(1-this.rate));return yu(n,Rb(n.shape,1,e))},()=>n,t.training||!1):n})}}Vk.className="GaussianDropout",Fo(Vk);class Uk extends Wx{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||Ex(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return tu(()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=Ex(e),r=-1.7580993408473766;let a=mc(Nd(n),this.rate);a=Sb(a,"float32");const s=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-s*r*this.rate,o=fu(yu(t,a),yu(fu(a,-1),r));return fu(yu(o,s),i)};return Pb(r,()=>Ex(e),t.training||!1)}return e})}}function Gk(e,t,n,r,a,s=.001){let i;if(2===e.rank)i=Cl(e,t,n,r,a,s);else if(3===e.rank)i=$l(e,t,n,r,a,s);else{if(4!==e.rank)throw new Iy(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=El(e,t,n,r,a,s)}return i}Uk.className="AlphaDropout",Fo(Uk);class Hk extends Wx{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ox(e.betaInitializer||"zeros"),this.gammaInitializer=ox(e.gammaInitializer||"ones"),this.movingMeanInitializer=ox(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=ox(e.movingVarianceInitializer||"ones"),this.betaConstraint=Qy(e.betaConstraint),this.gammaConstraint=Qy(e.gammaConstraint),this.betaRegularizer=Ov(e.betaRegularizer),this.gammaRegularizer=Ov(e.gammaRegularizer)}build(e){e=_x(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new ky(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new Ox({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return tu(()=>{const n=null!=t.training&&t.training,r=Ex(e),a=r.shape,s=a.length,i=Ib(0,s),o=this.axis>=0?this.axis:this.axis+s;i.splice(o,1);const u=Ny(1,s);u[o]=a[o];const l=i.slice();l.sort();const c=!pe(l,Ib(0,s).slice(0,s-1));if(!n)return(()=>{if(c){const e=yl(this.movingMean.read(),u),t=yl(this.movingVariance.read(),u),n=this.center?yl(this.beta.read(),u):null,a=this.scale?yl(this.gamma.read(),u):null;return Gk(r,e,t,n,a,this.epsilon)}return Gk(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[d,h,p]=function(e,t,n,r,a=.001){return pe(r.slice().sort(),Ib(0,e.rank-1))?function(e,t,n,r,a=.001){return tu(()=>{const s=rd(e,r),i=s.mean,o=s.variance;return[Gk(e,i,o,n,t,a),i,o]})}(e,t,n,r,a):function(e,t,n,r,a=.001){return tu(()=>{const s=rd(e,r),i=s.mean,o=s.variance,u=[];for(const t of Ib(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=yl(i,u),c=yl(o,u),d=null==t?null:yl(t,u),h=null==n?null:yl(n,u);return[Gk(e,l,c,h,d,a),i,o]})}(e,t,n,r,a)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{tu(()=>{const r=1-n,a=e.read(),s=yu(Du(a,t),r);e.write(Du(a,s))})};return(()=>{f(this.movingMean,h,this.momentum),f(this.movingVariance,p,this.momentum)})(),d})}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ix(this.betaInitializer),gammaInitializer:ix(this.gammaInitializer),movingMeanInitializer:ix(this.movingMeanInitializer),movingVarianceInitializer:ix(this.movingVarianceInitializer),betaRegularizer:Dv(this.betaRegularizer),gammaRegularizer:Dv(this.gammaRegularizer),betaConstraint:Zy(this.betaConstraint),gammaConstraint:Zy(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Hk.className="BatchNormalization",Fo(Hk);class jk extends Wx{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=ox(e.betaInitializer||"zeros"),this.gammaInitializer=ox(e.gammaInitializer||"ones"),this.betaRegularizer=Ov(e.betaRegularizer),this.gammaRegularizer=Ov(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=_x(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==Ly(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map(t=>e[t]),r=!0;this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,r):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,r):this.beta=null,this.built=!0}call(e,t){const n=Ex(e),r=n.shape,a=r.length;return tu(()=>{let{mean:e,variance:t}=rd(n,this.axis,!0);const s=Ny(1,a);for(const e of this.axis)s[e]=r[e];const i=e=>null!=e&&e.shape.length!==a?yl(e,s):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<a;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=cc(e,l),t=cc(t,l),o=cc(o,c),u=cc(u,c),Gk(n,e,t,u,o,this.epsilon)})}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:ix(this.betaInitializer),gammaInitializer:ix(this.gammaInitializer),betaRegularizer:Dv(this.betaRegularizer),gammaRegularizer:Dv(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}jk.className="LayerNormalization",Fo(jk);class qk extends Wx{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new ky(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new ky(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new ky(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new Ox({ndim:4})]}computeOutputShape(e){let t,n;return e=_x(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return tu(()=>{return t=Ex(e),n=this.padding,r=this.dataFormat,tu(()=>{if(4!==t.rank)throw new ky(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new ky("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new ky(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],ld(t,e)});var t,n,r})}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function Kk(e,t,n,r,a,s){return tu(()=>{let i;cb(a),hb(s),db(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=jv(e,a);const o="same"===r?"same":"valid";return i="max"===s?jc(e,t,n,o):bl(e,t,n,o),"channelsFirst"===a&&(i=Qi(i,[0,3,1,2])),i})}function Xk(e,t,n,r,a,s){return tu(()=>{let i;cb(a),hb(s),db(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==a&&(a="channelsLast"),null==s&&(s="max"),e=qv(e,a);const o="same"===r?"same":"valid";return i="max"===s?qc(e,t,n,o):xl(e,t,n,o),"channelsFirst"===a&&(i=Qi(i,[0,4,1,2,3])),i})}qk.className="ZeroPadding2D",Fo(qk);class Yk extends Wx{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new ky(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(Wy(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new ky(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}Wy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,db(this.padding),this.inputSpec=[new Ox({ndim:3})]}computeOutputShape(e){const t=Gv((e=_x(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return tu(()=>{this.invokeCallHook(e,t),e=Nb(Ex(e),2);const n=this.poolingFunction(Ex(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return th(n,[2])})}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Zk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Kk(e,t,n,r,a,"max")}}Zk.className="MaxPooling1D",Fo(Zk);class Jk extends Yk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Kk(e,t,n,r,a,"avg")}}Jk.className="AveragePooling1D",Fo(Jk);class Qk extends Wx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new ky(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];Wy(this.poolSize,"poolSize"),Wy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,cb(this.dataFormat),db(this.padding),this.inputSpec=[new Ox({ndim:4})]}computeOutputShape(e){e=_x(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=Gv(t,this.poolSize[0],this.padding,this.strides[0]),n=Gv(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return tu(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ex(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class eI extends Qk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Kk(e,t,n,r,a,"max")}}eI.className="MaxPooling2D",Fo(eI);class tI extends Qk{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Kk(e,t,n,r,a,"avg")}}tI.className="AveragePooling2D",Fo(tI);class nI extends Wx{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new ky(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];Wy(this.poolSize,"poolSize"),Wy(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,cb(this.dataFormat),db(this.padding),this.inputSpec=[new Ox({ndim:5})]}computeOutputShape(e){e=_x(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=Gv(t,this.poolSize[0],this.padding,this.strides[0]),n=Gv(n,this.poolSize[1],this.padding,this.strides[1]),r=Gv(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return tu(()=>(this.invokeCallHook(e,t),this.poolingFunction(Ex(e),this.poolSize,this.strides,this.padding,this.dataFormat)))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class rI extends nI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Xk(e,t,n,r,a,"max")}}rI.className="MaxPooling3D",Fo(rI);class aI extends nI{constructor(e){super(e)}poolingFunction(e,t,n,r,a){return cb(a),db(r),Xk(e,t,n,r,a,"avg")}}aI.className="AveragePooling3D",Fo(aI);class sI extends Wx{constructor(e){super(e),this.inputSpec=[new Ox({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Iy}}class iI extends sI{constructor(e){super(e||{})}call(e,t){return tu(()=>{const t=Ex(e);return Xc(t,1)})}}iI.className="GlobalAveragePooling1D",Fo(iI);class oI extends sI{constructor(e){super(e||{})}call(e,t){return tu(()=>{const t=Ex(e);return _c(t,1)})}}oI.className="GlobalMaxPooling1D",Fo(oI);class uI extends Wx{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,cb(this.dataFormat),this.inputSpec=[new Ox({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Iy}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class lI extends uI{call(e,t){return tu(()=>{const t=Ex(e);return"channelsLast"===this.dataFormat?Xc(t,[1,2]):Xc(t,[2,3])})}}lI.className="GlobalAveragePooling2D",Fo(lI);class cI extends uI{call(e,t){return tu(()=>{const t=Ex(e);return"channelsLast"===this.dataFormat?_c(t,[1,2]):_c(t,[2,3])})}}cI.className="GlobalMaxPooling2D",Fo(cI);class dI extends Wx{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=nw(t.layer,n);delete t.layer;const a={layer:r};return Object.assign(a,t),new e(a)}}class hI extends dI{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=_x(e)).length<3)throw new ky(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=_x(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return tu(()=>uk((e,n)=>[Ex(this.layer.call(e,t)),[]],e=Ex(e),[],!1,null,null,!1,!0)[1])}}hI.className="TimeDistributed",Fo(hI);class pI extends dI{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=nw(n),t.goBackwards=!0!==t.goBackwards;const r={};var a;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=nw(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,a=this.mergeMode,Py(ub,"BidirectionalMergeMode",a),e.weights)throw new Iy("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,a=this.forwardLayer.computeOutputShape(e);return Array.isArray(a)&&Array.isArray(a[0])||(a=[a]),this.returnState?(r=a.slice(1),t=a[0]):t=a[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):$y(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const a=ok(e,n,r,this.numConstants);if(e=a.inputs,n=a.initialState,r=a.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const s=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new ky("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,s.push(...n);const r=n.map(e=>new Ox({shape:e.shape}));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Iy("Support for constants in Bidirectional layers is not implemented yet.");const o=s[0]instanceof Lx;for(const e of s)if(e instanceof Lx!==o)throw new ky("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(s),r=this.inputSpec.concat(i),a=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=a,o}return super.apply(e,t)}call(e,t){return tu(()=>{const n=t.initialState;let r,a,s,i;if(null==n)r=this.forwardLayer.call(e,t),a=this.backwardLayer.call(e,t);else{const s=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:s})),a=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(s=r.slice(1).concat(a.slice(1))),r=r[0],a=a[0]),this.returnSequences&&(a=Ad(a,1)),"concat"===this.mergeMode?i=Eb([r,a]):"sum"===this.mergeMode?i=fu(r,a):"ave"===this.mergeMode?i=yu(.5,fu(r,a)):"mul"===this.mergeMode?i=yu(r,a):null==this.mergeMode&&(i=[r,a]),this.returnState?null==this.mergeMode?i.concat(s):[i].concat(s):i})}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){fb(this.forwardLayer.name,()=>{this.forwardLayer.build(e)}),fb(this.backwardLayer.name,()=>{this.backwardLayer.build(e)}),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map(e=>null);return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=nw(t.layer);if(delete t.layer,null!=t.numConstants)throw new Iy("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function fI(e){return new Ux(e)}function mI(e){return new Bv(e)}function gI(e){return new Lv(e)}function yI(e){return new zv(e)}function bI(e){return new Pv(e)}function xI(e){return new Vv(e)}function wI(e){return new Wv(e)}function vI(e){return new rk(e)}function kI(e){return new Zv(e)}function II(e){return new Qv(e)}function SI(e){return new Jv(e)}function NI(e){return new ek(e)}function TI(e){return new nk(e)}function CI(e){return new ak(e)}function $I(e){return new sk(e)}function EI(e){return new ik(e)}function _I(e){return new Tk(e)}function AI(e){return new Sk(e)}function RI(e){return new kk(e)}function FI(e){return new Ik(e)}function DI(e){return new Nk(e)}function MI(e){return new Ck(e)}function OI(e){return new $k(e)}function LI(e){return new Ek(e)}function zI(e){return new Ak(e)}function PI(e){return new Fk(e)}function BI(e){return new Mk(e)}function WI(e){return new zk(e)}function VI(e){return new Ok(e)}function UI(e){return new Lk(e)}function GI(e){return new Dk(e)}function HI(e){return new Bk(e)}function jI(e){return new Hk(e)}function qI(e){return new jk(e)}function KI(e){return new qk(e)}function XI(e){return new Jk(e)}function YI(e){return XI(e)}function ZI(e){return XI(e)}function JI(e){return new tI(e)}function QI(e){return JI(e)}function eS(e){return JI(e)}function tS(e){return new aI(e)}function nS(e){return tS(e)}function rS(e){return tS(e)}function aS(e){return new iI(e)}function sS(e){return new lI(e)}function iS(e){return new oI(e)}function oS(e){return new cI(e)}function uS(e){return new Zk(e)}function lS(e){return new eI(e)}function cS(e){return new rI(e)}function dS(e){return new fk(e)}function hS(e){return new pk(e)}function pS(e){return new gk(e)}function fS(e){return new mk(e)}function mS(e){return new hk(e)}function gS(e){return new dk(e)}function yS(e){return new vk(e)}function bS(e){return new wk(e)}function xS(e){return new lk(e)}function wS(e){return new yk(e)}function vS(e){return new pI(e)}function kS(e){return new hI(e)}pI.className="Bidirectional",Fo(pI);const IS=iS,SS=oS,NS=uS,TS=lS;function CS(e){return new Wk(e)}function $S(e){return new Vk(e)}function ES(e){return new Uk(e)}function _S(e){return new _k(e)}function AS(e,t){return pw(e,t)}function RS(e,t){return yw(e,t)}function FS(e,t){return bw(e,t)}function DS(e,t){return fw(e,t)}function MS(e,t){return xw(e,t)}function OS(e,t){return gw(e,t)}function LS(e,t){return function(e,t){return tu(()=>{const n=mw(e,t),r=function(e,t){return tu(()=>Ai(Ac(Vc(ec(e,1),ec(t,0))),"float32"))}(e,t),a=fu(n,r);return Ai(tc(fc(a,0),gu(n,a),0),"float32")})}(e,t)}function zS(e,t){return cw(e,t)}function PS(e,t){return sw(e,t)}function BS(e,t){return iw(e,t)}function WS(e,t){return iw(e,t)}function VS(e,t){return iw(e,t)}function US(e,t){return aw(e,t)}function GS(e,t){return aw(e,t)}function HS(e,t){return aw(e,t)}function jS(e){return new Rv(e)}function qS(e){return _v(t=e),new Rv({l1:null!=t?t.l1:null,l2:0});var t}function KS(e){return _v(t=e),new Rv({l2:null!=t?t.l2:null,l1:0});var t}class XS extends Kx{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof rv))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function YS(e,t){return e<t}function ZS(e,t){return e>t}class JS extends XS{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Iy("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=YS:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=ZS:this.monitorFunc=YS,this.monitorFunc===YS&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===YS?1/0:-1/0}async onEpochEnd(e,t){await Hx(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const QS={earlyStopping:function(e){return new JS(e)}};var eN,tN=n(391);function nN(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(a.recurse){if(oN(e)){const a=Array.isArray(e)?[]:{};r.add(e);for(const s in e){const i=nN(e[s],t,n,r);a[s]=i}return r.delete(e),e.__proto__&&(a.__proto__=e.__proto__),a}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,a.value),a.value}function rN(e,t=sN){return aN(e,t)}function aN(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const a=t(e);if(a.recurse&&null!==a.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(a.recurse){if(oN(r)){const a=Array.isArray(r)?[]:{};n.add(r);for(const s in r){const r=aN(e.map(e=>e[s]),t,n);a[s]=r}return n.delete(r),a}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return a.value}function sN(e){return null===e?null:oN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function iN(e,t){const n=new Map;nN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(je(t)){const r=await t;n.set(e,r)}}return nN(e,t,n)}function oN(e){let t=!1;if(Je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(551);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Ja)&&!(e instanceof Promise)&&!t)}function uN(e){return e instanceof Ja?{value:e.clone(),recurse:!1}:oN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class lN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class cN extends lN{constructor(){super(cN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function dN(e){return new fN(e)}function hN(e){return new mN(e)}cN.INITIAL_CAPACITY=32;class pN{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new kN(this,e)}filter(e){return new wN(this,e)}map(e){return new vN(this,e)}mapAsync(e){return new IN(this,e)}serialMapAsync(e){return new IN(this,e).serial()}flatmap(e){return new NN(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile(e=>!0===e)}rowMajorBatch(e,t=!0){return new xN(this,e,t)}columnMajorBatch(e,t=!0,n=sN){return this.rowMajorBatch(e,t).map(e=>rN(e,n))}concatenate(e,t){return new TN(dN([this,e]),t)}take(e){return e<0||null==e?this:new bN(this,e)}skip(e){return e<0||null==e?this:new yN(this,e)}prefetch(e){return new $N(this,e)}shuffle(e,t){return new EN(this,e,t)}serial(){return new gN(this)}}class fN extends pN{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return nN(e,t)}(t,uN)),done:!1};var t}}class mN extends pN{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class gN extends pN{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){return this.upstream.next()}}class yN extends pN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;nu(e.value)}return this.upstream.next()}}class bN extends pN{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class xN extends pN{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class wN extends pN{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;nu(e.value)}}}class vN extends pN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=hs(e.value),n=this.transform(e.value),r=hs(n);for(const e of t)ds(e,r)||e.dispose();return{value:n,done:!1}}}class kN extends pN{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class IN extends pN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=hs(e.value),n=await this.transform(e.value),r=hs(n);for(const e of t)ds(e,r)||e.dispose();return{value:n,done:!1}}}class SN extends pN{constructor(){super(),this.outputQueue=new cN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class NN extends SN{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=hs(e.value),n=this.transform(e.value),r=hs(n);this.outputQueue.pushAll(n);for(const e of t)ds(e,r)||e.dispose();return!0}}class TN extends pN{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(eN||(eN={}));class CN extends pN{constructor(e,t=eN.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await iN(this.iterators,function(e){return e instanceof pN?{value:e.next().then(e=>(t++,e.done&&n++,e.value)),recurse:!1}:{value:null,recurse:!0}});if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case eN.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case eN.SHORTEST:return{value:null,done:!0};case eN.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class $N extends pN{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new lN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class EN extends $N{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=tN.alea(n||Oa().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then(()=>this.serialNext()),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class _N{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return oe(e>0,()=>`batchSize needs to be positive, but it is\n      ${e}`),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),AN(async()=>(await n.iterator()).columnMajorBatch(e,t,DN),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,AN(async()=>(await t.iterator()).concatenate(await e.iterator()),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,AN(async()=>(await t.iterator()).filter(t=>tu(()=>e(t))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return AN(async()=>(await t.iterator()).map(t=>tu(()=>e(t))),this.size)}mapAsync(e){const t=this;return AN(async()=>(await t.iterator()).mapAsync(e),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return AN(async()=>(await t.iterator()).prefetch(e),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,AN(async()=>{return n=hN(async()=>({value:await t.iterator(),done:!1})).take(e),new TN(n,r);var n,r},n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,AN(async()=>(await t.iterator()).skip(e),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,a=tN.alea(t||Oa().toString());return AN(async()=>{let t=a.int32();return n&&(t+=a.int32()),(await r.iterator()).shuffle(e,t.toString())},this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,AN(async()=>(await t.iterator()).take(e),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function AN(e,t=null){return new class extends _N{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function RN(e){return AN(async()=>dN(e),e.length)}function FN(e){if(!oN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return AN(async()=>function(e,t=eN.FAIL){return new CN(e,t)}(await iN(e,e=>{if(e instanceof _N)return{value:e.iterator(),recurse:!1};if(oN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")}),eN.SHORTEST),t)}function DN(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Ja||$e(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Ja?nh(e):Ds(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}_N.MAX_BUFFER_SIZE=1e4;class MN extends _N{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map(e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e))}}const ON='"',LN=Symbol("out"),zN=Symbol("field"),PN=Symbol("quote"),BN=Symbol("quoteafterquote"),WN=Symbol("quoteinquote");class VN extends _N{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new MN(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(oe(null==t.delimiter,()=>"Delimiter should not be provided when delimWhitespace is true."),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&oe(e.length===this.fullColumnNames.length,()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+")."),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce((e,t)=>(e[t]=e[t]+1||1,e),{}),n=Object.keys(t).filter(e=>t[e]>1);if(oe(0===n.length,()=>"Duplicate column names found: "+n.toString()),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map(e=>this.makeDataElement(e))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let a=0;a<this.fullColumnNames.length;a++){const s=this.fullColumnNames[a],i=this.columnConfigs?this.columnConfigs[s]:null;if(!this.configuredColumnsOnly||i){const o=t[a];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${s} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[s]=u:n[s]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const a=e.length;let s=LN;for(let t=0;t<a;t++)switch(s){case LN:switch(e.charAt(t)){case ON:r=t+1,s=PN;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),s=LN;break;default:s=zN,r=t}break;case zN:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),s=LN,r=t+1);break;case PN:e.charAt(t)===ON&&(s=BN);break;case BN:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),s=LN,r=t+1;break;case ON:s=PN;break;default:s=WN}break;case WN:e.charAt(t)===ON&&(s=PN)}if(s===BN?n.push(e.substring(r,a-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class UN extends pN{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(Je().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new UN(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise(r=>{const a=setInterval(()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(a),r({freqDataQueue:e,timeDataQueue:t}))},this.fftSize/this.sampleRateHz*1e3)})}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach((e,r)=>n.set(e,r*t)),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(de(t));return n.set(e,n.length-e.length),Ds(n,t)}}class GN extends pN{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=ih([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,a=n+e,s=t+r;this.cropBox=oh([r,n,s,a],[1,4])}else this.cropBox=oh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(Je().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new GN(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&oe("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`);try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise(e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}})}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=io(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return tu(()=>{const t=uc(Ai(e,"float32"),0);let n;n=Dp.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return yl(n,r.slice(1))})}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach(e=>e.stop());try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class HN{}class jN extends pN{split(e){return new qN(this,e)}}class qN extends jN{constructor(e,t){super(),this.upstream=e,this.impl=new KN(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class KN extends SN{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class XN extends pN{decodeUTF8(){return new YN(this)}}class YN extends jN{constructor(e){super(),this.upstream=e,this.impl=new ZN(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class ZN extends SN{constructor(e){if(super(),this.upstream=e,Je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(530);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=Je().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class JN extends XN{constructor(e,t={}){super(),this.file=e,this.options=t,oe(e instanceof Uint8Array||!!Je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),()=>"FileChunkIterator only supports File, Blob and Uint8Array right now."),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let a=r.result;if(a instanceof ArrayBuffer&&(a=new Uint8Array(a)),!(a instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(a)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const a=this.file.slice(this.offset,n);r.readAsArrayBuffer(a)}this.offset=n});return{value:await e,done:!1}}}function QN(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class eT extends HN{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(QN(this.input)&&Je().get("IS_NODE")){const e=n(108);this.input=e.readFileSync(this.input.substr(7))}return new JN(this.input,this.options)}}class tT extends HN{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return QN(this.url)?new eT(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,a;var s;"string"==typeof e?r=e:(r=e.url,a={method:(s=e).method,headers:s.headers,body:s.body,mode:s.mode,credentials:s.credentials,cache:s.cache,redirect:s.redirect,referrer:s.referrer,integrity:s.integrity});const i=await(n||La)(r,a);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new JN(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function nT(e,t={}){return new VN(new tT(e),t)}function rT(e){const t=hN(e);return AN(async()=>t)}function aT(e){return AN(async()=>{const t=await e();return hN(()=>t.next())})}async function sT(e,t){return GN.create(e,t)}async function iT(e){return UN.create(e)}const oT="3.11.0";function uT(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&oe("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the CPU backend.`)})}const lT=yh;class cT extends Z{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new Y(this,Jo())}nextDataId(){return cT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,Je().get("IS_NODE")&&qe("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ae(n[0])){const a=n.map(e=>za(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,a){this.data.set(e,{values:t,dtype:r,refCount:a})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?of(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Pa(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return _i(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Jo().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Oa();return e(),{kernelMs:Oa()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){uT([e],"where");const t=this.readSync(e.dataId);return lT(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function dT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(uT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=de(i.shape),c=n||i.dtype,d=Se(c,l);for(let e=0;e<l;++e)d[e]=t(u[e],a);return o.makeTensorInfo(i.shape,c,d)}}function hT(e,t,n){return({inputs:r,attrs:a,backend:s})=>{const{x:i}=r;if(uT(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=s,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,a);return o.makeTensorInfo(i.shape,l,c)}}cT.nextDataId=0,du("cpu",()=>new cT,1);const pT=dT(Qt,e=>e>=0?e:Math.exp(e)-1),fT={kernelName:Qt,backendName:"cpu",kernelFunc:pT};function mT(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const gT={kernelName:yn,backendName:"cpu",kernelFunc:mT};function yT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r;uT([a],"leakyRelu");const i=de(a.shape),o=n.data.get(a.dataId).values,u=Ie("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?s*o[e]:o[e];return n.makeTensorInfo(a.shape,"float32",u)}const bT={kernelName:In,backendName:"cpu",kernelFunc:yT};function xT(e){return(t,n,r,a,s)=>{const i=Pu(t,n),o=i.length,u=Le(i),l=Ie(s,de(i)),c=t.length,d=n.length,h=Le(t),p=Le(n),f=Lu(t,i),m=Lu(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],a[t%a.length]);else for(let t=0;t<l.length;++t){const n=He(t,o,u),s=n.slice(-c);f.forEach(e=>s[e]=0);const i=Ge(s,c,h),g=n.slice(-d);m.forEach(e=>g[e]=0);const y=Ge(g,d,p);l[t]=e(r[i],a[y])}return[l,i]}}const wT=xT((e,t)=>e<0?t*e:e);function vT(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t;uT([r,a],"prelu");const s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,[o,u]=wT(r.shape,a.shape,s,i,"float32");return n.makeTensorInfo(u,"float32",o)}const kT={kernelName:ir,backendName:"cpu",kernelFunc:vT},IT=dT(dr,e=>Math.max(0,e)),ST={kernelName:dr,backendName:"cpu",kernelFunc:IT},NT=dT(yr,e=>Math.min(Math.max(0,e),6)),TT={kernelName:yr,backendName:"cpu",kernelFunc:NT};function CT(e){return(t,n,r)=>{const a=Ie(n,t.length);for(let n=0;n<t.length;++n)a[n]=e(t[n],r);return a}}const $T=CT(e=>1/(1+Math.exp(-e))),ET=dT($r,e=>1/(1+Math.exp(-e))),_T={kernelName:$r,backendName:"cpu",kernelFunc:ET};function AT(e,t,n,r,a){if("linear"===n)return mT({inputs:{x:t},backend:e});if("relu"===n)return IT({inputs:{x:t},backend:e});if("elu"===n)return pT({inputs:{x:t},backend:e});if("relu6"===n)return NT({inputs:{x:t},backend:e});if("prelu"===n)return vT({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return yT({inputs:{x:t},backend:e,attrs:{alpha:a}});if("sigmoid"===n)return ET({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function RT(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",s),imag:n.makeTensorInfo(a.shape,"float32",i)},o}const FT={kernelName:Et,backendName:"cpu",kernelFunc:RT};function DT(e,t,n="float32"){if("complex64"===n)return RT({inputs:{real:DT(e,t,"float32"),imag:DT(e,t,"float32")},backend:e});const r=We(de(t),n);return e.makeTensorInfo(t,n,r)}function MT(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.real,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const OT={kernelName:lr,backendName:"cpu",kernelFunc:MT};function LT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dtype:s}=r;if("complex64"===s){if("complex64"===a.dtype)return mT({inputs:{x:a},backend:n});const e=DT(n,a.shape,a.dtype),t=LT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),r=RT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===a.dtype){const e=MT({inputs:{input:a},backend:n}),t=LT({inputs:{x:e},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(e),t}if(!Ce(a.dtype,s)){const e=mT({inputs:{x:a},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:s}}if("int32"===s){const e=n.data.get(a.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(a.shape,"int32",t)}if("bool"===s){const e=n.data.get(a.dataId).values,t=Ma([0],a.dtype),[r,s]=xT((e,t)=>e!==t?1:0)(a.shape,[],e,t,"bool");return n.makeTensorInfo(s,"bool",r)}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${s}`)}const zT={kernelName:Tt,backendName:"cpu",kernelFunc:LT};function PT(e,t,n,r){return null==n?({inputs:n,backend:a})=>{const{a:s,b:i}=n,o=a;uT([s,i],e);const u=o.data.get(s.dataId).values,l=o.data.get(i.dataId).values,c="string"===s.dtype?Ef(u):u,d="string"===s.dtype?Ef(l):l,h=r||s.dtype,[p,f]=t(s.shape,i.shape,c,d,h);return o.makeTensorInfo(f,h,p)}:({inputs:e,backend:a})=>{const{a:s,b:i}=e,o=a;if("complex64"===s.dtype||"complex64"===i.dtype){const e=LT({inputs:{x:s},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,a=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(a.dataId).values,c=LT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),d=o.data.get(c.dataId),h=d.complexTensorInfos.real,p=d.complexTensorInfos.imag,f=o.data.get(h.dataId).values,m=o.data.get(p.dataId).values,[g,y,b]=n(s.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=RT({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(s.dataId).values,n=o.data.get(i.dataId).values,a=r||s.dtype,[u,l]=t(s.shape,i.shape,e,n,a);return o.makeTensorInfo(l,a,u)}}}function BT(e){return(t,n,r,a,s,i)=>{const o=Pu(t,n),u=de(o),l=o.length,c=Le(o),d=Ie("float32",u),h=Ie("float32",u),p=Lu(t,o),f=Lu(n,o),m=of(r,a),g=of(s,i),y=t.length,b=Le(t),x=n.length,w=Le(n);if(p.length+f.length===0)for(let t=0;t<d.length;t++){const n=t%m.length,r=t%g.length,a=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);d[t]=a.real,h[t]=a.imag}else for(let t=0;t<d.length;t++){const n=He(t,l,c),r=n.slice(-y);p.forEach(e=>r[e]=0);const a=Ge(r,y,b),s=n.slice(-x);f.forEach(e=>s[e]=0);const i=Ge(s,x,w),o=e(m[2*a],m[2*a+1],g[2*i],g[2*i+1]);d[t]=o.real,h[t]=o.imag}return[d,h,o]}}const WT=xT((e,t)=>e+t),VT=BT((e,t,n,r)=>({real:e+n,imag:t+r})),UT=PT(it,WT,VT),GT={kernelName:it,backendName:"cpu",kernelFunc:UT};function HT(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=de(a.shape),o=we(s,i),u=de(o);oe(i===u,()=>`The new shape (${o}) has ${u} elements and the old shape (${a.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`),n.incRef(a.dataId);const l=n.data.get(a.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:a.dataId,shape:o,dtype:a.dtype}}const jT={kernelName:hr,backendName:"cpu",kernelFunc:HT};function qT(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;uT([a,s],"matMul");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=de(f),y=de(m);oe(u>=2&&l>=2&&(g===y||1===g||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);oe(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,d]:[y,d,p],w=HT({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=HT({inputs:{x:s},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],S=o?v.shape[1]:v.shape[2],N=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=Le(w.shape),E=Le(v.shape),[_,A,R]=i?[$[0],1,$[1]]:[$[0],$[1],1],[F,D,M]=o?[1,E[1],E[0]]:[E[1],1,E[0]],O=I*S,L=_i([N,I,S],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<N;e++)for(let t=0;t<I;t+=P)for(let n=0;n<S;n+=P)for(let r=0;r<k;r+=P){const a=Math.min(t+P,I),s=Math.min(n+P,S),i=Math.min(r+P,k);for(let o=t;o<a;o++)for(let t=n;t<s;t++){let n=0;for(let a=r;a<i;a++){const r=Math.min(e,g-1)*_,s=Math.min(e,y-1)*M;n+=T[r+o*A+a*R]*C[a*F+t*D+s]}z[e*O+(o*S+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const KT={kernelName:vt,backendName:"cpu",kernelFunc:qT},XT={kernelName:ia,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;let h,p,f;const m=[];h=qT({inputs:{a,b:s},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(p=UT({inputs:{a:h,b:i},backend:n}),m.push(h),h=p),c&&(f=AT(n,h,c,o,d),m.push(h),h=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return h}};function YT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const ZT={kernelName:rt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;uT(t,"abs");let r=new Float32Array(de(t.shape));return r=YT(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},JT=dT(at,e=>Math.acos(e)),QT={kernelName:at,backendName:"cpu",kernelFunc:JT},eC=dT(st,e=>Math.acosh(e)),tC={kernelName:st,backendName:"cpu",kernelFunc:eC},nC={kernelName:ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;uT(t,"addN");const a=r.map(e=>n.data.get(e.dataId).values),s=_i(r[0].shape,r[0].dtype),i=s.values;for(let e=0;e<r.length;e++){const t=a[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(s.shape,s.dtype,s.values)}};function rC(e,t,n,r,a){const s=t.length,i=de(t),o=Le(t),u=Le(a),l=Ie(n,de(a));for(let t=0;t<i;++t){const n=He(t,s,o),a=new Array(n.length);for(let e=0;e<a.length;e++)a[e]=n[r[e]];l[Ge(a,s,u)]=e[t]}return l}function aC(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{perm:s}=n;uT(a,"transpose");const i=a.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=a.shape[s[e]];const u=rC(r.data.get(a.dataId).values,a.shape,a.dtype,s,o);return{dataId:r.write(u,o,a.dtype),shape:o,dtype:a.dtype}}const sC={kernelName:Jr,backendName:"cpu",kernelFunc:aC},iC={kernelName:ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uT(a,"all");const o=ve(s,a.shape);let u=o;const l=zc(u,a.shape.length);let c=a;null!=l&&(c=aC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Bc(u.length,a.shape.length)),Lc("all",u,c.shape.length);const[d,h]=Mc(c.shape,u),p=de(h),f=We(de(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=HT({inputs:{x:g},backend:n,attrs:{shape:Oc(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},oC={kernelName:lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uT(a,"any");const o=ve(s,a.shape);let u=o;const l=zc(u,a.shape.length);let c=a;null!=l&&(c=aC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Bc(u.length,a.shape.length)),Lc("any",u,c.shape.length);const[d,h]=Mc(c.shape,u),p=de(h),f=We(de(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=HT({inputs:{x:g},backend:n,attrs:{shape:Oc(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},uC={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;uT(a,"argMax");let i=ve(s,a.shape);const o=zc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=aC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Bc(i.length,u.shape.length)),i=[i[0]],Lc("argMax",i,u.shape.length);const[c,d]=Mc(u.shape,i),h=We(de(c),"int32"),p=de(d),f=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a>n&&(n=a,r=e)}h[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",h)}},lC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;uT(a,"argMin");let i=ve(s,a.shape);const o=zc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=aC({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Bc(i.length,u.shape.length)),i=[i[0]],Lc("argMin",i,u.shape.length);const[c,d]=Mc(u.shape,i),h=We(de(c),"int32"),p=de(d),f=n.data.get(u.dataId).values;for(let e=0;e<h.length;++e){const t=e*p;let n=f[t],r=0;for(let e=0;e<p;++e){const a=f[t+e];a<n&&(n=a,r=e)}h[e]=r}return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(c,"int32",h)}},cC=dT(ht,e=>Math.asin(e)),dC={kernelName:ht,backendName:"cpu",kernelFunc:cC},hC=dT(pt,e=>Math.asinh(e)),pC={kernelName:pt,backendName:"cpu",kernelFunc:hC},fC=dT(ft,e=>Math.atan(e)),mC={kernelName:ft,backendName:"cpu",kernelFunc:fC},gC=xT((e,t)=>Math.atan2(e,t)),yC=PT(gt,gC),bC={kernelName:gt,backendName:"cpu",kernelFunc:yC},xC=dT(mt,e=>Math.atanh(e)),wC={kernelName:mt,backendName:"cpu",kernelFunc:xC};function vC(e,t,n,r,a,s){const i=a.strideHeight,o=a.strideWidth,u=a.dilationHeight,l=a.dilationWidth,c=a.effectiveFilterHeight,d=a.effectiveFilterWidth,h=a.padInfo.top,p=a.padInfo.left,f="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=_i(a.outShape,n),g=m.values,y=a.outShape[1]*a.outShape[2]*a.outShape[3],b=a.outShape[2]*a.outShape[3],x=a.outShape[3];for(let t=0;t<a.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<a.inChannels;++t)for(let y=0;y<a.outHeight;++y){const w=y*i-h,v=Math.max(0,w),k=Math.min(a.inHeight,c+w),I=n+y*b;for(let n=0;n<a.outWidth;++n){const i=n*o-p,c=Math.max(0,i),h=Math.min(a.inWidth,d+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const a=m+n*r[1];for(let n=c;n<h;n+=l){const i=e[a+n*r[2]+t];"max"===s&&i>y?y=i:"avg"===s&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===s?b/w:y}}}return m}function kC(e,t,n,r,a=!1,s=!1){const i=_i(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,d=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,f=r.padInfo.left,m=_i(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-p;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,d+g);for(let o=0;o<r.outWidth;++o){const d=o*u-f;let p=d;for(;p<0;)p+=c;const x=Math.min(r.inWidth,h+d);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=p;o<x;o+=c){const u=o-d,l=m.get(e,n,o,t);l>w&&(w=l,v=a?s?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*h+u)}}i.set(v,e,n,o,t)}}return i}function IC(e,t,n,r,a,s){const i=a.strideDepth,o=a.strideHeight,u=a.strideWidth,l=a.dilationDepth,c=a.dilationHeight,d=a.dilationWidth,h=a.effectiveFilterDepth,p=a.effectiveFilterHeight,f=a.effectiveFilterWidth,m=a.padInfo.front,g=a.padInfo.top,y=a.padInfo.left,b="max"===s?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=_i(a.outShape,n),w=x.values,v=a.outShape[1]*a.outShape[2]*a.outShape[3]*a.outShape[4],k=a.outShape[2]*a.outShape[3]*a.outShape[4],I=a.outShape[3]*a.outShape[4],S=a.outShape[4];for(let t=0;t<a.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<a.inChannels;++t)for(let v=0;v<a.outDepth;++v){const N=v*i-m;let T=N;for(;T<0;)T+=l;const C=Math.min(a.inDepth,h+N),$=n+v*k;for(let n=0;n<a.outHeight;++n){const i=n*o-g;let h=i;for(;h<0;)h+=c;const m=Math.min(a.inHeight,p+i),v=$+n*I;for(let n=0;n<a.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=d;const p=Math.min(a.inWidth,f+i),g=v+n*S;let k=b,I=0,N=0;for(let n=T;n<C;n+=l){const a=x+n*r[1];for(let n=h;n<m;n+=c){const i=a+n*r[2];for(let n=o;n<p;n+=d){const a=e[i+n*r[3]+t];if("max"===s&&a>k?k=a:"avg"===s&&(I+=a,N++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===s?I/N:k}}}}return x}const SC={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;uT(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;oe(ml(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=sl(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&pe(l.inShape,l.outShape))c=mT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Le(a.shape),r=vC(e,a.shape,a.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},NC={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;uT(a,"avgPool3d");const c=il(a.shape,s,i,1,o,u,l),d=IC(n.data.get(a.dataId).values,a.shape,a.dtype,Le(a.shape),c,"avg");return n.makeTensorInfo(d.shape,"float32",d.values)}},TC={kernelName:wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;uT([a,s],"avgPool3DGrad");const c=il(s.shape,i,o,1,u,l),d=c.strideDepth,h=c.strideHeight,p=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,S=k-1-c.padInfo.left,N=v-1-c.padInfo.top,T=_i(s.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-I,i=r-N,o=a-S;let u=0;for(let n=0;n<w;n+=y){const r=(s+n)/d;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const a=(i+n)/h;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let n=0;n<k;n+=x){const s=(o+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(u+=$.get(e,r,a,s,t))}}}T.set(u*C,e,n,r,a,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},CC={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;uT([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=sl(i.shape,o,u,1,l),d=c.strideHeight,h=c.strideWidth,p=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=_i(i.shape,"float32"),k=1/(p*f),I=n.data.get(a.dataId).values,S=_i(a.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const a=n-w,s=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(a+n)/d;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const a=(s+n)/h;a<0||a>=c.outWidth||Math.floor(a)!==a||(i+=S.get(e,r,a,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},$C={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,scale:s,offset:i,mean:o,variance:u}=t;oe(o.shape.length===u.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),oe(null==i||o.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),oe(null==s||o.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks."),uT([a,o,u,s,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(a.dataId).values,d=n.data.get(o.dataId).values,h=n.data.get(u.dataId).values,p=s?n.data.get(s.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=p.length,b=h.length,x=d.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-d[v++])*p[k++]/Math.sqrt(h[I++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(a.shape,a.dtype,m)}};function EC(e,t,n,r,a){const s=To(r,t,n),i=de(n),o=Le(r);if(s){const n=Co(t,o);return"string"===a?e.slice(n,n+i):e.subarray(n,n+i)}const u=_i(r,a,"string"===a?Ef(e):e),l=_i(n,a);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map((e,n)=>e+t[n]);l.set(u.get(...r),...n)}return"string"===a?_f(l.values):l.values}function _C(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r;uT(a,"slice");const[o,u]=$o(a,s,i);fo(a,o,u);const l=EC(n.data.get(a.dataId).values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,l)}const AC={kernelName:Sr,backendName:"cpu",kernelFunc:_C},RC={kernelName:kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;uT([a],"batchToSpaceND");const o=s.reduce((e,t)=>e*t),u=qp(a.shape,s,o),l=Kp(u.length,s.length),c=Xp(a.shape,s,o),d=Yp(i,s.length),h=Zp(c,i,s.length),p=HT({inputs:{x:a},backend:n,attrs:{shape:u}}),f=aC({inputs:{x:p},backend:n,attrs:{perm:l}}),m=HT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=_C({inputs:{x:m},backend:n,attrs:{begin:d,size:h}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function FC(e,t,n,r,a){const s=de(r),i=We(a,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=a||(i[r]+=s>0?t[n]:1)}return i}function DC(e,t,n,r=!1){const a=e.shape[0],s=e.shape[1],i=_i([a,n],t.dtype);for(let o=0;o<a;o++)for(let a=0;a<s;a++){const s=e.get(o,a);if(s<0)throw new Error("Input x must be non-negative!");s>=n||(r?i.set(1,o,s):t.size>0?i.set(i.get(o,s)+t.get(o,a),o,s):i.set(i.get(o,s)+1,o,s))}return i}const MC={kernelName:It,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=FC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,o)}},OC={kernelName:Nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.data.get(r.dataId).values,i=n.data.get(a.dataId).values,o=Pu(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},LC=CT(e=>Math.ceil(e)),zC=hT(Ct,LC),PC={kernelName:Ct,backendName:"cpu",kernelFunc:zC},BC=dT($t,(e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e}),WC={kernelName:$t,backendName:"cpu",kernelFunc:BC},VC={kernelName:_t,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(de(t.shape)),a=n.data.get(t.dataId),s=a.complexTensorInfos.real,i=a.complexTensorInfos.imag,o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function UC(e,t,n,r){const a=Se(n,de(t));if(r&&"string"!==n){let t=0;e.forEach(e=>{const n=de(e.shape);a.set(e.vals,t),t+=n})}else{let r=0;e.forEach(e=>{const s="string"===n?Ef(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)a[o+t]=s[i++]}r+=e.shape[1]})}return a}function GC(e){const{inputs:t,backend:n}=e,{input:r}=t,a=n.data.get(r.dataId).complexTensorInfos.imag,s=n.data.get(a.dataId).values;return n.makeTensorInfo(a.shape,a.dtype,s)}const HC={kernelName:xn,backendName:"cpu",kernelFunc:GC};function jC(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ve(a,t[0].shape)[0];let i=Up(t.map(e=>e.shape),s);if(0===de(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>de(e.shape)>0);if(1===o.length)return mT({inputs:{x:o[0]},backend:n});if(Vp(o.map(e=>e.shape),s),"complex64"===o[0].dtype){const e=o.map(e=>MT({inputs:{input:e},backend:n})),t=o.map(e=>GC({inputs:{input:e},backend:n})),r=jC({inputs:e,backend:n,attrs:{axis:s}}),a=jC({inputs:t,backend:n,attrs:{axis:s}}),i=RT({inputs:{real:r,imag:a},backend:n});return e.forEach(e=>n.disposeIntermediateTensorInfo(e)),t.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}const u=o.map(e=>{const t=de(e.shape.slice(s));return HT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),l=u.map(e=>({vals:n.data.get(e.dataId).values,shape:e.shape}));i=Up(u.map(e=>e.shape),1);const c=1===u[0].shape[0],d=UC(l,i,t[0].dtype,c),h=Up(o.map(e=>e.shape),s),p=n.makeTensorInfo(h,t[0].dtype,d);return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}const qC={kernelName:At,backendName:"cpu",kernelFunc:jC};function KC(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;uT([a,s],"conv2d");const d=gl(u),h=ol(a.shape,s.shape,i,l,o,c,!1,d),p=h.filterHeight,f=h.filterWidth,m=h.dilationHeight,g=h.dilationWidth,y=h.padInfo.left,b=h.padInfo.top,x="channelsLast"===h.dataFormat,w=new Ka(h.outShape,a.dtype),v=Le(a.shape),k=Le(s.shape),I=v[0],S=x?v[1]:v[2],N=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,_=x?1:w.strides[1],A=n.data.get(a.dataId).values,R=n.data.get(s.dataId).values,F=w.values;for(let e=0;e<h.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<h.outHeight;++e){const r=n+e*$,a=e*h.strideHeight-b;for(let e=0;e<p;++e){const n=a+e*m;if(n<0||n>=h.inHeight)continue;const s=e*k[0],i=t+n*S;for(let e=0;e<h.outWidth;++e){const t=r+e*E,n=e*h.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=h.inWidth)continue;const a=i+r*N;let o=s+e*k[1];for(let e=0;e<h.inChannels;++e){const n=A[a+e*T];for(let e=0;e<h.outChannels;++e)F[t+e*_]+=n*R[o+e];o+=h.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,F)}const XC={kernelName:Rt,backendName:"cpu",kernelFunc:KC},YC={kernelName:Ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;uT([a,s],"conv2dBackpropFilter");const d=gl(u),h=ol(a.shape,c,i,1,o,l,!1,d),{strideHeight:p,strideWidth:f,filterHeight:m,filterWidth:g}=h,y="channelsLast"===h.dataFormat,b=new Ka(h.filterShape,"float32"),x=h.padInfo.left,w=h.padInfo.top,v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=new Ka(a.shape,a.dtype,v),S=new Ka(s.shape,s.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/p)),n=Math.min(h.outHeight,(h.inHeight+w-e)/p);for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((x-r)/f)),s=Math.min(h.outWidth,(h.inWidth+x-r)/f);for(let i=0;i<h.inChannels;++i)for(let o=0;o<h.outChannels;++o){let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-w;for(let e=a;e<s;++e){const n=r+e*f-x;u+=y?I.get(l,t,n,i)*S.get(l,c,e,o):I.get(l,i,t,n)*S.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},ZC={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;uT([a,s],"conv2dBackpropInput");const d=Le(s.shape),h=Le(a.shape);let p=gl(l);const f=ol(i,s.shape,o,1,u,c,!1,p),m=new Ka(f.inShape,"float32"),g=m.values,y=n.data.get(a.dataId).values,b=n.data.get(s.dataId).values,[x,w,v]=d,{batchSize:k,filterHeight:I,filterWidth:S,inChannels:N,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:_,strideHeight:A,strideWidth:R}=f;p=f.dataFormat;const F=I-1-f.padInfo.top,D=S-1-f.padInfo.left,M="channelsLast"===p,O=m.strides[0],L=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,P=M?1:m.strides[1],B=h[0],W=M?h[1]:h[2],V=M?h[2]:1,U=M?1:h[1];for(let e=0;e<k;++e)for(let t=0;t<N;++t)for(let n=0;n<T;++n){const r=n-F,a=Math.max(0,Math.ceil(r/A)),s=Math.min(E,(I+r)/A);for(let i=0;i<C;++i){const o=i-D,u=Math.max(0,Math.ceil(o/R)),l=Math.min(_,(S+o)/R);let c=0;for(let n=a;n<s;++n){const a=n*A-r;for(let r=u;r<l;++r){const s=B*e+W*n+V*r,i=x*(I-1-a)+w*(S-1-(r*R-o))+v*t;for(let e=0;e<$;++e)c+=y[s+U*e]*b[i+e]}}g[O*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},JC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r;uT([a,s],"conv3d");const l=ul(a.shape,s.shape,i,u,o),{filterDepth:c,filterHeight:d,filterWidth:h,dilationDepth:p,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Ka(l.outShape,a.dtype),v=n.data.get(a.dataId).values,k=n.data.get(s.dataId).values,I=w.values,S=Le(a.shape),N=Le(s.shape);for(let e=0;e<l.batchSize;++e){const t=e*S[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],a=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=a+e*p;if(n<0||n>=l.inDepth)continue;const s=e*N[0],i=t+n*S[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<d;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const a=s+e*N[1],o=i+r*S[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<h;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const s=a+e*N[2],i=o+t*l.inChannels;let u=s;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)I[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},QC={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r;uT([a,s],"conv3dBackpropFilterV2");const l=Le(a.shape),c=Le(s.shape),d=ul(a.shape,u,i,1,o),h=d.strideDepth,p=d.strideHeight,f=d.strideWidth,m=d.filterDepth,g=d.filterHeight,y=d.filterWidth,b=new Ka(d.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,S=n.data.get(s.dataId).values,[N,T,C,$]=c,E=n.data.get(a.dataId).values,[_,A,R,F]=l,D=d.padInfo.front,M=d.padInfo.left,O=d.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((D-e)/h)),n=Math.min(d.outDepth,(d.inDepth+D-e)/h),r=e*w;for(let a=0;a<g;++a){const s=Math.max(0,Math.ceil((O-a)/p)),i=Math.min(d.outHeight,(d.inHeight+O-a)/p),o=a*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(d.outWidth,(d.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<d.inChannels;++o){const m=o*I+c;for(let c=0;c<d.outChannels;++c){let g=0;for(let m=0;m<d.batchSize;++m){const d=m*_,y=m*N;for(let m=t;m<n;++m){const t=(e+m*h-D)*A+d,n=m*T+y;for(let e=s;e<i;++e){const s=(a+e*p-O)*R+t,i=e*C+n;for(let e=u;e<l;++e){const t=e*$+i;g+=E[(r+e*f-M)*F+s+o]*S[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},e$={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r;uT([a],"conv3dBackpropInputV2");const l=Le(a.shape),c=Le(s.shape),d=ul(u,s.shape,o,1,i),h=new Ka(d.inShape,"float32"),p=h.values,[f,m,g,y]=h.strides,b=n.data.get(a.dataId).values,[x,w,v,k]=l,I=n.data.get(s.dataId).values,[S,N,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:_,filterWidth:A,inChannels:R,inDepth:F,inHeight:D,inWidth:M,outChannels:O,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:V}=d,U=E-1-d.padInfo.front,G=_-1-d.padInfo.top,H=A-1-d.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<R;++t)for(let n=0;n<F;++n){const r=n-U,a=Math.max(0,Math.ceil(r/B)),s=Math.min(L,(E+r)/B);for(let i=0;i<D;++i){const o=i-G,u=Math.max(0,Math.ceil(o/W)),l=Math.min(z,(_+o)/W);for(let c=0;c<M;++c){const d=c-H,h=Math.max(0,Math.ceil(d/V)),$=Math.min(P,(A+d)/V);let R=0;for(let n=a;n<s;++n){const a=n*B-r;for(let r=u;r<l;++r){const s=r*W-o;for(let i=h;i<$;++i){const o=x*e+w*n+v*r+k*i,u=S*(E-1-a)+N*(_-1-s)+T*(A-1-(i*V-d))+C*t;for(let e=0;e<O;++e)R+=b[o+e]*I[u+e]}}}p[f*e+m*n+g*i+y*c+t]=R}}}return n.makeTensorInfo(h.shape,h.dtype,h.values)}},t$=dT(zt,e=>Math.cos(e)),n$={kernelName:zt,backendName:"cpu",kernelFunc:t$},r$=dT(Pt,e=>Math.cosh(e)),a$={kernelName:Pt,backendName:"cpu",kernelFunc:r$},s$={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,d,h,p]=a.shape,f=s.shape[0],[m,g]=o,y=_i([f,m,g,p],"float32"),b=n.data.get(s.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(a.dataId).values,v=Le(a.shape),k=Le(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],a=b[t+2],s=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(a-n)*(d-1)/(m-1):0,f=g>1?(s-r)*(h-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(d-1)+t*o:.5*(n+a)*(d-1);if(c<0||c>d-1)for(let n=0;n<g;n++)for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}else if("bilinear"===u){const n=Math.floor(c),a=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(h-1)+u*f:.5*(r+s)*(h-1);if(c<0||c>h-1){for(let n=0;n<p;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const d=Math.floor(c),m=Math.ceil(c),b=c-d;for(let r=0;r<p;r++){let s=r+d*v[2]+n*v[1]+i*v[0];const l=w[s];s=r+m*v[2]+n*v[1]+i*v[0];const c=w[s];s=r+d*v[2]+a*v[1]+i*v[0];const h=w[s];s=r+m*v[2]+a*v[1]+i*v[0];const p=l+(c-l)*b,f=h+(w[s]-h)*b;s=r+u*k[2]+t*k[1]+e*k[0],y.values[s]=p+(f-p)*o}}}else for(let n=0;n<g;++n){const a=g>1?r*(h-1)+n*f:.5*(r+s)*(h-1);if(a<0||a>h-1){for(let r=0;r<p;r++){const a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=l}continue}const o=Math.round(a),u=Math.round(c);for(let r=0;r<p;r++){const a=r+o*v[2]+u*v[1]+i*v[0],s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=w[a]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},i$={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r;uT(a,"cumsum");const u=zc([s],a.shape.length);let l=a;null!=u&&(l=aC({inputs:{x:a},backend:n,attrs:{perm:u}}));const c=Bc(1,a.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const d=os(l.dtype,"int32"),h=We(de(l.shape),d),p=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<p.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)h[n]=i?0:p[n];else{const r=m(e,t-1);h[n]=i?p[r]+h[r]:p[n]+h[r]}}const g=n.makeTensorInfo(l.shape,d,h);if(null!=u){const e=aC({inputs:{x:g},backend:n,attrs:{perm:Pc(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},o$={kernelName:Vt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=FC(n.data.get(a.dataId).values,n.data.get(s.dataId).values,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,e)}if(2===a.shape.length){const e=DC(n.bufferSync(a),n.bufferSync(s),i,o);return n.makeTensorInfo(e.shape,s.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}},u$={kernelName:Ut,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r;oe("NHWC"===i,()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`);const o=a.shape[0],u=a.shape[1],l=a.shape[2],c=a.shape[3],d=u*s,h=l*s,p=c/(s*s),f=n.data.get(a.dataId).values,m=new Float32Array(o*d*h*p);let g=0;for(let e=0;e<o;++e)for(let t=0;t<d;++t){const n=Math.floor(t/s),r=t%s;for(let t=0;t<h;++t){const a=Math.floor(t/s),i=(r*s+t%s)*p;for(let t=0;t<p;++t){const r=t+i+c*(a+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,d,h,p],a.dtype,m)}};function l$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;uT([a,s],"depthwiseConv2DNative");const c=Le(a.shape),d=Le(s.shape);let h=u;null==h&&(h=[1,1]),oe(ml(i,h),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${h}'`);const p=ol(a.shape,s.shape,i,h,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=p,x=b.left,w=b.top,v=p.outChannels/p.inChannels,k=new Ka(p.outShape,a.dtype),I=n.data.get(a.dataId).values,S=n.data.get(s.dataId).values,N=k.values;for(let e=0;e<p.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<p.outHeight;++e){const r=n+e*k.strides[1],a=e*p.strideHeight-w;for(let e=0;e<f;++e){const n=a+e*g;if(n<0||n>=p.inHeight)continue;const s=e*d[0],i=t+n*c[1];for(let e=0;e<p.outWidth;++e){const t=r+e*k.strides[2],n=e*p.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=p.inWidth)continue;const a=s+e*d[1],o=i+r*p.inChannels;let u=t,l=a;for(let e=0;e<p.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)N[u+e]+=t*S[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const c$={kernelName:Gt,backendName:"cpu",kernelFunc:l$},d$={kernelName:Ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;uT([a,s],"depthwiseConv2dNativeBackpropFilter");const d=ol(a.shape,c,i,o,u,l,!0),{strideHeight:h,strideWidth:p,filterHeight:f,filterWidth:m}=d,g=new Ka(d.filterShape,"float32"),y=d.padInfo.left,b=d.padInfo.top,x=d.outChannels/d.inChannels,w=n.data.get(a.dataId).values,v=new Ka(a.shape,a.dtype,w),k=n.data.get(s.dataId).values,I=new Ka(s.shape,s.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/h)),n=Math.min(d.outHeight,(d.inHeight+b-e)/h);for(let r=0;r<m;++r){const a=Math.max(0,Math.ceil((y-r)/p)),s=Math.min(d.outWidth,(d.inWidth+y-r)/p);for(let i=0;i<d.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<d.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*h-b;for(let e=a;e<s;++e){const n=r+e*p-y;l+=v.get(u,t,n,o)*I.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},h$={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;uT([a,s],"depthwiseConv2DNativeBackpropInput");const d=Le(a.shape),h=Le(s.shape),p=ol(c,s.shape,i,o,u,l,!0),f=new Ka(p.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(a.dataId).values,[w,v,k]=d,I=n.data.get(s.dataId).values,[S,N,T]=h,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:_,inHeight:A,inWidth:R,outChannels:F,outHeight:D,outWidth:M,strideHeight:O,strideWidth:L}=p,z=$-1-p.padInfo.top,P=E-1-p.padInfo.left,B=F/_;for(let e=0;e<C;++e)for(let t=0;t<_;++t)for(let n=0;n<A;++n){const r=n-z,a=Math.max(0,Math.ceil(r/O)),s=Math.min(D,($+r)/O);for(let i=0;i<R;++i){const o=i-P,u=Math.max(0,Math.ceil(o/L)),l=Math.min(M,(E+o)/L);let c=0;for(let n=a;n<s;++n){const a=n*O-r;for(let r=u;r<l;++r){const s=w*e+v*n+k*r,i=S*($-1-a)+N*(E-1-(r*L-o))+T*t;for(let e=0;e<B;++e)c+=x[s+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},p$={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=de(r.shape),s=n.data.get(r.dataId).values,i=_i([a,a],r.dtype),o=i.values;for(let e=0;e<s.length;e++)o[e*a+e]=s[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},f$={kernelName:Kt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a}=e,{strides:s,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,d=u.data.get(a.dataId).values,h=a.shape.length,{batchSize:p,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:S,dilationWidth:N,outShape:T}=al(r.shape,a.shape,s,i,"NHWC",o),C=de(T),$=T.length,E=Se(r.dtype,C);for(let e=0;e<p;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let s=0;s<b;++s){const i=s*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const s=n+t*S;if(s>=0&&s<f)for(let n=0;n<I;++n){const p=i+n*N;if(p>=0&&p<m){const i=Ge([e,s,p,o],c,Le(r.shape)),f=Ge([t,n,o],h,Le(a.shape)),m=l[i]+d[f];m>u&&(u=m)}}}E[Ge([e,t,s,o],$,Le(T))]=u}}}return{dataId:u.write(Ma(E,r.dtype),T,r.dtype),shape:T,dtype:r.dtype}}},m$={kernelName:Yt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Pe(r.shape,l.data.get(r.dataId).values),d=Pe(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=al(r.shape,a.shape,i,o,"NHWC",u);oe(s.rank===N.length,()=>`Error in ${Yt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);const T=Pe(N,l.data.get(s.dataId).values),C=Ve(a.shape,a.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=t,u=n)}}}C[o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Ma(C,r.dtype),a.shape,a.dtype),shape:a.shape,dtype:a.dtype}}},g$={kernelName:Xt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:a,dy:s}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Pe(r.shape,l.data.get(r.dataId).values),d=Pe(a.shape,l.data.get(a.dataId).values),{batchSize:h,inHeight:p,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:S,outShape:N}=al(r.shape,a.shape,i,o,"NHWC",u);oe(s.rank===N.length,()=>`Error in ${Xt}, dy must have the same rank as output ${N.length}, but got ${s.rank}`);const T=Pe(N,l.data.get(s.dataId).values),C=Ve(r.shape,r.dtype);for(let e=0;e<h;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const a=r*w-b.left;for(let s=0;s<m;++s){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=a<0?0:a;for(let t=0;t<v;++t){const r=n+t*I;if(r>=0&&r<p)for(let n=0;n<k;++n){const l=a+n*S;if(l>=0&&l<f){const a=c[e][r][l][s]+d[t][n][s];a>i&&(i=a,o=r,u=l)}}}C[e][o][u][s]+=T[e][t][r][s]}}}return{dataId:l.write(Ma(C,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},y$=xT((e,t)=>e*t),b$=BT((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n})),x$=PT(Kn,y$,b$),w$={kernelName:Kn,backendName:"cpu",kernelFunc:x$};function v$(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;let o;uT(a,"sum"),o="bool"===a.dtype?LT({inputs:{x:a},backend:n,attrs:{dtype:"int32"}}):mT({inputs:{x:a},backend:n});const u=o.shape.length,l=ve(s,o.shape),c=zc(l,u);let d=l,h=o;null!=c&&(h=aC({inputs:{x:o},backend:n,attrs:{perm:c}}),d=Bc(d.length,u)),Lc("sum",d,h.shape.length);const[p,f]=Mc(h.shape,d);let m=DT(n,p,os(h.dtype,"int32"));const g=de(f),y=n.data.get(m.dataId).values,b=n.data.get(h.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=HT({inputs:{x:m},backend:n,attrs:{shape:Oc(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(h),m}const k$={kernelName:Ar,backendName:"cpu",kernelFunc:v$},I$={kernelName:Jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=xf(a,s.length);vf(i.length,u,s);const{path:l,steps:c}=kf(o,u),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=wf(p,u[t]);let a;If(e)?a=s[t]:(a=aC({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pe(a.shape,i)||(a=HT({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=x$({inputs:{a,b:h},backend:n}),f.push(h))}e<d-1&&(l[e]>=0&&(h=v$({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},S$={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:a}=t;uT([r,a],"eluGrad");const s=new Float32Array(de(a.shape)),i=n.data.get(a.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];s[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(a.shape,"float32",s)}},N$=xT((e,t)=>e===t?1:0),T$=PT(nn,N$,null,"bool"),C$={kernelName:nn,backendName:"cpu",kernelFunc:T$},$$=ef,E$=tf,_$=nf,A$=rf,R$=af,F$=sf,D$=dT(tn,e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+$$*n);return t*(1-((((F$*r+R$)*r+A$)*r+_$)*r+E$)*r*Math.exp(-n*n))}),M$={kernelName:tn,backendName:"cpu",kernelFunc:D$},O$=CT(e=>Math.exp(e)),L$=hT(rn,O$,"float32"),z$={kernelName:rn,backendName:"cpu",kernelFunc:L$};function P$(e){const{inputs:t,backend:n,attrs:r}=e,{input:a}=t,{dim:s}=r,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(oe(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),HT({inputs:{x:a},backend:n,attrs:{shape:o}})}const B$={kernelName:an,backendName:"cpu",kernelFunc:P$},W$=CT(e=>Math.expm1(e)),V$=hT(sn,W$),U$={kernelName:sn,backendName:"cpu",kernelFunc:V$},G$=xT((e,t)=>e/t),H$=PT(Zt,G$),j$={kernelName:Zt,backendName:"cpu",kernelFunc:H$},q$=xT((e,t)=>e-t),K$=BT((e,t,n,r)=>({real:e-n,imag:t-r})),X$=PT(jr,q$,K$),Y$={kernelName:jr,backendName:"cpu",kernelFunc:X$};function Z$(e,t,n){const r=e.shape,a=r[0],s=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[a,s],c=de(l),d=Ie("float32",c),h=Ie("float32",c);for(let e=0;e<a;e++){const r=_C({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,s]}}),a=_C({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,s]}}),i=RT({inputs:{real:r,imag:a},backend:n}),{real:l,imag:c}=J$(i,t,n),p=of(l,c);for(let t=0;t<s;t++){const n=df(p,t);d[e*s+t]=n.real,h[e*s+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i)}const p=n.makeTensorInfo(l,"float32",d),f=n.makeTensorInfo(l,"float32",h),m=RT({inputs:{real:p,imag:f},backend:n});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}function J$(e,t,n){const r=de(e.shape),a=n.data.get(e.dataId),s=n.data.get(a.complexTensorInfos.real.dataId).values,i=n.data.get(a.complexTensorInfos.imag.dataId).values;if((o=r)&o-1){const e=function(e,t,n){const r=new Float32Array(2*t);for(let a=0;a<t;a++){let s=0,i=0;for(let r=0;r<t;r++){const o=ff(a*r,t,n),u=df(e,r);s+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(s/=t,i/=t),hf(r,s,i,a)}return r}(of(s,i),r,t);return uf(e)}{const a=Q$(s,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",a.real),t=n.makeTensorInfo(o,"float32",a.imag),s=n.makeTensorInfo([],"float32",Da(r,"float32")),i=mT({inputs:{x:s},backend:n}),u=j$.kernelFunc({inputs:{a:e,b:s},backend:n}),l=j$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,d=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:d}}return a}var o}function Q$(e,t,n,r,a){if(1===n)return{real:e,imag:t};const s=of(e,t),i=n/2,o=lf(s),u=o.real,l=o.imag,c=[u.length],d=a.makeTensorInfo(c,"float32",u),h=a.makeTensorInfo(c,"float32",l),p=RT({inputs:{real:d,imag:h},backend:a}),f=cf(s),m=f.real,g=f.imag,y=[m.length],b=a.makeTensorInfo(y,"float32",m),x=a.makeTensorInfo(y,"float32",g),w=RT({inputs:{real:b,imag:x},backend:a}),v=Q$(u,l,i,r,a),k=v.real,I=v.imag,S=[k.length],N=a.makeTensorInfo(S,"float32",k),T=a.makeTensorInfo(S,"float32",I),C=RT({inputs:{real:N,imag:T},backend:a}),$=Q$(m,g,i,r,a),E=$.real,_=$.imag,A=[E.length],R=a.makeTensorInfo(A,"float32",E),F=a.makeTensorInfo(A,"float32",_),D=RT({inputs:{real:R,imag:F},backend:a}),M=pf(n,r),O=[M.real.length],L=a.makeTensorInfo(O,"float32",M.real),z=a.makeTensorInfo(O,"float32",M.imag),P=RT({inputs:{real:L,imag:z},backend:a}),B=x$({inputs:{a:P,b:D},backend:a}),W=UT({inputs:{a:C,b:B},backend:a}),V=X$({inputs:{a:C,b:B},backend:a}),U=MT({inputs:{input:W},backend:a}),G=MT({inputs:{input:V},backend:a}),H=GC({inputs:{input:W},backend:a}),j=GC({inputs:{input:V},backend:a}),q=jC({inputs:[U,G],backend:a,attrs:{axis:0}}),K=jC({inputs:[H,j],backend:a,attrs:{axis:0}}),X=a.data.get(q.dataId).values,Y=a.data.get(K.dataId).values;return a.disposeIntermediateTensorInfo(d),a.disposeIntermediateTensorInfo(h),a.disposeIntermediateTensorInfo(p),a.disposeIntermediateTensorInfo(b),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(w),a.disposeIntermediateTensorInfo(N),a.disposeIntermediateTensorInfo(T),a.disposeIntermediateTensorInfo(C),a.disposeIntermediateTensorInfo(R),a.disposeIntermediateTensorInfo(F),a.disposeIntermediateTensorInfo(D),a.disposeIntermediateTensorInfo(L),a.disposeIntermediateTensorInfo(z),a.disposeIntermediateTensorInfo(P),a.disposeIntermediateTensorInfo(B),a.disposeIntermediateTensorInfo(W),a.disposeIntermediateTensorInfo(V),a.disposeIntermediateTensorInfo(U),a.disposeIntermediateTensorInfo(H),a.disposeIntermediateTensorInfo(G),a.disposeIntermediateTensorInfo(j),a.disposeIntermediateTensorInfo(q),a.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const eE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=de(r.shape),s=r.shape[r.shape.length-1],i=HT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Z$(i,!1,n),u=HT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function tE(e){const{backend:t,attrs:n}=e,{shape:r,value:a,dtype:s}=n,i=s||De(a),o=Se(i,de(r));return function(e,t){e.fill(t)}(o,a),t.makeTensorInfo(r,i,o)}const nE={kernelName:un,backendName:"cpu",kernelFunc:tE},rE={kernelName:ln,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,a=n,s=Ie(r.dtype,de(r.shape)),[i,o,u,l]=r.shape,c=a.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let a=0;a<l;a++){const i=Math.round(u-e-1),o=t+n+r+a;let d=c[o];i>=0&&i<u&&(d=c[t+n+i*l+a]),s[o]=d}}}}return{dataId:a.write(s,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},aE=CT(e=>Math.floor(e)),sE=hT(cn,aE),iE={kernelName:cn,backendName:"cpu",kernelFunc:sE},oE=xT((e,t)=>Math.floor(e/t)),uE=PT(dn,oE,null,"int32"),lE={kernelName:dn,backendName:"cpu",kernelFunc:uE},cE={kernelName:oa,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=KC({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=UT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=AT(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}},dE={kernelName:ua,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r;let m=l$({inputs:{x:a,filter:s},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h}});if(i){const e=m;m=UT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(p){const e=m;m=AT(n,m,p,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function hE(e,t,n,r,a,s,i,o,u){const l=_i([r,s],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<a;t++){const s=e[n*a+t];c+=s*i[t],r.push(s)}if(c<0||c>=u/s)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<s;e++)l.values[n*s+e]=t.get(...t.indexToLoc(c*s+e))}return l}const pE={kernelName:fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=de(r.shape),i=a.shape,o=i[i.length-1],[u,l,c,d]=oo(r,a);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const h=hE(n.data.get(a.dataId).values,n.bufferSync(r),r.dtype,l,o,c,d,r.shape,s);return n.makeTensorInfo(u,r.dtype,h.values)}};function fE(e,t,n){const r=_i(n,e.dtype);for(let n=0;n<r.size;++n){const a=r.indexToLoc(n).slice(),s=a[0],i=a[2],o=t.locToIndex([s,i]);a[2]=t.values[o];const u=e.locToIndex(a);r.values[n]=e.values[u]}return r}const mE={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r;uT([a,s],"gatherV2");const u=ve(i,a.shape)[0],l=n.data.get(s.dataId).values,c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];oe(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}let d=o;null==o&&(d=0);const h=de(s.shape),p=$f(a,s,u,d),f=HT({inputs:{x:a},backend:n,attrs:{shape:[p.batchSize,p.outerSize,p.dimSize,p.sliceSize]}}),m=HT({inputs:{x:s},backend:n,attrs:{shape:[p.batchSize,h/p.batchSize]}}),g=[p.batchSize,p.outerSize,h/p.batchSize,p.sliceSize],y=n.bufferSync(m),b=fE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(p.outputShape,b.dtype,b.values)}},gE=xT((e,t)=>e>t?1:0),yE=PT(mn,gE,null,"bool"),bE={kernelName:mn,backendName:"cpu",kernelFunc:yE},xE=xT((e,t)=>e>=t?1:0),wE=PT(gn,xE,null,"bool"),vE={kernelName:gn,backendName:"cpu",kernelFunc:wE},kE={kernelName:bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,a=de(r.shape),s=r.shape[r.shape.length-1],i=HT({inputs:{x:r},backend:n,attrs:{shape:[a/s,s]}}),o=Z$(i,!0,n),u=HT({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},IE=dT(wn,e=>Number.isFinite(e)?1:0,"bool"),SE={kernelName:wn,backendName:"cpu",kernelFunc:IE},NE=dT(vn,e=>Math.abs(e)===1/0?1:0,"bool"),TE={kernelName:vn,backendName:"cpu",kernelFunc:NE},CE=dT(kn,e=>Number.isNaN(e)?1:0,"bool"),$E={kernelName:kn,backendName:"cpu",kernelFunc:CE},EE=xT((e,t)=>e<t?1:0),_E=PT(Sn,EE,null,"bool"),AE={kernelName:Sn,backendName:"cpu",kernelFunc:_E},RE=xT((e,t)=>e<=t?1:0),FE=PT(Nn,RE,null,"bool"),DE={kernelName:Nn,backendName:"cpu",kernelFunc:FE};function ME(e,t,n){const r=(t-e)/(n-1),a=We(n,"float32");a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+r;return a}const OE={kernelName:Tn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=ME(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},LE=CT(e=>Math.log(e)),zE=hT(Cn,LE),PE={kernelName:Cn,backendName:"cpu",kernelFunc:zE},BE=dT($n,e=>Math.log1p(e)),WE={kernelName:$n,backendName:"cpu",kernelFunc:BE},VE=xT((e,t)=>e&&t),UE=PT(En,VE,null,"bool"),GE={kernelName:En,backendName:"cpu",kernelFunc:UE},HE=dT(_n,e=>e?0:1,"bool"),jE={kernelName:_n,backendName:"cpu",kernelFunc:HE},qE=xT((e,t)=>e||t),KE=PT(An,qE,null,"bool"),XE={kernelName:An,backendName:"cpu",kernelFunc:KE},YE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r;uT(a,"LRN");const l=a.shape[3],c=l-1,d=n.data.get(a.dataId).values,h=de(a.shape),p=new Float32Array(h);function f(e){const t=e%l;let n=e-t+Math.max(0,t-s);const r=e-t+Math.min(t+s,c);let a=0;for(;n<=r;n++){const e=d[n];a+=e*e}return a}for(let e=0;e<h;e++){const t=f(e),n=d[e]*Math.pow(i+o*t,-u);p[e]=n}return n.makeTensorInfo(a.shape,a.dtype,p)}},ZE={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;uT(i,"LRNGrad");const d=de(i.shape),h=i.shape[3],p=n.data.get(i.dataId).values,f=n.data.get(a.dataId).values,m=n.data.get(s.dataId).values,g=new Float32Array(d),y=d;for(let e=0;e<y;e++){const t=e%h,n=e-t+Math.max(0,t-o),r=e-t+Math.min(h,t+o+1);let a=0;for(let e=n;e<r;e++)a+=Math.pow(f[e],2);a=l*a+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/a;e===t&&(n+=Math.pow(a,-c)),n*=p[e],g[t]+=n}}return n.makeTensorInfo(i.shape,a.dtype,g)}};function JE(e,t,n,r){const a=Ie(r,de(n));for(let n=0;n<a.length;++n){const r=n*t;let s=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>s)&&(s=t)}a[n]=s}return a}function QE(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=n;let u=a.shape;const l=u.length,c=ve(s,u);let d=c;const h=zc(d,l);let p=o.data.get(a.dataId).values;if(null!=h){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[h[t]];p=rC(p,u,a.dtype,h,e),d=Bc(d.length,l),u=e}uT(a,"max"),Lc("max",d,l);const[f,m]=Mc(u,d),g=JE(p,de(m),f,a.dtype),y=o.write(g,f,a.dtype);let b=f;return i&&(b=Oc(f,c)),{dataId:y,shape:b,dtype:a.dtype}}const e_={kernelName:Mn,backendName:"cpu",kernelFunc:QE},t_=xT((e,t)=>Math.max(e,t)),n_=PT(On,t_),r_={kernelName:On,backendName:"cpu",kernelFunc:n_},a_={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;uT(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;oe(ml(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=sl(a.shape,s,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&pe(l.inShape,l.outShape))c=mT({inputs:{x:a},backend:n});else{const e=n.data.get(a.dataId).values,t=Le(a.shape),r=vC(e,a.shape,a.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,a.dtype,r.values)}return c}},s_={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;uT(a,"maxPool3d");const c=il(a.shape,s,i,1,o,u,l),d=IC(n.data.get(a.dataId).values,a.shape,a.dtype,Le(a.shape),c,"max");return n.makeTensorInfo(d.shape,"float32",d.values)}},i_={kernelName:Bn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;uT([a,s],"maxPool3DGrad");const c=il(s.shape,i,o,1,u,l),d=function(e,t){const n=_i(t.outShape,"int32"),r=t.strideDepth,a=t.strideHeight,s=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,d=t.effectiveFilterWidth,h=t.padInfo.front,p=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-h;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*a-p;let h=l;for(;h<0;)h+=o;const v=Math.min(t.inHeight,c+l);for(let a=0;a<t.outWidth;++a){const p=a*s-f;let k=p;for(;k<0;)k+=u;const I=Math.min(t.inWidth,d+p);let S=Number.NEGATIVE_INFINITY,N=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=h;r<v;r+=o){const a=r-l;for(let s=k;s<I;s+=u){const i=s-p,o=e.get(m,t,r,s,g);o>=S&&(S=o,N=n*c*d+a*c+i)}}}n.set(N,m,y,r,a,g)}}}return n}(n.bufferSync(s),c),h=c.strideDepth,p=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,S=_i(s.shape,"float32"),N=n.bufferSync(a);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let a=0;a<c.inWidth;++a){const s=n-v,i=r-I,o=a-k;let u=0;for(let n=0;n<b;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let a=0;a<x;a+=g){const s=(i+a)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const h=b*x*w-1-d.get(e,r,s,l,t)===n*x*w+a*w+i?1:0;0!==h&&(u+=N.get(e,r,s,l,t)*h)}}}S.set(u,e,n,r,a,t)}return n.makeTensorInfo(S.shape,S.dtype,S.values)}},o_={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;uT([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=sl(o.shape,u,l,1,c,d),p=n.data.get(o.dataId).values,f=_i(h.outShape,o.dtype,kC(p,o.shape,o.dtype,h).values),m=h.strideHeight,g=h.strideWidth,y=h.dilationHeight,b=h.dilationWidth,x=h.effectiveFilterHeight,w=h.effectiveFilterWidth,v=w-1-h.padInfo.left,k=x-1-h.padInfo.top,I=_i(o.shape,"float32"),S=n.data.get(a.dataId).values,N=_i(a.shape,"float32",S);for(let e=0;e<h.batchSize;++e)for(let t=0;t<h.inChannels;++t)for(let n=0;n<h.inHeight;++n)for(let r=0;r<h.inWidth;++r){const a=n-k,s=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(a+n)/m;if(!(r<0||r>=h.outHeight||Math.floor(r)!==r))for(let a=0;a<w;a+=b){const o=(s+a)/g;if(o<0||o>=h.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+a?1:0;0!==u&&(i+=N.get(e,r,o,t)*u)}}I.set(i,e,n,r,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},u_={kernelName:Wn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;uT(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=sl(r.shape,a,s,[1,1],i),[d,h]=function(e,t,n,r,a){const s=vC(e,0,n,Le(t),a,"max"),i=kC(e,t,n,a,!0,r);return[s.values,i.values]}(l,r.shape,r.dtype,o,c),p=u.write(d,c.outShape,r.dtype),f=u.write(h,c.outShape,r.dtype);return[{dataId:p,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},l_={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=ve(s,a.shape),u=de(Mc(a.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const d=LT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}});l.push(d);const h=H$({inputs:{a:d,b:c},backend:n});l.push(h);const p=v$({inputs:{x:h},backend:n,attrs:{axis:s,keepDims:i}});return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),p}},c_={kernelName:Un,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uT(a,"min");const o=ve(s,a.shape);let u=o;const l=zc(u,a.shape.length);let c=a;null!=l&&(c=aC({inputs:{x:a},backend:n,attrs:{perm:l}}),u=Bc(u.length,a.shape.length)),Lc("min",u,c.shape.length);const[d,h]=Mc(c.shape,u),p=de(h),f=We(de(d),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*p;let n=m[t];for(let e=0;e<p;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(d,c.dtype,f);if(i){const e=HT({inputs:{x:g},backend:n,attrs:{shape:Oc(d,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},d_=xT((e,t)=>Math.min(e,t)),h_=PT(Gn,d_),p_={kernelName:Gn,backendName:"cpu",kernelFunc:h_},f_={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,mode:i}=r;uT(a,"mirrorPad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),l=s.map((e,t)=>e[0]+a.shape[t]),c="reflect"===i?0:1,d=n.data.get(a.dataId).values,h=a.shape.length,p=Le(a.shape),f=de(o),m=o.length,g=Le(o),y=Ie(a.dtype,f);for(let e=0;e<f;e++){let t=He(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map((e,t)=>e-u[t]);const n=Ge(t,h,p);y[e]=d[n]}return{dataId:n.write(y,o,a.dtype),shape:o,dtype:a.dtype}}},m_=xT((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t}),g_=PT(jn,m_),y_={kernelName:jn,backendName:"cpu",kernelFunc:g_};var b_=n(546);function x_(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=a.shape.length;let o=s;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ve([o],a.shape),l=QE({inputs:{x:a},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Oc(l.shape,u),d=HT({inputs:{x:l},backend:n,attrs:{shape:c}}),h=X$({inputs:{a,b:d},backend:n}),p=L$({inputs:{x:h},backend:n}),f=v$({inputs:{x:p},backend:n,attrs:{axis:u,keepDims:!1}}),m=HT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=H$({inputs:{a:p,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const w_={kernelName:Dr,backendName:"cpu",kernelFunc:x_},v_={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r;uT(a,"multinomial");const u=o?a:x_({inputs:{logits:a},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],d=n.data.get(u.dataId).values,h=[l,s],p=We(de(h),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=d[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+d[t+e];const r=b_.alea(i.toString()),a=e*s;for(let e=0;e<s;++e){const t=r();p[a+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){p[a+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(h,"int32",p)}};function k_(e,t,n){const r=Da(-1,n);return y$([],t,r,e,n)}const I_={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;uT(r,"neg");const a=n.data.get(r.dataId).values,[s,i]=k_(a,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,s)}},S_=Jh,N_={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;uT(a,"NonMaxSuppression");const l=n.data.get(a.dataId).values,c=n.data.get(s.dataId).values,{selectedIndices:d}=S_(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},T_=Qh,C_={kernelName:Jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;uT(a,"NonMaxSuppressionPadded");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,{selectedIndices:h,validOutputs:p}=T_(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},$_=ep,E_={kernelName:Qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;uT(a,"NonMaxSuppressionWithScore");const c=n.data.get(a.dataId).values,d=n.data.get(s.dataId).values,h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=$_(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},__=xT((e,t)=>e!==t?1:0),A_=PT(Yn,__,null,"bool"),R_={kernelName:Yn,backendName:"cpu",kernelFunc:A_},F_={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r;uT(a,"oneHot");const u=de(a.shape),l=new Float32Array(u*s);l.fill(o);const c=n.data.get(a.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<s&&(l[e*s+c[e]]=i);return n.makeTensorInfo([...a.shape,s],"int32",l)}};function D_(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=MT({inputs:{input:r},backend:n}),t=D_({inputs:{x:e},backend:n}),a=GC({inputs:{input:r},backend:n}),s=D_({inputs:{x:a},backend:n}),i=RT({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return tE({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const M_={kernelName:na,backendName:"cpu",kernelFunc:D_},O_={kernelName:er,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===a.dtype){const t=MT({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=GC({inputs:{input:a},backend:r}),i=D_({inputs:{x:s},backend:r}),o=RT({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return tE({backend:r,attrs:{shape:a.shape,value:1,dtype:a.dtype}})}};function L_(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return P$({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ue(s,e.shape,"All tensors passed to stack must have matching shapes"),oe(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=jC({inputs:t.map(e=>{const t=P$({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}const z_={kernelName:nr,backendName:"cpu",kernelFunc:L_},P_={kernelName:rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;uT(a,"pad");const o=s.map((e,t)=>e[0]+a.shape[t]+e[1]),u=s.map(e=>e[0]),l=n.data.get(a.dataId).values,c=de(a.shape),d=a.shape.length,h=Le(a.shape),p=de(o),f=o.length,m=Le(o),g=Ie(a.dtype,p);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Ge(He(e,d,h).map((e,t)=>e+u[t]),f,m)]=l[e];return{dataId:n.write(g,o,a.dtype),shape:o,dtype:a.dtype}}},B_=xT((e,t)=>Math.pow(e,t)),W_=PT(sr,B_),V_={kernelName:sr,backendName:"cpu",kernelFunc:W_};function U_(e,t,n,r){const[a,s]=Mc(e,r),i=os(t,"int32"),o=We(de(a),i),u=de(s);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:a,outDtype:i}}const G_={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;uT(a,"prod");const o=a.shape.length,u=ve(s,a.shape),l=zc(u,o);let c=u,d=a;const h=[];null!=l&&(d=aC({inputs:{x:a},backend:n,attrs:{perm:l}}),h.push(d),c=Bc(c.length,o));const p=n.data.get(d.dataId).values,{outVals:f,outShape:m,outDtype:g}=U_(d.shape,d.dtype,p,c);let y=m;return i&&(y=Oc(m,u)),h.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(y,g,f)}};function H_(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return We(0,r);const a=We(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),a[0]=e;for(let e=1;e<a.length;e++)a[e]=a[e-1]+n;return a}const j_={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,dtype:s,step:i}=n,o=H_(r,a,i,s);return t.makeTensorInfo([o.length],s,o)}},q_=dT(cr,e=>1/e),K_={kernelName:cr,backendName:"cpu",kernelFunc:q_},X_={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;uT(a,"resizeBilinear");const u=Le(a.shape),[l,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(de([d,l,c,f])),y=[s&&l>1?h-1:h,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<d;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),a=n-r,s=Math.min(h-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+s*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,s=Math.min(p-1,Math.ceil(t)),c=o+n*u[2],d=l+n*u[2],h=o+s*u[2],y=l+s*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[d+e],s=t+(m[h+e]-t)*r,i=s+(n+(m[y+e]-n)*r-s)*a;g[x++]=i}}}return n.makeTensorInfo([d,l,c,f],"float32",g)}},Y_={kernelName:gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;uT([s,a],"resizeBilinearGrad");const o=Le(a.shape),[u,l,c,d]=a.shape,[,h,p]=s.shape,f=new Float32Array(u*l*c*d),m=[i&&h>1?l-1:l,i&&p>1?c-1:c],g=[i&&h>1?h-1:h,i&&p>1?p-1:p],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(s.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<h;e++){const n=e*y,r=Math.floor(n),a=Math.min(Math.ceil(n),l-1),s=t+r*o[1],i=t+a*o[1],u=n-r,h=1-u;for(let e=0;e<p;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),a=t-n,l=1-a,p=s+n*o[2],m=s+r*o[2],g=i+n*o[2],y=i+r*o[2],v=h*l,k=h*a,I=u*l,S=u*a;for(let e=0;e<d;e++){const t=x[w++];f[p+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*S}}}}return n.makeTensorInfo([u,c,l,d],"float32",f)}},Z_={kernelName:pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r;uT(a,"resizeNearestNeighbor");const u=Le(a.shape),[l,c]=o,[d,h,p,f]=a.shape,m=n.data.get(a.dataId).values,g=new Float32Array(d*l*c*f),y=[s&&l>1?h-1:h,s&&c>1?p-1:p],b=[s&&l>1?l-1:l,s&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<d;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(h-1,s?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const a=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(p-1,s?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=a+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([d,l,c,f],a.dtype,g)}},J_={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r;uT([s,a],"resizeNearestNeighborGrad");const o=Le(a.shape),u=Le(s.shape),[l,c,d,h]=a.shape,[,p,f]=s.shape,m=new Float32Array(l*c*d*h),g=n.data.get(s.dataId).values,y=[i&&p>1?c-1:c,i&&f>1?d-1:d],b=[i&&p>1?p-1:p,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,S=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),a=Math.floor(r-I/2);for(let r=0;r<d;r++){const s=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-S/2);for(let n=0;n<h;n++){let o=0;for(let s=0;s<I;s++){const l=s+a;if(l<0||l>=p)continue;const h=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<S;e++){const t=e+y;if(t<0||t>=f)continue;const a=h+t*u[2],s=t*w;r===Math.min(d-1,i?Math.round(s):Math.floor(s))&&(o+=g[a+n])}}m[s+n]=o}}}}return n.makeTensorInfo(a.shape,a.dtype,m)}},Q_={kernelName:br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r;uT(a,"reverse");const i=a.shape.length,o=ve(s,a.shape);if(0===i)return mT({inputs:{x:a},backend:n});const u=new Ka(a.shape,a.dtype),l=n.bufferSync(a);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach(e=>n[e]=a.shape[e]-1-n[e]),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},eA={kernelName:sa,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=Ie(r.dtype,de(r.shape)),[l,c,d,h]=r.shape,[p,f]=jp(i,c,d),m=Math.sin(a),g=Math.cos(a),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*d*c*h;for(let e=0;e<c;e++){const n=e*(d*h);for(let r=0;r<d;r++){const a=r*h;for(let i=0;i<h;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-p)*g-(x-f)*m,v=(b-p)*m+(x-f)*g;w=Math.round(w+p),v=Math.round(v+f);let k=s;"number"!=typeof s&&(k=3===i?255:s[i]),w>=0&&w<d&&v>=0&&v<c&&(k=y[t+v*(d*h)+w*h+i]),u[t+n+a+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},tA=dT(xr,e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1}),nA={kernelName:xr,backendName:"cpu",kernelFunc:tA},rA=CT(e=>1/Math.sqrt(e)),aA=hT(wr,rA),sA={kernelName:wr,backendName:"cpu",kernelFunc:aA};function iA(e,t,n,r,a,s,i,o,u,l){const c=[r/a,a],d=e.values,h=t.values;if(0===r)return _i(n,t.dtype);const p=_i(c,t.dtype);p.values.fill(u);for(let e=0;e<s;e++){const s=[];let u=0;for(let t=0;t<i;t++){const n=d[e*i+t];s.push(n),u+=n*o[t]}if(u<0||u>=r/a)throw new Error(`Invalid indices: ${s} does not index into ${n}`);for(let n=0;n<a;n++)l?p.values[u*a+n]+=h[e*a+n]:p.values[u*a+n]=0===t.rank?h[0]:h[e*a+n]}return p}const oA={kernelName:vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=co(0,a,i),h=iA(n.bufferSync(a),n.bufferSync(s),i,d,l,u,o,c,0,!0);return n.makeTensorInfo(i,h.dtype,h.values)}},uA={kernelName:kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t;uT([r,a,s],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=os(a.dtype,s.dtype),d=We(de(a.shape),c);let h=0;const p=0===i||i>1||1===a.shape.length?1:de(a.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<p;t++)1===o[e]?d[h++]=u[e]:d[h++]=l[e];return n.makeTensorInfo(a.shape,c,d)}},lA=Jp,cA=Qp,dA=dT(Ir,e=>e>=0?cA*e:lA*(Math.exp(e)-1)),hA={kernelName:Ir,backendName:"cpu",kernelFunc:dA},pA=dT(Cr,e=>e<0?-1:e>0?1:0),fA={kernelName:Cr,backendName:"cpu",kernelFunc:pA},mA=dT(Nr,e=>Math.sin(e)),gA={kernelName:Nr,backendName:"cpu",kernelFunc:mA},yA=dT(Tr,e=>Math.sinh(e)),bA={kernelName:Tr,backendName:"cpu",kernelFunc:yA},xA=Math.log(1.1920928955078125e-7)+2,wA=dT(Er,e=>{const t=e>-xA,n=e<xA,r=Math.exp(e);let a;return a=n?r:t?e:Math.log(1+r),a}),vA={kernelName:Er,backendName:"cpu",kernelFunc:wA},kA={kernelName:Rr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;uT([a],"spaceToBatchND");const o=de(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=P_.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=qp(l.shape,s,o,!1),d=Kp(c.length,s.length,!1),h=Xp(l.shape,s,o,!1),p=HT({inputs:{x:l},backend:n,attrs:{shape:c}}),f=aC({inputs:{x:p},backend:n,attrs:{perm:d}}),m=HT({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),m}};function IA(e,t,n,r,a,s,i){const o=t[0],u=s[0],l=new Array(u),c=new Array(o),d=t[1];if(0===u){if(0!==o)throw new Error(`Received SparseTensor with denseShape[0] = 0 but\n         indices.shape[0] = ${o}`);return[Se(n,0),[0,d],Se(a,0),l,c]}let h=!0,p=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d];if(n<0)throw new Error(`indices(${t}, 0) is invalid: ${n} < 0`);if(n>=u)throw new Error(`indices(${t}, 0) is invalid: ${n} >= ${u}`);++f[n],h=h&&n>=p,p=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&h){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,d],n,l,c]}{const t=f[u-1],s=Se(n,t*d),h=Se(a,t),p=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*d],a=p[n],i=(0===n?0:f[n-1])+a;p[n]++;for(let n=0;n<d;++n)s[i*d+n]=e[t*d+n];h[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===p[e]){const t=0===e?0:f[e-1];s[t*d+0]=e;for(let e=1;e<d;++e)s[t*d+e]=0;h[t]=i}return[s,[t,d],h,l,c]}}const SA={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n        ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,l=n.data.get(s.dataId).values,c=n.data.get(i.dataId).values[0],[d,h,p,f,m]=IA(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function NA(e,t,n,r,a){const s=de(r),i=t[0],o=a.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=a[e];if(-1===t){if(-1!==c)throw new Error(`only one output dimension may be -1, not both ${c} and ${e}`);c=e,u.push(1)}else{if(t<0)throw new Error(`size ${e} must be non-negative, not ${t}`);l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(s/l);if(l*e!==s)throw new Error(`Input to reshape is a SparseTensor with ${s}\n          dense values, but the requested shape requires a multiple of ${l}. inputShape=${r} outputShape= ${u}`);u[c]=e}const d=de(u);if(d!==s)throw new Error(`Input to reshape is a tensor with ${s} dense values, but the requested shape has ${d}. inputShape=${r} outputShape=${u}`);const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const f=[];if(o>0){f[o-1]=1;for(let e=o-2;e>=0;--e)f[e]=f[e+1]*u[e+1]}const m=Se(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)m[t*o+e]=Math.trunc(n/f[e]),n%=f[e]}return[m,[i,o],u]}const TA={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.data.get(a.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(s.dataId).values),[l,c,d]=NA(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}};function CA(e,t,n,r,a,s=!1,i=0){const o=r.length;if(o!==a.length)throw new Error("segmentIds and indices should have same size.");const u=[t[0],e.length/t[0]],l=u[1],c=o>0?a[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const d=t.slice();d[0]=c;const h=Se(n,d.reduce((e,t)=>e*t,1));if(0===o)return c>0&&h.fill(i),[h,d];if(c<=0)throw new Error("segment ids must be >= 0");let p=0,f=1,m=0,g=a[p];for(;;){let t=0;if(f<o){if(t=a[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(`Segment id ${g} out of range [0, ${c}), possibly because segmentIds input is not sorted.`);g>m&&h.fill(i,m*l,g*l);for(let t=p;t<f;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(`Bad: indices[${t}] == ${r[t]} out of range [0, ${u[0]})`);for(let t=0;t<l;t++)h[g*l+t]+=e[n*l+t]}if(s)for(let e=0;e<l;e++)h[g*l+e]/=f-p;if(p=f,++f,m=g+1,g=t,f>o)break}return m<c&&h.fill(i,m*l,c*l),[h,d]}const $A={kernelName:Lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=CA(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},EA={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${s.shape}`);const i=n.data.get(r.dataId).values,o=n.data.get(a.dataId).values,u=n.data.get(s.dataId).values,[l,c]=CA(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},_A={kernelName:Pr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=co(0,a,o),p=iA(n.bufferSync(a),n.bufferSync(s),o,h,c,l,u,d,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,p.dtype,p.values)}},AA={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ve(i,a.shape)[0],u=Nf(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const r=_C({inputs:{x:a},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r})}},RA=CT(e=>Math.sqrt(e)),FA=dT(_r,e=>Math.sqrt(e)),DA={kernelName:_r,backendName:"cpu",kernelFunc:FA},MA={kernelName:Wr,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;uT(n,"square");const a=r.data.get(n.dataId).values,s=new Float32Array(a.length);for(let e=0;e<a.length;++e){const t=a[e];s[e]=t*t}return{dataId:r.write(s,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},OA=xT((e,t)=>{const n=e-t;return n*n}),LA=PT(Br,OA),zA={kernelName:Br,backendName:"cpu",kernelFunc:LA},PA=dT(ra,(e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha}),BA={kernelName:ra,backendName:"cpu",kernelFunc:PA};function WA(e,t,n,r){const a=_i(e,t.dtype);for(let e=0;e<a.size;e++){const s=a.indexToLoc(e),i=new Array(s.length);for(let e=0;e<i.length;e++)i[e]=s[e]*n[e]+r[e];a.set(t.get(...i),...s)}return a}const VA={kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r;uT(a,"stridedSlice");const{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Eo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=HT({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){oe(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const e=go(b,x,w),t=_C({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=HT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=WA(p,n.bufferSync(a),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class UA{constructor(e,t,n,r,a,s){this.separator=za(e),this.nGramWidths=t,this.leftPad=za(n),this.rightPad=za(r),this.padWidth=a,this.preserveShort=s}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,a,s){for(let i=0;i<a;++i){const o=this.getPadWidth(s),u=Math.max(0,o-i),l=Math.max(0,o-(a-(i+1))),c=s-(u+l),d=t+(u>0?0:i-o);let h=0;h+=u*this.leftPad.length;for(let t=0;t<c;++t)h+=e[d+t].length;h+=l*this.rightPad.length,h+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(h);const p=n[r+i];let f=0;const m=e=>e.forEach(e=>p[f++]=e);for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[d+t]),m(this.separator);if(c>0){m(e[d+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let a=1;a<r;++a){let r=t[a]>=e;if(r=r&&t[a]<=n,!r)throw new Error(`Invalid split value ${t[a]}, must be in [${e}, ${n}]`);e=t[a]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const a=r-1,s=Se("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=a;++e)s[e]=0;return[e,s]}s[0]=0;for(let e=1;e<=a;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach(e=>{r+=this.getNumNGrams(n,e)}),this.preserveShort&&n>0&&0===r&&(r=1),s[e]=s[e-1]+r}const i=new Array(s[a]);for(let n=0;n<a;++n){const r=t[n];let a=s[n];if(this.nGramWidths.forEach(s=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,s);this.createNGrams(e,r,i,a,u,s),a+=u}),this.preserveShort&&a===s[n]){const s=t[n+1]-t[n];if(0===s)continue;const o=s+2*this.padWidth,u=1;this.createNGrams(e,r,i,a,u,o)}}return[i,s]}}function GA(e,t,n,r,a,s,i,o){return new UA(n,r,a,s,i,o).compute(e,t)}const HA={kernelName:Ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.data.get(c.dataId).values,p=n.data.get(d.dataId).values,[f,m]=GA(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}};function jA(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const a=t[0];let s=e.indexOf(a);for(;-1!==s;){const t=e.subarray(0,s);n&&0===t.length||r.push(t),s=(e=e.subarray(s+1)).indexOf(a)}return void(n&&0===e.length||r.push(e))}let a=0;for(let s=0;s<e.length+1;s++)if(s===e.length||-1!==t.indexOf(e[s])){const t=e.subarray(a,s);n&&0===t.length||r.push(t),a=s+1}}function qA(e,t,n){const r=e.length,a=[];let s=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=a.length;jA(e[u],t,n,a);const l=a.length-r;o[u]=l,s+=l,i=Math.max(i,l)}const u=Se("int32",2*s),l=new Array(s),c=[r,i];let d=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*d]=e,u[2*d+1]=t,l[d]=a[d],++d;return[u,l,c]}const KA={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(s.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,d]=qA(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}};function XA(e,t){const n=Se("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Fa(e[r]).modulo(t).getLowBitsUnsigned();return n}const YA={kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=XA(n.data.get(s.dataId).values,a);return n.makeTensorInfo(s.shape,"int32",i)}},ZA=dT(qr,e=>Math.tan(e)),JA={kernelName:qr,backendName:"cpu",kernelFunc:ZA},QA=dT(Kr,e=>Math.tanh(e));function eR(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=_i(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),a=new Array(e.rank);for(let t=0;t<a.length;t++)a[t]=n[t]%e.shape[t];const s=e.locToIndex(a);r.values[t]=e.values[s]}return r}const tR={kernelName:Xr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;uT(a,"tile");const i=eR(n.bufferSync(a),s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},nR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function rR(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const a=r-n+1,s=t-n+1,i=Math.log(a),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(a-o)/a)*Math.sign(s-a/2);rR(e,t,Math.max(n,Math.floor(t-s*o/a+u)),Math.min(r,Math.floor(t+(a-s)*o/a+u)))}const a=e[t];let s=n,i=r;for(re(e,n,t),nR(e[r],a)>0&&re(e,n,r);s<i;){for(re(e,s,i),s++,i--;nR(e[s],a)<0;)s+=1;for(;nR(e[i],a)>0;)i-=1}0===nR(e[n],a)?re(e,n,i):(i+=1,re(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function aR(e,t,n,r,a){const s=t[t.length-1],[i,o]=[e.length/s,s],u=Ie(n,i*r),l=Ie("int32",i*r);for(let t=0;t<i;t++){const n=t*o,s=e.subarray(n,n+o);let i=new Array(s.length);s.forEach((e,t)=>i[t]={value:e,index:t}),r<i.length&&(rR(i,r),i=i.slice(0,r)),a&&i.sort(nR);const c=t*r,d=u.subarray(c,c+r),h=l.subarray(c,c+r);for(let e=0;e<r;e++)d[e]=i[e].value,h[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[_i(c,n,u),_i(c,"int32",l)]}const sR={kernelName:Yr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r;uT(a,"topk");const o=n.data.get(a.dataId).values,[u,l]=aR(o,a.shape,a.dtype,s,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},iR={kernelName:Zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=Le(a.shape),b=y[0],x=y[1],w=y[2],v=Ie(a.dtype,de(g));v.fill(u);const k=r.data.get(a.dataId).values,I=r.data.get(s.dataId).values;for(let e=0;e<c;++e){const t=1===s.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let a=0;a<p;++a){let s;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,p=(t[3]*r+t[4]*n+t[5])/l,f=oR(c,h,o),m=oR(p,d,o);switch(i){case"nearest":s=lR(k,d,h,b,x,w,e,m,f,a,u);break;case"bilinear":s=cR(k,d,h,b,x,w,e,m,f,a,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+r*w+a]=s}return r.makeTensorInfo(g,a.dtype,v)}return{dataId:r.write(v,g,a.dtype),shape:a.shape,dtype:a.dtype}}};function oR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return te(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return te(0,n,t-1)}(e,t);case"nearest":return function(e,t){return te(0,e,t-1)}(e,t);default:return e}}function uR(e,t,n,r,a,s,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*a+u*s+l]:c}function lR(e,t,n,r,a,s,i,o,u,l,c){return uR(e,t,n,r,a,s,i,Math.round(o),Math.round(u),l,c)}function cR(e,t,n,r,a,s,i,o,u,l,c){const d=Math.floor(o),h=Math.floor(u),p=d+1,f=h+1;return(p-o)*((f-u)*uR(e,t,n,r,a,s,i,d,h,l,c)+(u-h)*uR(e,t,n,r,a,s,i,d,f,l,c))+(o-d)*((f-u)*uR(e,t,n,r,a,s,i,p,h,l,c)+(u-h)*uR(e,t,n,r,a,s,i,p,f,l,c))}function dR(e,t,n,r){const a=ve(t,n)[0],s=[1,n[0],1];for(let e=0;e<a;e++)s[0]*=n[e];s[1]=n[a];for(let e=a+1;e<n.length;e++)s[2]*=n[e];const i={},o=new Int32Array(n[a]),u=new Ka(s,r,e),l=[],c=1===s[0]&&1===s[2];for(let t=0;t<n[a];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const d=s.slice();d[1]=Object.keys(i).length;const h=new Ka(d,r);l.forEach((e,t)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)h.set(u.get(n,e,r),n,t,r)});const p=n.slice();return p[a]=d[1],{outputValues:h.values,outputShape:p,indices:o}}const hR={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;uT(s,"unique");const i=r.data.get(s.dataId).values,{outputValues:o,outputShape:u,indices:l}=dR(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},pR={kernelName:ea,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape.length,o=a.shape[s],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i).fill(0),d=a.shape.slice();d[s]=1;const h=new Array(o);for(let e=0;e<h.length;e++){c[s]=e;const t=_C({inputs:{x:a},backend:n,attrs:{begin:c,size:d}});h[e]=HT({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return h}},fR={kernelName:ta,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r;uT(a,"unsortedSegmentSum");const o=[],u=[],l=a.shape.length-s.shape.length;let c=s;for(let e=0;e<l;++e){const t=P$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Da(e,"int32"),r=n.makeTensorInfo([],"int32",t),s=T$({inputs:{a:r,b:c},backend:n}),i=LT({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),l=x$({inputs:{a:i,b:a},backend:n}),d=v$({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(d),u.push(r),u.push(s),u.push(i),u.push(l),u.push(d)}const d=L_({inputs:o,backend:n,attrs:{axis:0}});return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),d}},mR=[XT,ZT,QT,tC,GT,nC,iC,oC,uC,lC,dC,pC,mC,bC,wC,SC,NC,TC,CC,KT,$C,RC,MC,OC,zT,PC,WC,FT,VC,qC,YC,ZC,XC,QC,e$,JC,n$,a$,s$,i$,o$,u$,c$,d$,h$,p$,f$,g$,m$,j$,I$,fT,S$,C$,M$,z$,B$,U$,eE,nE,rE,iE,lE,cE,dE,pE,mE,bE,vE,gT,kE,HC,SE,TE,$E,bT,AE,DE,OE,PE,WE,GE,jE,XE,YE,ZE,r_,a_,s_,i_,o_,u_,e_,l_,c_,p_,f_,y_,v_,w$,I_,N_,C_,E_,R_,F_,O_,z_,P_,V_,kT,G_,j_,OT,K_,ST,TT,jT,X_,Y_,Z_,J_,Q_,eA,nA,sA,oA,uA,hA,_T,fA,gA,bA,AC,w_,vA,kA,SA,TA,$A,EA,_A,AA,DA,MA,zA,BA,VA,HA,KA,YA,Y$,k$,JA,{kernelName:Kr,backendName:"cpu",kernelFunc:QA},tR,sR,sC,iR,hR,pR,fR,M_];for(const e of mR)fa(e);const gR={},yR={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function bR(e){if(!(e in gR)){const t=function(e){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const t=function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e);return t.addEventListener("webglcontextlost",t=>{t.preventDefault(),delete gR[e]},!1),1===e?t.getContext("webgl",yR)||t.getContext("experimental-webgl",yR):t.getContext("webgl2",yR)}(e);if(null===t)return console.log("Could not get context for WebGL version",e),null;gR[e]=t}const t=gR[e];return t.isContextLost()?(delete gR[e],bR(e)):(t.disable(t.DEPTH_TEST),t.disable(t.STENCIL_TEST),t.disable(t.BLEND),t.disable(t.DITHER),t.disable(t.POLYGON_OFFSET_FILL),t.disable(t.SAMPLE_COVERAGE),t.enable(t.SCISSOR_TEST),t.enable(t.CULL_FACE),t.cullFace(t.BACK),gR[e])}var xR,wR,vR;function kR(e,t){return[t,e]}function IR(e){const t=de(e);return ge(Math.ceil(t/4))}function SR(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function NR(e,t){const n=e;let r,a,s,i,o,u,l,c,d,h;return 2===Je().getNumber("WEBGL_VERSION")?(r=n.R32F,a=n.R16F,s=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,d=n.HALF_FLOAT,h=n.FLOAT):(r=e.RGBA,a=e.RGBA,s=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,d=null!=t?t.HALF_FLOAT_OES:null,h=e.FLOAT),u=e.RGBA,{internalFormatFloat:r,internalFormatHalfFloat:a,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:d,textureTypeFloat:h}}function TR(e,t){const n=t();return Je().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function CR(e){return!!(Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function $R(e,t){return OR(e,()=>e.getExtension(t),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(xR||(xR={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(wR||(wR={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(vR||(vR={}));const ER=/ERROR: [0-9]+:([0-9]+):/g;function _R(e,t){if(TR(e,()=>e.validateProgram(t)),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function AR(e,t,n,r,a,s,i){const o=e.getAttribLocation(t,n);return-1!==o&&(TR(e,()=>e.bindBuffer(e.ARRAY_BUFFER,r)),TR(e,()=>e.vertexAttribPointer(o,a,e.FLOAT,!1,s,i)),TR(e,()=>e.enableVertexAttribArray(o)),!0)}function RR(e,t,n,r){TR(e,()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),TR(e,()=>e.activeTexture(e.TEXTURE0+n)),TR(e,()=>e.bindTexture(e.TEXTURE_2D,t))}(e,t,r)),TR(e,()=>e.uniform1i(n,r))}function FR(e,t,n){TR(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,n)),TR(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0))}function DR(e,t){TR(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,t)),TR(e,()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0))}function MR(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function OR(e,t,n){const r=TR(e,()=>t());if(null==r)throw new Error(n);return r}function LR(e,t=2){return de(e.slice(0,e.length-t))}function zR(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function PR(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[LR(e),...zR(e)]),t}function BR(e){return e%2==0}function WR(e,t){if(pe(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(BR(n)&&BR(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&BR(e[0])&&BR(t[0])}let VR,UR;function GR(e,t){return null!=e.getExtension(t)}function HR(e){try{if(null!=bR(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function jR(e){const t=NR(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),a}function qR(e,t){Array.isArray(e)||(e=[e]),e.forEach(e=>{null!=e&&oe("complex64"!==e.dtype,()=>`${t} does not support complex64 tensors in the WebGL backend.`)})}const KR=Je();function XR(){let e,t,n,r,a,s,i,o,u,l;return 2===Je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",a="texture",s="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",a="texture2D",s="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:a,output:s,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function YR(e,t,n="index"){const r=Le(t);return r.map((t,a)=>`int ${e[a]} = ${n} / ${t}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${t}`:`index -= ${e[a]} * ${t}`};`).join("")}function ZR(e,t,n="index"){const r=Le(t);return r.map((t,a)=>`int ${e[a]} = ${n} / outShapeStrides[${a}]; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * outShapeStrides[${a}]`:`index -= ${e[a]} * outShapeStrides[${a}]`};`).join("")}function JR(e){const t=Le(e).map(e=>e.toString());return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}KR.registerFlag("HAS_WEBGL",()=>KR.getNumber("WEBGL_VERSION")>0),KR.registerFlag("WEBGL_VERSION",()=>HR(2)?2:HR(1)?1:0),KR.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",()=>!1),KR.registerFlag("WEBGL_BUFFER_SUPPORTED",()=>2===KR.get("WEBGL_VERSION")),KR.registerFlag("WEBGL_CPU_FORWARD",()=>!0),KR.registerFlag("WEBGL_FORCE_F16_TEXTURES",()=>!1),KR.registerFlag("WEBGL_PACK",()=>KR.getBool("HAS_WEBGL")),KR.registerFlag("WEBGL_PACK_NORMALIZATION",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_CLIP",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_DEPTHWISECONV",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_PACK_REDUCE",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_LAZILY_UNPACK",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_CONV_IM2COL",()=>KR.getBool("WEBGL_PACK")),KR.registerFlag("WEBGL_MAX_TEXTURE_SIZE",()=>function(e){if(null==VR){const t=bR(e);VR=t.getParameter(t.MAX_TEXTURE_SIZE)}return VR}(KR.getNumber("WEBGL_VERSION"))),KR.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",()=>function(e){if(null==UR){const t=bR(e);UR=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,UR)}(KR.getNumber("WEBGL_VERSION"))),KR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",()=>{const e=KR.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=bR(e);return t=GR(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:GR(n,"EXT_disjoint_timer_query")?1:0,t}(e)}),KR.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",()=>KR.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ks()),KR.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",()=>function(e){if(0===e)return!1;const t=bR(e);if(1===e){if(!GR(t,"OES_texture_float"))return!1}else if(!GR(t,"EXT_color_buffer_float"))return!1;return jR(t)}(KR.getNumber("WEBGL_VERSION"))),KR.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",()=>!KR.getBool("WEBGL_FORCE_F16_TEXTURES")&&KR.getBool("WEBGL_RENDER_FLOAT32_CAPABLE")),KR.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",()=>function(e){if(0===e)return!1;const t=bR(e);if(1!==e){if(GR(t,"EXT_color_buffer_float"))return jR(t);const e="EXT_color_buffer_half_float";if(GR(t,e)){const n=t.getExtension(e);return function(e,t){const n=NR(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const a=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,a),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(a),s}(t,n)}return!1}return!!GR(t,"OES_texture_float")&&!!GR(t,"WEBGL_color_buffer_float")&&jR(t)}(KR.getNumber("WEBGL_VERSION"))),KR.registerFlag("WEBGL_FENCE_API_ENABLED",()=>{return 2===(e=KR.getNumber("WEBGL_VERSION"))&&null!=bR(e).fenceSync;var e}),KR.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",()=>KR.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0),KR.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",()=>-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)}),KR.registerFlag("WEBGL_FLUSH_THRESHOLD",()=>ks()?1:-1,e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)}),KR.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",()=>128),KR.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",()=>!1),KR.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",()=>1e5),KR.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",()=>128);const QR="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:eF}=m;function tF(e,t,n){const r=[];if(e.forEach(e=>{const t=de(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=dF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}}),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach(e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)});const a=r.join("\n"),s=e.map(e=>function(e,t,n=!1,r){let a="";a+=n?rF(e,r):nF(e,r);const s=e.shapeInfo.logicalShape,i=t.logicalShape;return s.length<=i.length&&(a+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=eF(e.shapeInfo.logicalShape,t.logicalShape),u=cF(i),l=i-s;let c;const d=["x","y","z","w","u","v"];c=0===s?"":i<2&&o.length>=1?"coords = 0;":o.map(e=>`coords.${d[e+l]} = 0;`).join("\n");let h="";h=i<2&&s>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${d[t+l]}`).join(", ");let p="return outputValue;";const f=1===de(e.shapeInfo.logicalShape),m=1===de(t.logicalShape);if(1!==s||f||m){if(f&&!m)p=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=s-2,t=s-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?p="return vec4(outputValue.x);":o.indexOf(e)>-1?p="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(p="return vec4(outputValue.xx, outputValue.zz);")}}else p="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${a}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${h});\n      ${p}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),a="get"+r+"AtOutCoords",s=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&pe(i,s))return`\n      float ${a}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=cF(u),c=eF(e.shapeInfo.logicalShape,t.logicalShape),d=u-o;let h;const p=["x","y","z","w","u","v"];h=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map(e=>`coords.${p[e+d]} = 0;`).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map((e,t)=>`coords.${p[t+d]}`).join(", "),`\n    float ${a}() {\n      ${l} coords = getOutputCoords();\n      ${h}\n      return get${r}(${f});\n    }\n  `}(e,t)),a}(e,t,n.packedInputs,n.enableShapeUniforms)).join("\n"),i=t.texShape,o=XR(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,d=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${aF}\n    ${sF}\n    ${iF}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(pe(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const a=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[2]/2),s=a*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],a=Math.ceil(e[e.length-1]/2),s=a*Math.ceil(e[e.length-2]/2);let i=s,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${s};\n      index -= b * ${s};\n\n      int r = 2 * (index / ${a});\n      int c = imod(index, ${a}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return pe(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${ZR(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=YR(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${ZR(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=YR(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=YR(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=YR(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(d+=oF),[d,u,c,a,l,s,n.userCode].join("\n")}function nF(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[a,s]=e.shapeInfo.texShape;if(1===a&&1===s)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=uF(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${lF(e)}\n      }\n    `;const a=e.shapeInfo.texShape,s=a[0],i=a[1];if(1===i&&1===s)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=uF(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${s}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===s?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${s}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape;if(null!=s&&pe(n,s)){if(t)return`\n      float ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=s[0];return`\n    float ${a}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${s[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=ke(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${nF(hF(e,u),t)}\n      float ${a}(int row, int col) {\n        return ${a}(${pF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${lF(e)}\n      }\n    `;const l=s[0],c=s[1],d=uF(r);return 1===c?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${a}(int row, int col) {\n        float index = dot(vec3(row, col, ${d}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col) {\n      float index = dot(vec3(row, col, ${d}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${a}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${d};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${a}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${d};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=ke(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${nF(hF(e,l),t)}\n        float ${a}(int row, int col, int depth) {\n          return ${a}(${pF(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${s}, ${i}, 1)));\n        ${lF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,d=c[0],h=c[1],p=e.shapeInfo.flatOffset;if(h===s&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${a}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${h}.0, ${d}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(h===i&&null==p)return t?`\n      float ${a}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${a}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${h}.0, ${d}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=uF(r);return t?`\n    float ${a}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${s} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${a}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${d}, ${h}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=n[3],i=n[2]*s,o=n[1]*i,{newShape:u,keptDims:l}=ke(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${nF(hF(e,u),t)}\n      float ${a}(int row, int col, int depth, int depth2) {\n        return ${a}(${pF(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${a}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${s}, 1)));\n        ${lF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(p===o&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(p===s&&null==c)return t?`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${a}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=uF(r);return t?`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${a}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${s} + depth2;\n      vec2 uv = uvFromFlat(${h}, ${p}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=t[4],s=t[3]*a,i=t[2]*s,o=t[1]*i,{newShape:u,keptDims:l}=ke(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${nF(hF(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${pF(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${s}, ${a})) +\n          depth3;\n        ${lF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,d=e.shapeInfo.texShape,h=d[0],p=d[1];if(p===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${s}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(p===a&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${p}.0, ${h}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${s} +\n          depth2 * ${a} + depth3 + ${uF(n)};\n      vec2 uv = uvFromFlat(${h}, ${p}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:a,keptDims:s}=ke(t);if(a.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${nF(hF(e,a))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${pF(t,s)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${lF(e)}\n      }\n    `;const d=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],f=h[1];if(f===c&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==d)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${uF(n)};\n      vec2 uv = uvFromFlat(${p}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function rF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${XR().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=e.shapeInfo.texShape,s=XR();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=s[0],o=s[1],u=XR();if(null!=s&&pe(n,s))return t?`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${a}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${a}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${a}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,a="get"+r.charAt(0).toUpperCase()+r.slice(1),s=e.shapeInfo.texShape,i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];if(1===n[0]){const r=[1,2],s=["b","row","col"];return`\n        ${rF(hF(e,n.slice(1)),t)}\n        vec4 ${a}(int b, int row, int col) {\n          return ${a}(${pF(s,r)});\n        }\n      `}const o=XR();if(t)return`\n    vec4 ${a}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${a}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),a=XR();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${a.texture2D}(${n}, uv);\n    }\n  `;const s=e.shapeInfo.logicalShape,i=s.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],d=Math.ceil(s[i-1]/2);let h=d*Math.ceil(s[i-2]/2),p="int b, int row, int col",f=`b * ${h} + (row / 2) * ${d} + (col / 2)`;for(let e=2;e<i-1;e++)p=`int b${e}, `+p,h*=s[i-e-1],f=`b${e} * ${h} + `+f;return`\n    vec4 ${r}(${p}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const aF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",sF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",iF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",oF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function uF(e){return`offset${e}`}function lF(e){const t=e.name,n=de(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function cF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function dF(e,t,n){const{newShape:r,keptDims:a}=ke(t),s=t.length,i=e&&3===s&&1===t[0],o=i?t.slice(1):r,u=!e&&s>1&&!pe(t,n)&&r.length<s||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:a}}function hF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function pF(e,t){return t.map(t=>e[t]).join(", ")}function fF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach((e,n)=>{const r=e.logicalShape,a=t[n],s=a.shape;if(!pe(r,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${s} must match`);if(e.isUniform&&a.isUniform)return;const i=e.texShape,o=a.isUniform?null:a.texData.texShape;if(!pe(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)})}function mF(e){return Je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class gF{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=xR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=XR();this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZR(["r","c","d"],e):YR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class yF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=xR.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=XR();this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?ZR(["r","c","d"],e):YR(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class bF{constructor(e){this.variableNames=["A"],this.outTexUsage=wR.DOWNLOAD;const t=XR();this.outputShape=e,this.userCode=`\n      ${QR}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class xF{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=wR.DOWNLOAD;const t=XR();this.outputShape=e,this.userCode=`\n      ${QR}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class wF{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=XR();this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JR(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class vF{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=XR();this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length);let r="",a="result";t&&(a="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let a=0;a<=1;a++){const s=2*t+a;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${a} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${a};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${s}] = values[0];\n            } else if (offset == 1) {\n              result[${s}] = values[1];\n            } else if (offset == 2) {\n              result[${s}] = values[2];\n            } else {\n              result[${s}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JR(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${a};\n        }\n    `}}function kF(e,t,n,r,a,s){!function(e,t){const n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return OR(e,()=>e.createTexture(),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return TR(e,()=>e.bindTexture(o,i)),TR(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE)),TR(e,()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE)),TR(e,()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST)),TR(e,()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST)),TR(e,()=>e.texImage2D(o,0,r,t,n,0,a,s,null)),TR(e,()=>e.bindTexture(e.TEXTURE_2D,null)),i}function IF(e){return e.internalFormatFloat}function SF(e){return e.internalFormatHalfFloat}function NF(e){return e.downloadTextureFormat}function TF(e){return e.internalFormatPackedFloat}function CF(e){return e.internalFormatPackedHalfFloat}class $F{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=Je().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){gR[e]=t}(t,e)):this.gl=bR(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===Je().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=$R(this.gl,e),GR(this.gl,t))this.textureHalfFloatExtension=$R(this.gl,t);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),GR(this.gl,r))this.colorBufferHalfFloatExtension=$R(this.gl,r);else if(Je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",GR(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!GR(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=OR(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return TR(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),TR(e,()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=OR(e,()=>e.createBuffer(),"Unable to create WebGLBuffer");return TR(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n)),TR(e,()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW)),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return OR(e,()=>e.createFramebuffer(),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=NR(this.gl,this.textureHalfFloatExtension)}get debug(){return Je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;TR(e,()=>e.finish()),TR(e,()=>e.bindFramebuffer(e.FRAMEBUFFER,null)),TR(e,()=>e.deleteFramebuffer(this.framebuffer)),TR(e,()=>e.bindBuffer(e.ARRAY_BUFFER,null)),TR(e,()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null)),TR(e,()=>e.deleteBuffer(this.indexBuffer)),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=kR(t,n);return kF(e,a,s,IF(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=kR(t,n);return kF(e,a,s,SF(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=kR(t,n);return kF(e,a,s,NF(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){TR(e,()=>e.bindTexture(e.TEXTURE_2D,t)),n.data instanceof Uint8Array?TR(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data)):TR(e,()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n)),TR(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,a,s){let i,o,u;TR(e,()=>e.bindTexture(e.TEXTURE_2D,t)),a instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=s.internalFormatPackedFloat),i.set(a),TR(e,()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i)),TR(e,()=>e.bindTexture(e.TEXTURE_2D,null))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=SR(t,n);return kF(e,a,s,CF(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[a,s]=SR(t,n);return kF(e,a,s,TF(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(DR(this.gl,this.framebuffer),this.outputTexture=null),TR(this.gl,()=>this.gl.deleteTexture(e))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n,r){const[a,s]=kR(t,n),i=new Uint8Array(t*n*4);return TR(e,()=>e.readPixels(0,0,a,s,r.downloadTextureFormat,e.UNSIGNED_BYTE,i)),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig))}downloadPackedMatrixFromBuffer(e,t,n,r,a,s){return function(e,t,n,r,a,s,i){const o=e,u=new Float32Array(function(e,t){const[n,r]=SR(e,t);return n*r*4}(s,i));return o.bindBuffer(o.PIXEL_PACK_BUFFER,t),o.getBufferSubData(o.PIXEL_PACK_BUFFER,0,u),o.bindBuffer(o.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,a,s,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,a=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,a),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),a}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n){const r=e.createBuffer();TR(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r));const a=16*t*n;return TR(e,()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ)),TR(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0)),TR(e,()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null)),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(Je().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,a=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(a,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=a}else Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,()=>function(e,t,n){const r=new Float32Array(t*n*4);return TR(e,()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r)),r}(this.gl,t,n))}createProgram(e){this.throwIfDisposed();const t=this.gl,n=function(e,t){const n=OR(e,()=>e.createShader(e.FRAGMENT_SHADER),"Unable to create fragment WebGLShader.");if(TR(e,()=>e.shaderSource(n,t)),TR(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=ER.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],a=e.split("\n"),s=a.length.toString().length+2,i=a.map((e,t)=>be((t+1).toString(),s)+e);let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${be(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(t,e);null==this.vertexShader&&(this.vertexShader=function(e){const t=XR();return function(e,t){const n=OR(e,()=>e.createShader(e.VERTEX_SHADER),"Unable to create vertex WebGLShader.");if(TR(e,()=>e.shaderSource(n,t)),TR(e,()=>e.compileShader(n)),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const r=function(e){return OR(e,()=>e.createProgram(),"Unable to create WebGLProgram.")}(t);return TR(t,()=>t.attachShader(r,this.vertexShader)),TR(t,()=>t.attachShader(r,n)),function(e,t){if(TR(e,()=>e.linkProgram(t)),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,r),this.debug&&_R(t,r),this.vertexAttrsAreBound||(this.setProgram(r),this.vertexAttrsAreBound=function(e,t,n){return TR(e,()=>e.bindBuffer(e.ARRAY_BUFFER,n)),AR(e,t,"clipSpacePos",n,3,20,0)&&AR(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),r}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&TR(this.gl,()=>this.gl.deleteProgram(e))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&_R(this.gl,this.program),TR(this.gl,()=>this.gl.useProgram(e))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return OR(e,()=>e.getUniformLocation(t,n),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),TR(this.gl,()=>this.gl.getAttribLocation(e,t))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),RR(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,a]=SR(t,n);this.setOutputMatrixTextureDriver(e,r,a)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&_R(this.gl,this.program),MR(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),TR(e,()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),TR(this.gl,()=>this.gl.finish())}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=$R(this.gl,2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await xe(()=>this.disposed||this.isQueryAvailable(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))),this.getQueryTime(e,Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise(t=>{this.addItemToPoll(()=>e.isFencePassed(),()=>t())})}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map(e=>e.isDoneFn));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||xe(()=>(this.pollItems(),0===this.itemsToPoll.length))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),FR(this.gl,e,this.framebuffer),this.debug&&MR(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(FR(this.gl,this.outputTexture,this.framebuffer),this.debug&&MR(this.gl)):DR(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;FR(r,e,this.framebuffer),this.debug&&MR(r),this.outputTexture=e,TR(r,()=>r.viewport(0,0,t,n)),TR(r,()=>r.scissor(0,0,t,n))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),TR(this.gl,()=>this.gl.scissor(e,t,n,r))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{mx:EF,XI:_F,Nk:AF,YG:RF,hH:FF,z3:DF,sG:MF,uM:OF,vS:LF,qB:zF,GG:PF,rq:BF,lg:WF,WR:VF,cu:UF,GE:GF,px:HF,jC:jF,He:qF,hE:KF,BF:XF,Dk:YF,cl:ZF,_B:JF,qy:QF,Zy:eD,zv:tD,dH:nD,HS:rD,yH:aD,l3:sD,z9:iD,x6:oD,eW:uD,GK:lD,SP:cD,f6:dD,dl:hD,Dw:pD,xT:fD,_X:mD,wz:gD}=U;function yD(e,t){return["x","y","z","w","u","v"].slice(0,t).map(t=>`${e}.${t}`)}function bD(e,t){return 1===t?[e]:yD(e,t)}class xD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e;const t=e.length;if(0===t)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=bD("rc",t),r=cF(t),a=function(e,t,n){if(1===e)return`rc > ${t[0]}`;let r="";for(let a=e-2;a<e;a++)r+=`${n[a]} >= ${t[a]}`,a<e-1&&(r+="||");return r}(t,e,n),s=function(e,t,n,r){if(1===e)return"";const a=r.slice(-2);return`\n    int r = ${a[0]};\n    int c = ${a[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${t};\n    bool rEdge = rp1 >= ${n};\n  `}(t,e[e.length-1],e[e.length-2],n),i=function(e,t){const n=e.length,r=function(e,t){const n=[];for(let r=0;r<=1;r++)for(let a=0;a<=1;a++){let s=`${0===r?"r":"rp1"}, ${0===a?"c":"cp1"}`;for(let n=2;n<e;n++)s=`${t[t.length-1-n]},`+s;n.push(s)}return n}(n,t);return 1===n?`getA(rc),\n            rc + 1 >= ${e[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(e,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${a}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${i}));\n          }\n        }\n      `}}}class wD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,a;this.userCode=`\n      ${r=t,a=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${a?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map(e=>`${t}[${e}]`),a=new Array(n-1);a[n-2]=r[n-1];for(let e=n-3;e>=0;--e)a[e]=`(${a[e+1]} * ${r[e+1]})`;return a}(e.map((e,t)=>t),t);return r.map((t,a)=>`int ${e[a]} = ${n} / ${r[a]}; ${a===r.length-1?`int ${e[a+1]} = ${n} - ${e[a]} * ${r[a]}`:`index -= ${e[a]} * ${r[a]}`};`).join("")}(["r","c","d"],"inputShape"):YR(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":JR(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class vD{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=ID(t,n),a=SD(e,r,n);a in this.freeTextures||(this.freeTextures[a]=[]),a in this.usedTextures||(this.usedTextures[a]=[]);const s=kD(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[a].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=s,this.log();const e=this.freeTextures[a].shift();return this.usedTextures[a].push(e),e}let i;return r===vR.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===vR.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===vR.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===vR.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===vR.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[a].push(i),this.numUsedTextures++,this._numBytesAllocated+=s,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const a=ID(n,r),s=SD(t,a,r);s in this.freeTextures||(this.freeTextures[s]=[]);const i=kD(t,a,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=Je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e),this._numBytesAllocated-=i):(this.freeTextures[s].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[s],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});for(const e in this.usedTextures)this.usedTextures[e].forEach(e=>{this.gpgpu.deleteMatrixTexture(e)});this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function kD(e,t,n,r,a){const s=function(e,t){switch(e){case vR.PACKED_2X2_FLOAT32:return TF(t);case vR.PACKED_2X2_FLOAT16:return CF(t);case vR.UNPACKED_FLOAT32:return IF(t);case vR.UNPACKED_FLOAT16:return SF(t);case vR.PACKED_4X1_UNSIGNED_BYTE:return NF(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(a){const[t,n]=SR(e[0],e[1]);i=t*n}else{const[t,n]=kR(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${t}`)}(n,s);return i*o}function ID(e,t){if(e===wR.UPLOAD)return vR.PACKED_2X2_FLOAT32;if(e===wR.RENDER||null==e)return function(e){return Je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?vR.PACKED_2X2_FLOAT32:vR.UNPACKED_FLOAT32:e?vR.PACKED_2X2_FLOAT16:vR.UNPACKED_FLOAT16}(t);if(e===wR.DOWNLOAD||e===wR.PIXELS)return vR.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function SD(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class ND{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const TD="if (isnan(x)) return x;",CD="return abs(x);",$D=TD+"\n  return (x < 0.0) ? 0.0 : x;\n",ED=TD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_D="return x;";class AD{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class RD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e;const t=e.length,n=bD("rc",t),r=cF(t),a=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),s=n.slice(-2),i=t<=1?"rc":`vec2(${s.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${a});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const FD=yh,DD={},MD=Je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class OD extends Z{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!Je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==e){const e=bR(Je().getNumber("WEBGL_VERSION"));this.binaryCache=((t=Je().getNumber("WEBGL_VERSION"))in DD||(DD[t]={}),DD[t]),this.gpgpu=new $F(e),this.canvas=e.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=e,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=e.gl.canvas;var t;this.textureManager=new vD(this.gpgpu),this.numMBBeforeWarning=null==Je().global.screen?1024:Je().global.screen.height*Je().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new Y(this,Jo())}nextDataId(){return OD.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((Je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||Je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:wR.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,a){if(Je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:wR.UPLOAD,refCount:a})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:a,slice:s,shape:i,isPacked:o}=t;if(null!=s){let t;t=o?new AD(i,_D):new ND(i,_D);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),a=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=Oa()),c="complex64"===r?of(this.readSync(a.real.dataId),this.readSync(a.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=Oa()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise(e=>t.push(e))}const t=this.texData.get(e),{values:n,shape:r,slice:a,dtype:s,complexTensorInfos:i,isPacked:o}=t;if(null!=a){let t;t=o?new AD(r,_D):new ND(r,_D);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:s}],s),a=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),a}if(null!=n)return this.convertAndCacheOnCPU(e);if(!Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===Je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==s&&Je().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture,...IR(r))}if(this.pendingRead.set(e,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=of(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=de(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;TR(e,()=>e.deleteBuffer(c))}const d=this.convertAndCacheOnCPU(e,l),h=this.pendingRead.get(e);return this.pendingRead.delete(e),h.forEach(e=>e(d)),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Jo().removeDataId(e,this),this.pendingDeletes--),d}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map(e=>Pa(e))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return _i(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!CR(n)){if(Je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),a=de(t);if(Je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),s=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...IR(t)).subarray(0,a);return this.disposeIntermediateTensorInfo(n),s}const s=Je().getBool("WEBGL_PACK")&&!0===r,i=s?PR(t):t,o=s?new xF(i):new bF(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,a);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}async time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const a=ce(this.activeTimers.map(e=>e.query)).filter(e=>null!=e),s=ce(this.activeTimers.map(e=>e.name)).filter(e=>null!=e);this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(a);i.kernelMs=ae(e),i.getExtraProfileInfo=()=>e.map((e,t)=>({name:s[t],ms:e})).map(e=>`${e.name}: ${e.ms}`).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Oa(),endMs:null}}endTimer(e){return Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Oa(),e)}async getQueryTime(e){if(Je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:a,isPacked:s,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,a,s)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=MD){return Je().getBool("WEBGL_CPU_FORWARD")&&e.every(e=>null==this.texData.get(e.dataId).texture&&de(e.shape)<t)}getGPGPUContext(){return this.gpgpu}where(e){qe("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return FD(e.shape,t)}packedUnaryOp(e,t,n){const r=new AD(e.shape,t),a=this.compileAndRun(r,[e],n);return Jo().makeTensorFromDataId(a.dataId,a.shape,a.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=nD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(Je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,CD,e.dtype);const t=new ND(e.shape,CD),n=this.compileAndRun(t,[e]);return Jo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ae(n[0])){const a=n.map(e=>za(e));r=this.write(a,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Jo().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new RD(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new xD(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[LR(e.shape),...zR(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},a=[LR(t),...zR(t)],s=new wD(a,n),i=[n],o=this.runWebGLProgram(s,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e){const t=this.texData.get(e),{isPacked:n,shape:r,dtype:a}=t,s=PR(r);let i;const o=IR(s);i=n?new yF(s):new gF(s);const u=[o];return{dtype:a,shape:r,dataId:this.runWebGLProgram(i,[{shape:s,dtype:a,dataId:e}],a,u,!0).dataId}}runWebGLProgram(e,t,n,r,a=!1){const s=this.makeTensorInfo(e.outputShape,n),i=this.texData.get(s.dataId);if(e.packedOutput&&(i.isPacked=!0),e.outPackingScheme===xR.DENSE){const t=IR(e.outputShape);i.texShape=t.map(e=>2*e)}if(null!=e.outTexUsage&&(i.usage=e.outTexUsage),0===de(s.shape))return i.values=Ie(s.dtype,0),s;const o=[],u=t.map(t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&de(t.shape)<=Je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}else if(!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),o.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!WR(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),o.push(t),n=this.texData.get(t.dataId),e.shape=r}return this.uploadToGPU(t.dataId),{shape:t.shape,texData:n,isUniform:!1}});this.uploadToGPU(s.dataId);const l={shape:s.shape,texData:i,isUniform:!1},c=function(e,t,n){let r="";t.concat(n).forEach(t=>{const a=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const s=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=dF(e.packedInputs,t.shape,s);let l="",c="",d="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Le(o);d=`${e[0]===s[1]}_${e[e.length-1]===s[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const h=t.shape.length,p=2===o.length&&pe(t.shape,s),f=1===de(t.shape),m=Lu(t.shape,n.shape),g=!e.packedInputs&&h===n.shape.length&&pe(s,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${s[0]>1}_${s[1]>1}`;r+=`${h}_${g}_${i?u:""}_${o.length}_${f}_${m}_${p}_${l}_${c}_${d}_${y}_${a}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${a}`}});const a=e.userCode;let s=e.constructor.name;return s+="_"+r+"_"+a+`${Je().getNumber("WEBGL_VERSION")}`,s}(e,u,l),d=this.getAndSaveBinary(c,()=>function(e,t,n,r){const a=n.map((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}}),s=a.map(e=>e.shapeInfo),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=tF(a,i,t),u=e.createProgram(o);let l=null;const c=e.getUniformLocation(u,"NAN",!1);1===Je().getNumber("WEBGL_VERSION")&&(l=e.getUniformLocation(u,"INFINITY",!1));const d=!1,h={},p={},f={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];h[r]=e.getUniformLocation(u,r,d),h[`offset${r}`]=e.getUniformLocation(u,`offset${r}`,d),t.enableShapeUniforms&&(p[`${r}Shape`]=e.getUniformLocation(u,`${r}Shape`,d),f[`${r}TexShape`]=e.getUniformLocation(u,`${r}TexShape`,d))}let m,g,y;t.enableShapeUniforms&&(m=e.getUniformLocation(u,"outShape",d),y=e.getUniformLocation(u,"outShapeStrides",d),g=e.getUniformLocation(u,"outTexShape",d));const b=[];return t.customUniforms&&t.customUniforms.forEach((t,n)=>{b[n]=e.getUniformLocation(u,t.name,d)}),{program:t,source:o,webGLProgram:u,uniformLocations:h,customUniformLocations:b,inShapeInfos:s,outShapeInfo:i,infLoc:l,nanLoc:c,inShapesLocations:p,inTexShapesLocations:f,outShapeLocation:m,outShapeStridesLocation:y,outTexShapeLocation:g}}(this.gpgpu,e,u,l)),h=null!=this.activeTimers;let p;h&&(p=this.startTimer()),function(e,t,n,r,a){t.program.enableShapeUniforms||(fF(t.inShapeInfos,n),fF([t.outShapeInfo],[r]));const s=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(s,i[0],i[1]):e.setOutputMatrixTexture(s,i[0],i[1]),e.setProgram(t.webGLProgram),1===Je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach((n,r)=>{const a=t.program.variableNames[r],s=t.uniformLocations[a],i=t.uniformLocations[`offset${a}`],o=t.inShapesLocations[`${a}Shape`],u=t.inTexShapesLocations[`${a}TexShape`];if(o){const{uniformShape:r}=dF(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=s)if(n.isUniform)if(de(n.shape)<2)e.gl.uniform1f(s,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(s,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture,s,r)});const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Le(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&a&&t.program.customUniforms.forEach((n,r)=>{const s=t.customUniformLocations[r],i=a[r];if("float"===n.type)e.gl.uniform1fv(s,i);else if("vec2"===n.type)e.gl.uniform2fv(s,i);else if("vec3"===n.type)e.gl.uniform3fv(s,i);else if("vec4"===n.type)e.gl.uniform4fv(s,i);else if("int"===n.type)e.gl.uniform1iv(s,i);else if("ivec2"===n.type)e.gl.uniform2iv(s,i);else if("ivec3"===n.type)e.gl.uniform3iv(s,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(s,i)}}),e.executeProgram()}(this.gpgpu,d,u,l,r),o.forEach(e=>this.disposeIntermediateTensorInfo(e)),h&&(p=this.endTimer(p),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(p)}));const f=Je().get("WEBGL_FLUSH_THRESHOLD");if(f>0){const e=Oa();e-this.lastGlFlushTime>f&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!Je().getBool("WEBGL_LAZILY_UNPACK")&&i.isPacked&&!1===a){const e=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),e}return s}compileAndRun(e,t,n,r,a=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,a)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(Je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach(e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]}),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=tu(()=>{if(!Je().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=Je().getBool("DEBUG");Je().set("DEBUG",!1);const t=this.abs($u(1e-8)).dataSync()[0];if(Je().set("DEBUG",e),t>0)return 32}return 16})),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:a,texture:s,usage:i,isPacked:o}=t;if(null!=s)return;const u=null!=this.activeTimers;let l;u&&(l=Oa());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=Je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map((t,n)=>n>=e.length-2?ne(e[n]):e[n])).length&&(e=[2,e[0]])),2!==e.length){const t=ke(e);e=t.newShape}let r=de(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=LR(e);let n=2,a=2;return e.length&&([n,a]=zR(e)),r=t*(n/2)*(a/2),ge(r).map(e=>2*e)}return ge(r)}(n,o),t.texShape=c),null!=a){const e=PR(n);let s,i=c[1],d=c[0];const h=a instanceof Uint8Array||a instanceof Uint8ClampedArray;o?([i,d]=SR(c[0],c[1]),s=new vF(e,h)):s=new wF(e,h);const p=this.makeTensorInfo([d,i],r);this.texData.get(p.dataId).usage=h?wR.PIXELS:wR.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(p.dataId),i,d,a);const f=[[d,i]],m=!0,g=this.runWebGLProgram(s,[p],r,f,m),y=this.texData.get(g.dataId);t.texture=y.texture,t.texShape=y.texShape,t.isPacked=y.isPacked,t.usage=y.usage,this.disposeIntermediateTensorInfo(p),this.texData.delete(g.dataId),t.values=null,u&&(this.uploadWaitMs+=Oa()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ee(t)}}OD.nextDataId=0,Is()&&du("webgl",()=>new OD,2);const LD="\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n";class zD{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Pu(t,n),this.enableShapeUniforms=mF(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const PD="\n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n";class BD{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Pu(t,n);const a=this.outputShape.length;this.enableShapeUniforms=mF(a);let s="";if(r)if(0===a||1===de(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${cF(a)} coords = getOutputCoords();\n        `,1===a)this.enableShapeUniforms?s+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=bD("coords",a);this.enableShapeUniforms?s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= outShape[${a} - 2];\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= outShape[${a} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:s+=`\n            bool nextRowOutOfBounds =\n              (${e[a-2]} + 1) >= ${this.outputShape[a-2]};\n            bool nextColOutOfBounds =\n              (${e[a-1]} + 1) >= ${this.outputShape[a-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}function WD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const VD={kernelName:yn,backendName:"webgl",kernelFunc:WD};function UD(e){const{inputs:t,backend:n}=e,{real:r,imag:a}=t,s=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(s.dataId),o=WD({inputs:{x:r},backend:n}),u=WD({inputs:{x:a},backend:n});return i.complexTensorInfos={real:o,imag:u},s}const GD={kernelName:Et,backendName:"webgl",kernelFunc:UD},HD="return (a < 0.) ? b * a : a;",jD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",qD={kernelName:In,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{alpha:s}=r,i=n.makeTensorInfo([],"float32",Da(s,"float32")),o=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BD(jD,a.shape,i.shape):new zD(HD,a.shape,i.shape),u=n.runWebGLProgram(o,[a,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},KD="return (a < 0.) ? b * a : a;",XD="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",YD={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BD(XD,r.shape,a.shape):new zD(KD,r.shape,a.shape);return n.runWebGLProgram(s,[r,a],"float32")}},ZD="if (isnan(x)) return x;";function JD({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:a,backend:s})=>{const{x:i}=a,o=s,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new AD(i.shape,t):new ND(i.shape,e),o.runWebGLProgram(l,[i],u)}}function QD({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:a,dtype:s}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,a]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map(t=>{const[n,r]=t,a={dataId:n.dataId,dtype:n.dtype,shape:u.shape},s={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new zD(e,u.shape,l.shape);return c.runWebGLProgram(i,[a,s],os(n.dtype,r.dtype))}),s=UD({inputs:{real:r,imag:a},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(a),s}const d=s||os(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=a){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?Ef(e):e,r="string"===u.dtype?Ef(t):t,[s,i]=a(u.shape,l.shape,n,r,d),o=c.makeTensorInfo(i,d);return c.texData.get(o.dataId).values=s,o}let h;return h=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new BD(t,u.shape,l.shape,n):new zD(e,u.shape,l.shape),c.runWebGLProgram(h,[u,l],d)}}function eM(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":$D;if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":ED;if("prelu"===e)return t?XD:KD;if("leakyrelu"===e)return t?jD:HD;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class tM{constructor(e,t,n,r=!1,a=!1,s=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=mF(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),d=r?"i * 2, rc.y":"rc.y, i * 2",h=a?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=a?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=s?"result += getBiasAtOutCoords();":"";s&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${d});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${f[0]});\n          result += (${p[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class nM{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Pu(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const rM="return a * b;";function aM(e){const{inputs:t,backend:n}=e,{a:r,b:a}=t,s=os(r.dtype,a.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),s=new nM("return areal * breal - aimag * bimag;",r.shape,a.shape),i=new nM("return areal * bimag + aimag * breal;",r.shape,a.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:a.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:a.shape}],u=n.runWebGLProgram(s,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=UD({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,a])){const e=n.texData.get(r.dataId),t=n.texData.get(a.dataId),[i,o]=XF(r.shape,a.shape,e.values,t.values,s),u=n.makeTensorInfo(o,s);return n.texData.get(u.dataId).values=i,u}let i;return i=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BD(rM,r.shape,a.shape):new zD(rM,r.shape,a.shape),n.runWebGLProgram(i,[r,a],s)}const sM={kernelName:Kn,backendName:"webgl",kernelFunc:aM};function iM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{shape:s}=r,i=n,o=de(a.shape),u=we(s,o),l=de(u);oe(o===l,()=>`The new shape (${u}) has ${l} elements and the old shape (${a.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`);const c=i.texData.get(a.dataId);return!c.isPacked||WR(a.shape,u)||null!==c.texture&&WR(c.shape,u)?(i.incRef(a.dataId),{dataId:a.dataId,shape:u,dtype:a.dtype}):function(e,t,n){const r=[LR(e.shape),...zR(e.shape)],a={dtype:e.dtype,shape:r,dataId:e.dataId},s=[LR(t),...zR(t)],i=new wD(s,r),o=[r],u=n.runWebGLProgram(i,[a],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(a,u,i)}const oM={kernelName:hr,backendName:"webgl",kernelFunc:iM};class uM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${fe(e)?e.toPrecision(2):e}, ones);`}let l="";a%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class lM{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:a,outSize:s}=e;this.outputShape=[r,s];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let d=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,h="vec4";"all"===t?(i="1.0",d="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",h="bvec4"):"any"===t&&(i="0.0",d="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",h="bvec4");let p="";a%n>0&&(p=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${p}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${d}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${2===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${d}\n        } else if (${3===c}) {\n          ${h} values = ${h}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${d}\n        }\n        setOutput(${u});\n      }\n    `}}function cM(e,t,n,r){const a=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Hp(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let s=e;for(let i=0;i<a.length;i++){const{inSize:o,windowSize:u,outSize:l}=a[i];let c,d;c="mean"===n?0===i?new uM({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new uM({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new lM({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),d=s,s=r.runWebGLProgram(c,[s],t),d.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(d)}return s}class dM{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=cF(this.rank),a=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${a}));\n    }\n    `}}class hM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=cF(this.rank),a=yD("rc",this.rank),s=new Array(this.rank);for(let e=0;e<t.length;e++)s[t[e]]=a[e];const i=`vec2(${s.slice(-2).join()})`,o=`++${a[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${s.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${a[this.rank-1]};\n      if(++${a[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function pM(e,t,n){const r=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hM(e.shape,t):new dM(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function fM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r;return function(e,t,n,r){const a=t,s=e.shape.length,i=ve(a,e.shape);let o=i;const u=zc(o,s),l=null!=u;let c=e;l&&(c=pM(e,u,r),o=Bc(o.length,s)),Lc("sum",o,s);const[d,h]=Mc(c.shape,o);let p=d;n&&(p=Oc(d,i));const f=de(h),m=iM({inputs:{x:c},attrs:{shape:[de(e.shape)/f,f]},backend:r}),g=cM(m,us(e.dtype),"sum",r),y=iM({inputs:{x:g},attrs:{shape:p},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(a,s,i,n)}const mM={kernelName:Ar,backendName:"webgl",kernelFunc:fM};function gM(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{perm:s}=r,i=n,o=a.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=a.shape[s[e]];let l;if(i.shouldExecuteOnCPU([a])){const e=i.texData.get(a.dataId).values,t=mD(e,a.shape,a.dtype,s,u);l=i.makeTensorInfo(u,a.dtype),i.texData.get(l.dataId).values=t}else l=pM(a,s,i);return l}const yM={kernelName:Jr,backendName:"webgl",kernelFunc:gM};function bM({a:e,b:t,transposeA:n,transposeB:r,backend:a,bias:s=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,d=n?e.shape[l-2]:e.shape[l-1],h=r?t.shape[c-1]:t.shape[c-2],p=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=de(m),b=de(g);oe(l>=2&&c>=2&&(y===b||1===y||1===b),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${m}) and (${g}).`);const x=(y>b?e.shape.slice(0,-2):t.shape.slice(0,-2)).concat([p,f]);oe(d===h,()=>`Error in matMul: inner shapes (${d}) and (${h}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`);const w=n?[y,d,p]:[y,p,d],v=r?[b,f,h]:[b,h,f],k=iM({inputs:{x:e},backend:a,attrs:{shape:w}}),I=iM({inputs:{x:t},backend:a,attrs:{shape:v}}),S=[k,I],N=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=s,$=null!=i,E="leakyrelu"===u,_=null!=u?eM(u,!0):null;let A;if((1===p||1===f)&&T>1e3&&!1===(C||$||E||null!=_)){let e=k,t=I;n&&(e=gM({inputs:{x:k},backend:a,attrs:{perm:[0,2,1]}}),S.push(e)),r&&(t=gM({inputs:{x:I},backend:a,attrs:{perm:[0,2,1]}}),S.push(t));const s=1===f;let i=e;1!==f&&(i=iM({inputs:{x:e},backend:a,attrs:{shape:[N,T,1]}}),S.push(i));const o=1===f?2:1;let u=t;s&&(u=iM({inputs:{x:t},backend:a,attrs:{shape:[N,1,T]}}),S.push(u));const l=aM({inputs:{a:i,b:u},backend:a});A=fM({inputs:{x:l},backend:a,attrs:{axis:o,keepDims:!0}}),S.push(l)}else{const u=os(e.dtype,t.dtype),l=new tM(w,v,[N,p,f],n,r,C,_,$,E),c=[k,I];if(null!=s&&c.push(s),$&&c.push(i),E){const e=a.makeTensorInfo([],"float32",Da(o,"float32"));c.push(e),S.push(e)}A=a.runWebGLProgram(l,c,u)}const R=iM({inputs:{x:A},backend:a,attrs:{shape:x}});S.push(A);for(const e of S)a.disposeIntermediateTensorInfo(e);return R}const xM={kernelName:ia,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r;return bM({a,b:s,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:d,activation:c})}},wM="return abs(x);",vM={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=nD(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let a;return a=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AD(r.shape,wM):new ND(r.shape,wM),n.runWebGLProgram(a,[r],r.dtype)}},kM=JD({opSnippet:TD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),IM={kernelName:at,backendName:"webgl",kernelFunc:kM},SM=JD({opSnippet:TD+"\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),NM={kernelName:st,backendName:"webgl",kernelFunc:SM},TM="return a + b;",CM=QD({opSnippet:TM,packedOpSnippet:TM,supportsComplex:!0,cpuKernelImpl:EF}),$M={kernelName:it,backendName:"webgl",kernelFunc:CM};class EM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`float v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class _M{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map((e,t)=>`T${t}`);const n=[];this.variableNames.forEach(e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)});const r=this.variableNames.map(e=>`v${e}`).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const AM={kernelName:ot,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,a=n;if(1===a.length)return WD({inputs:{x:a[0]},backend:r});if(a.length>Je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(a.length/2),n=e({inputs:a.slice(0,t),backend:r}),s=e({inputs:a.slice(t),backend:r});return e({inputs:[n,s],backend:r})}const s=a.map(e=>e.dtype).reduce((e,t)=>os(e,t)),i=a.map(e=>e.shape),o=Je().getBool("WEBGL_PACK")?new _M(a[0].shape,i):new EM(a[0].shape,i);return r.runWebGLProgram(o,a,s)}},RM={kernelName:ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ve(s,a.shape);let l=u;const c=zc(l,o);let d=a;null!=c&&(d=gM({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Bc(l.length,o)),Lc("all",l,o);const[h,p]=Mc(d.shape,l),f=iM({inputs:{x:d},backend:n,attrs:{shape:[-1,de(p)]}}),m=cM(f,f.dtype,"all",n);let g;return g=iM(i?{inputs:{x:m},backend:n,attrs:{shape:Oc(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},FM={kernelName:lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ve(s,a.shape);let l=u;const c=zc(l,o);let d=a;null!=c&&(d=gM({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Bc(l.length,o)),Lc("any",l,o);const[h,p]=Mc(d.shape,l),f=iM({inputs:{x:d},backend:n,attrs:{shape:[-1,de(p)]}}),m=cM(f,f.dtype,"any",n);let g;return g=iM(i?{inputs:{x:m},backend:n,attrs:{shape:Oc(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}};class DM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:a,outSize:s}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[a,s];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class MM{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,oe(e.length>2,()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`);const a=e[e.length-1],s=Math.ceil(a/t);this.outputShape=e.slice(0,-1),s>1&&this.outputShape.push(s),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=cF(o),l=bD("coords",o);let c,d;if(1===s){d=o+1;const e=cF(d);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else d=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const h=["x","y","z","w","u","v"].slice(0,d),p="."+h[d-1],f=h.map(e=>"int "+e),m=bD("sourceLocR",d-1).concat("inIdx.r"),g=bD("sourceLocG",d-1).concat("inIdx.g"),y=bD("sourceLocB",d-1).concat("inIdx.b"),b=bD("sourceLocA",d-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${h.join()}),\n                                          vec2(${h.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${h.join()}),\n                               vec2(${h.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${p}, sourceLocG${p},\n          sourceLocB${p}, sourceLocA${p}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function OM(e,t,n,r=null){let a=t.shape[0],s=t.shape[1];null!=r&&(a=r.shape[0],s=r.shape[1]);const i=Hp(s),o={windowSize:i,inSize:s,batchSize:a,outSize:Math.ceil(s/i)},u=new DM(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const d=OM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),d}function LM(e,t,n,r=null){const a=null!=r?r.shape:t.shape,s=Hp(a[a.length-1]),i=new MM(a,s,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=LM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function zM(e,t,n,r){const a=[n];if(Lc("arg"+r.charAt(0).toUpperCase()+r.slice(1),a,t.shape.length),!Je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],s=e.texData.get(t.dataId);let i=t;null!==s&&s.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Mc(i.shape,a),l=de(u),c=iM({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const d=OM(e,c,r);n.push(d);const h=iM({inputs:{x:d},backend:e,attrs:{shape:o}});return n.forEach(t=>e.disposeIntermediateTensorInfo(t)),h}return LM(e,t,r)}const PM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ve(s,a.shape);const o=zc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=gM({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Bc(i.length,u.shape.length)),Lc("argMax",[i[0]],u.shape.length);const c=zM(n,u,i[0],"max");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},BM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s}=r;let i=ve(s,a.shape);const o=zc(i,a.shape.length);let u=a;const l=[];null!=o&&(u=gM({inputs:{x:a},backend:n,attrs:{perm:o}}),l.push(u),i=Bc(i.length,u.shape.length)),Lc("argMin",[i[0]],u.shape.length);const c=zM(n,u,i[0],"min");return l.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}},WM=JD({opSnippet:TD+"\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),VM={kernelName:ht,backendName:"webgl",kernelFunc:WM},UM=JD({opSnippet:TD+"return log(x + sqrt(x * x + 1.0));"}),GM={kernelName:pt,backendName:"webgl",kernelFunc:UM},HM=JD({opSnippet:TD+"\n  return atan(x);\n"}),jM={kernelName:ft,backendName:"webgl",kernelFunc:HM},qM=QD({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),KM={kernelName:gt,backendName:"webgl",kernelFunc:qM},XM=JD({opSnippet:TD+"\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),YM={kernelName:mt,backendName:"webgl",kernelFunc:XM};class ZM{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,d=e.effectiveFilterWidth,h=e.padInfo.top,p=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${h}, ${p});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${d};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?a?m:g:`wR * ${d} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(s/4),w=s%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${h}, ${p});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class JM{constructor(e,t,n,r=!1,a=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const s=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,d=e.dilationWidth,h=e.effectiveFilterDepth,p=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${h};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${p};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${d}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?a?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${p} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(s/4),k=s%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${h};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${p};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${d};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${d}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${d}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${d}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const QM={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qR(a,"avgPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;oe(ml(i,1),()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=sl(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&pe(l.inShape,l.outShape))return WD({inputs:{x:a},backend:n});const c=new ZM(l,"avg",!1);return n.runWebGLProgram(c,[a],"float32")}},eO={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=il(a.shape,s,i,[1,1,1],o,u,l),d=new JM(c,"avg",!1);return n.runWebGLProgram(d,[a],"float32")}};class tO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,d=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${d});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class nO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,d=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=c-1-e.padInfo.front,f=d-1-e.padInfo.top,m=h-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${p}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${a}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${d};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const rO={kernelName:wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=il(i.shape,o,u,[1,1,1],l,c),h=new nO(d);return n.runWebGLProgram(h,[a],i.dtype)}},aO={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s;qR([a,s],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=sl(i.shape,o,u,1,l),d=new tO(c);return n.runWebGLProgram(d,[a],i.dtype)}},sO={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;return bM({a,b:s,transposeA:i,transposeB:o,backend:n})}};class iO{constructor(e,t,n,r,a,s){this.outputShape=[],this.variableNames=["x","mean","variance"],Pu(e,t),Pu(e,n);let i="0.0";null!=r&&(Pu(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=a&&(Pu(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class oO{constructor(e,t,n,r,a,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Pu(e,t),Pu(e,n);let i="vec4(0.0)";null!=r&&(Pu(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=a&&(Pu(e,a),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const uO={kernelName:hn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:a,variance:s,offset:i,scale:o}=e;oe(a.shape.length===s.shape.length,()=>"Batch normalization gradient requires mean and variance to have equal ranks."),oe(null==i||a.shape.length===i.shape.length,()=>"Batch normalization gradient requires mean and offset to have equal ranks."),oe(null==o||a.shape.length===o.shape.length,()=>"Batch normalization gradient requires mean and scale to have equal ranks.");let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,a,s];let c=null;null!=i&&(c=i.shape,l.push(i));let d=null;null!=o&&(d=o.shape,l.push(o));const h=Je().getBool("WEBGL_PACK_NORMALIZATION")?new oO(r.shape,a.shape,s.shape,c,d,u):new iO(r.shape,a.shape,s.shape,c,d,u);return t.runWebGLProgram(h,l,l[0].dtype)}};class lO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=cF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return cO.slice(0,e).map(e=>"sourceLoc."+e).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map((e,t)=>`sourceLoc.${cO[t]} = start[${t}] + coords.${cO[t]};`).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const cO=["x","y","z","w","u","v"];class dO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=cF(this.rank),n=bD("coords",this.rank),r=bD("sourceLoc",this.rank),a=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,s=`getChannel(getSource(${r.join()}), ${a})`,i=`\n      result.x = ${s};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${s};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${s};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${s};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map((e,t)=>`start[${t}]`).join()});`:e.map((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function hO(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,size:i}=r,[o,u]=$o(a,s,i);if(fo(a,o,u),0===de(u))return n.makeTensorInfo(u,a.dtype,[]);if(n.shouldExecuteOnCPU([a])||"string"===a.dtype){const e=n.texData.get(a.dataId),t=rD(e.values,o,u,a.shape,a.dtype);return n.makeTensorInfo(u,a.dtype,t)}const{isPacked:l}=n.texData.get(a.dataId),c=To(a.shape,o,u);if(l||!c){const e=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new dO(u):new lO(u),t=[o];return n.runWebGLProgram(e,[a],a.dtype,t)}return n.uploadToGPU(a.dataId),function(e,t,n,r){const a=r.texData.get(e.dataId),s=r.makeTensorInfo(n,e.dtype),i=r.texData.get(s.dataId);Object.assign(i,a),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Co(t,Le(e.shape));a.slice&&(o+=a.slice.flatOffset),i.slice={flatOffset:o,origDataId:a.slice&&a.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),s}(a,o,u,n)}const pO={kernelName:Sr,backendName:"webgl",kernelFunc:hO},fO={kernelName:kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r;oe(a.shape.length<=4,()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=qp(a.shape,s,o),l=Kp(u.length,s.length),c=Xp(a.shape,s,o),d=Yp(i,s.length),h=Zp(c,i,s.length),p=[],f=iM({inputs:{x:a},backend:n,attrs:{shape:u}}),m=gM({inputs:{x:f},backend:n,attrs:{perm:l}}),g=iM({inputs:{x:m},backend:n,attrs:{shape:c}}),y=hO({inputs:{x:g},backend:n,attrs:{begin:d,size:h}});return p.push(f),p.push(m),p.push(g),p.forEach(e=>n.disposeIntermediateTensorInfo(e)),y}},mO={kernelName:It,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i}=r,o=n.readSync(a.dataId),u=n.readSync(s.dataId),l=_F(o,u,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,l)}},gO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:a}=t,s=n.readSync(r.dataId),i=n.readSync(a.dataId),o=Pu(Array.from(s),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},yO=QD({opSnippet:"return float(a != b);",cpuKernelImpl:ZF,dtype:"bool"}),bO={kernelName:Yn,backendName:"webgl",kernelFunc:yO};function xO(e){const{inputs:t,backend:n}=e,{input:r}=t;return WD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const wO={kernelName:lr,backendName:"webgl",kernelFunc:xO},vO={kernelName:Tt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:a}=t,{x:s}=n,{dtype:i}=a;if("complex64"===i){if("complex64"===s.dtype)return WD({inputs:{x:s},backend:r});const t=Yc(s.shape),n=e({inputs:{x:s},backend:r,attrs:{dtype:"float32"}}),a=UD({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),a}if("complex64"===s.dtype){const t=xO({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Ce(s.dtype,i)){const e=WD({inputs:{x:s},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new ND(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",Ie("bool",1)),t=yO({inputs:{a:s,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${i}`)}},kO="return ceil(x);",IO=JD({opSnippet:kO,packedOpSnippet:kO,cpuKernelImpl:RF}),SO={kernelName:Ct,backendName:"webgl",kernelFunc:IO};class NO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class TO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const CO={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r;let o;o=Je().getBool("WEBGL_PACK_CLIP")?new TO(a.shape):new NO(a.shape);const u=[[s],[i]];return n.runWebGLProgram(o,[a],a.dtype,u)}};class $O{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function EO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const _O={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=n.texData.get(r.dataId),s=new $O(r.shape),i=[EO(r,a.complexTensorInfos.real),EO(r,a.complexTensorInfos.imag)];return n.runWebGLProgram(s,i,i[0].dtype)}};class AO{constructor(e){this.outputShape=[],this.outputShape=Up(e,1),this.variableNames=e.map((e,t)=>`T${t}`);const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,a=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${a}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class RO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Up(e,t);const n=this.outputShape,r=n.length,a=cF(r),s=bD("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map((e,t)=>`T${t}`);const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let d=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];d+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${FO(i,u,t)}),\n            vec2(${FO(l,u,t)}));\n        }`}const h=o.length,p=o[o.length-1];d+=`\n        return getChannel(\n          getT${h}(${FO(i,u,p)}),\n          vec2(${FO(l,u,p)}));`,this.userCode=`\n      float getValue(${i.map(e=>"int "+e)}) {\n        ${d}\n      }\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[r-1]} = ${s[r-1]} + 1;\n        if (${s[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[r-2]} = ${s[r-2]} + 1;\n        if (${s[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[r-1]} = ${s[r-1]} - 1;\n        if (${s[r-2]} < ${n[r-2]} &&\n            ${s[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function FO(e,t,n){const r=e.indexOf(t);return e.map((e,t)=>t===r?`${e} - ${n}`:e).join()}function DO(e){const{inputs:t,backend:n}=e,{input:r}=t;return WD({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const MO={kernelName:xn,backendName:"webgl",kernelFunc:DO};function OO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map(e=>xO({inputs:{input:e},backend:n})),a=e.map(e=>DO({inputs:{input:e},backend:n})),s=OO(r,t,n),i=OO(a,t,n),o=UD({inputs:{real:s,imag:i},backend:n});return r.forEach(e=>n.disposeIntermediateTensorInfo(e)),a.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i),o}let a=n.shouldExecuteOnCPU(e);if("string"===r&&(a=!0),a){const a=e.map(e=>{const r=de(e.shape.slice(t));return iM({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})}),s=a.map(e=>({vals:n.readSync(e.dataId),shape:e.shape})),i=Up(a.map(e=>e.shape),1),o=1===a[0].shape[0],u=FF(s,i,r,o),l=Up(e.map(e=>e.shape),t),c=n.makeTensorInfo(l,r,u);return a.forEach(e=>n.disposeIntermediateTensorInfo(e)),c}if(e.length>Je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),a=OO(e.slice(0,r),t,n),s=OO(e.slice(r),t,n),i=OO([a,s],t,n);return n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}if(Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const a=new RO(e.map(e=>e.shape),t);return n.runWebGLProgram(a,e,r)}const{tensors2D:s,outShape:i}=function(e,t,n){const r=Up(e.map(e=>e.shape),t);return{tensors2D:e.map(e=>iM({inputs:{x:e},attrs:{shape:[-1,de(e.shape.slice(t))]},backend:n})),outShape:r}}(e,t,n),o=new AO(s.map(e=>e.shape)),u=n.runWebGLProgram(o,s,r);s.forEach(e=>n.disposeIntermediateTensorInfo(e));const l=iM({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function LO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r,s=ve(a,t[0].shape)[0],i=Up(t.map(e=>e.shape),s);if(0===de(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter(e=>de(e.shape)>0);return 1===o.length?WD({inputs:{x:o[0]},backend:n}):(Vp(o.map(e=>e.shape),s),OO(o,s,n))}const zO={kernelName:At,backendName:"webgl",kernelFunc:LO};class PO{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const s=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${d}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class BO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,d=e.filterHeight,h=e.filterWidth,p=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${a}, ${s}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${p}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${p}) *\n                  getW(wF, wR, wC, ${p}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${p}),\n                  getX(batch, xF, xR, xC, ${p} + 1),\n                  getX(batch, xF, xR, xC, ${p} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${p}, d2),\n                  getW(wF, wR, wC, ${p} + 1, d2),\n                  getW(wF, wR, wC, ${p} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class WO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=mF(this.outputShape.length);const{dataFormat:n}=t,r=XR(),a="channelsLast"===n,s=a?0:1,i=a?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${s}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${a}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function VO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,d=u[0]*u[1]*u[2],h=n.outChannels,p="channelsLast"===n.dataFormat,f=!1,m=!1;let g;const y=[];if((1!==d&&1!==h||!(c>1e3))&&l.isPacked&&p&&null!=l.texture&&u[2]%2!=0&&pe(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),d={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},h=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,oe(WR(l.shape,d.shape),()=>`packed reshape ${l.shape} to ${d.shape} isn't free`);const p=iM({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});y.push(p);const b=bM({a:d,b:p,backend:r,transposeA:f,transposeB:m,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i}),x=r.texData.get(b.dataId);oe(x.isPacked,()=>"batchMatMul result is expected to be packed"),l.shape=h,x.shape=n.outShape,g=WD({inputs:{x:b},backend:r}),g.shape=n.outShape,y.push(b)}else{const l=iM({inputs:{x:e},backend:r,attrs:{shape:[1,p?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=iM({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),d=bM({a:l,b:c,transposeA:f,transposeB:m,backend:r,bias:a,activation:o,preluActivationWeights:s,leakyreluAlpha:i});g=iM({inputs:{x:d},backend:r,attrs:{shape:n.outShape}}),y.push(l),y.push(c),y.push(d)}for(const e of y)r.disposeIntermediateTensorInfo(e);return g}function UO({x:e,filter:t,convInfo:n,backend:r,bias:a=null,preluActivationWeights:s=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:d,outHeight:h,dataFormat:p}=n,f="channelsLast"===p,m=u*l*c,g=h*d,y=[m,g],b=[],x=iM({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=iM({inputs:{x:t},backend:r,attrs:{shape:[1,m,de(t.shape)/m]}});b.push(x),b.push(w);const v=new WO(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=r.runWebGLProgram(v,[x],"float32",k),S=iM({inputs:{x:I},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(S);const N=null!=a,T=null!=s,C="leakyrelu"===o,$=o?eM(o,!0):null,E=new tM(S.shape,w.shape,[1,g,n.outChannels],!0,!1,N,$,T,C),_=[S,w];if(a&&_.push(a),T&&_.push(s),C){const e=r.makeTensorInfo([],"float32",Da(i,"float32"));_.push(e),b.push(e)}const A=r.runWebGLProgram(E,_,"float32"),R=iM({inputs:{x:A},backend:r,attrs:{shape:f?[1,h,d,n.outChannels]:[1,n.outChannels,h,d]}});b.push(A);for(const e of b)r.disposeIntermediateTensorInfo(e);return R}const GO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,d=gl(u),h=ol(a.shape,s.shape,i,l,o,c,!1,d);let p;if(1!==h.filterHeight||1!==h.filterWidth||1!==h.dilationHeight||1!==h.dilationWidth||1!==h.strideHeight||1!==h.strideWidth||"SAME"!==h.padInfo.type&&"VALID"!==h.padInfo.type)if(Je().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])p=UO({x:a,filter:s,convInfo:h,backend:n});else{const e=new PO(h);p=n.runWebGLProgram(e,[a,s],"float32")}else p=VO({x:a,filter:s,convInfo:h,backend:n});const f=iM({inputs:{x:p},backend:n,attrs:{shape:h.outShape}});return n.disposeIntermediateTensorInfo(p),f}};class HO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${s}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class jO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=s?1:2,l=s?2:3,c=s?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${s}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class qO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.padInfo.front,s=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${a};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${s};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class KO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,a=e.strideDepth,s=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${a}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${s}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const XO={kernelName:Ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,d=gl(u),h=ol(a.shape,c,i,1,o,l,!1,d),p=new HO(h);return n.runWebGLProgram(p,[a,s],"float32")}},YO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,d=gl(l),h=ol(i,s.shape,o,1,u,c,!1,d),p=new jO(h);return n.runWebGLProgram(p,[a,s],"float32")}},ZO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=ul(a.shape,s.shape,i,u,o),c=new BO(l);return n.runWebGLProgram(c,[a,s],"float32")}},JO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,pad:o,filterShape:u}=r,l=ul(a.shape,u,i,1,o),c=new qO(l);return n.runWebGLProgram(c,[a,s],"float32")}},QO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{pad:i,strides:o,inputShape:u}=r,l=ul(u,s.shape,o,1,i),c=new KO(l);return n.runWebGLProgram(c,[a,s],"float32")}},eL=JD({opSnippet:ZD+"\n  return cos(x);\n"}),tL={kernelName:zt,backendName:"webgl",kernelFunc:eL},nL=JD({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),rL={kernelName:Pt,backendName:"webgl",kernelFunc:nL};class aL{constructor(e,t,n,r,a){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[s,i,o,u]=e,[l]=t,[c,d]=n;this.outputShape=[l,c,d,u];const h="bilinear"===r?1:0,[p,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${p} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${p}`],[b,x,w]=d>1?[""+(o-1)/(d-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${s}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${p} ) {\n          setOutput(float(${a}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${a}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${h} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const sL={kernelName:Wt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:a,boxes:s,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new aL(a.shape,s.shape,o,u,l);return n.runWebGLProgram(c,[a,s,i],"float32")}};class iL{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,a=t?"0.0":`getX(${oL(r,"coords")})`,s=e[e.length-1];let i="",o="";t?(i=n?"end != "+(s-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${s}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${cF(r)} coords = getOutputCoords();\n        int end = ${uL(r,"coords")};\n        float val = ${a};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${uL(r,"coords")} = idx;\n          val += getX(${oL(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function oL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function uL(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const lL={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length,l=zc([s],u);let c=a;null!=l&&(c=gM({inputs:{x:a},backend:n,attrs:{perm:l}}));const d=Bc(1,u)[0];if(d!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${a.shape.length-1} but got axis=${s}`);const h=c.shape[d];let p=WD({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(h))-1;e++){const t=new iL(c.shape,!1,o),r=[[e]],a=p;p=n.runWebGLProgram(t,[p],p.dtype,r),n.disposeIntermediateTensorInfo(a)}if(i){const e=new iL(c.shape,i,o),t=p;p=n.runWebGLProgram(e,[p],p.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=gM({inputs:{x:p},backend:n,attrs:{perm:Pc(l)}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(c),e}return p}},cL={kernelName:Vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,weights:s}=t,{size:i,binaryOutput:o}=r;if(1===a.shape.length){const e=n.readSync(a.dataId),t=n.readSync(s.dataId),r=_F(e,t,s.dtype,s.shape,i);return n.makeTensorInfo([i],s.dtype,r)}if(2===a.shape.length){const e=n.bufferSync(a),t=n.bufferSync(s),r=AF(e,t,i,o);return n.makeTensorInfo(r.shape,s.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${a.shape.length}.`)}};class dL{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const hL={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d=new dL("NHWC"===i?[o,u,l,c]:[o,c,u,l],s,i);return n.runWebGLProgram(d,[a],a.dtype)}};class pL{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mF(this.outputShape.length);const s=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${s}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class fL{constructor(e,t=!1,n=null,r=!1,a=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=mF(this.outputShape.length);const s=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,d=c;let h="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)h+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;h+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)h+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;h+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(d+1)/2;e++){const t=2*e;if(h+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,h+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):h+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?ne(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(h+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(h+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):h+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(h+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(h+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(h+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(h+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(h+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(h+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}h+="\n    }\n  ",h+="\n      }\n    ";let p="",f="";n&&(p=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:a?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),a&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${p}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${s};\n        int q = d2 - d1 * ${s};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${h}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const mL={kernelName:Gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),oe(ml(i,c),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`);const d=ol(a.shape,s.shape,i,c,o,l,!0);let h;h=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&d.strideWidth<=2&&d.outChannels/d.inChannels===1?new fL(d):new pL(d);const p=[[d.padInfo.top,d.padInfo.left],[d.strideHeight,d.strideWidth],[d.dilationHeight,d.dilationWidth],[d.inHeight,d.inWidth]];return n.runWebGLProgram(h,[a,s],"float32",p)}};class gL{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,a=e.padInfo.left,s=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${s} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${a};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class yL{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,a=e.strideWidth,s=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${a}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const bL={kernelName:Ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,dy:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,d=ol(a.shape,c,i,o,u,l,!0),h=new gL(d);return n.runWebGLProgram(h,[a,s],"float32")}},xL={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,filter:s}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,d=ol(c,s.shape,i,o,u,l,!0),h=new yL(d);return n.runWebGLProgram(h,[a,s],"float32")}};class wL{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const vL={kernelName:qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,a=[...r.shape,...r.shape],s=de(r.shape),i=iM({inputs:{x:r},backend:n,attrs:{shape:[s]}}),o=new wL(s),u=n.runWebGLProgram(o,[i],i.dtype),l=iM({inputs:{x:u},backend:n,attrs:{shape:a}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class kL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:a,strideWidth:s,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:d}=r;this.userCode=`\n      const ivec2 strides = ivec2(${a}, ${s});\n      const ivec2 pads = ivec2(${c}, ${d});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const IL={kernelName:Kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s}=t,{strides:i,pad:o,dilations:u}=r,l=al(a.shape,s.shape,i,o,"NHWC",u);let c;const d=new kL(l);c=n.runWebGLProgram(d,[a,s],"float32");const h=iM({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),h}},SL={kernelName:Jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:a}=r,s=t,{allDims:i,summedDims:o,idDims:u}=xf(a,s.length);vf(i.length,u,s);const{path:l,steps:c}=kf(o,u),d=c.length;let h=null,p=i.length;const f=[];for(let e=0;e<d;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=wf(p,u[t]);let a;If(e)?a=s[t]:(a=gM({inputs:{x:s[t]},backend:n,attrs:{perm:e}}),f.push(a));const i=a.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);pe(a.shape,i)||(a=iM({inputs:{x:a},backend:n,attrs:{shape:i}}),f.push(a)),null===h?h=a:(h=aM({inputs:{a,b:h},backend:n}),f.push(h))}e<d-1&&(l[e]>=0&&(h=fM({inputs:{x:h},backend:n,attrs:{axis:l[e]-(i.length-p),keepDims:!1}}),f.push(h)),p--)}for(const e of f)e!==h&&n.disposeIntermediateTensorInfo(e);return h}},NL=JD({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),TL={kernelName:Qt,backendName:"webgl",kernelFunc:NL},CL={kernelName:en,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:a}=t,s=Je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new BD("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,a.shape):new zD("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,a.shape);return n.runWebGLProgram(s,[r,a],r.dtype)}},$L=QD({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:DF}),EL={kernelName:nn,backendName:"webgl",kernelFunc:$L},_L=JD({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${ef};\n  float a1 = ${tf};\n  float a2 = ${nf};\n  float a3 = ${rf};\n  float a4 = ${af};\n  float a5 = ${sf};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),AL={kernelName:tn,backendName:"webgl",kernelFunc:_L},RL="return exp(x);",FL=JD({opSnippet:RL,packedOpSnippet:RL,cpuKernelImpl:MF,dtype:"float32"}),DL={kernelName:rn,backendName:"webgl",kernelFunc:FL};function ML(e){const{inputs:t,attrs:n,backend:r}=e,{dim:a}=n,{input:s}=t,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(oe(-(i+1)<=a,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+a+1),o.splice(u,0,1),iM({inputs:{x:s},backend:r,attrs:{shape:o}})}const OL={kernelName:an,backendName:"webgl",kernelFunc:ML},LL="return exp(x) - 1.0;",zL=JD({opSnippet:LL,packedOpSnippet:LL,cpuKernelImpl:OF}),PL={kernelName:sn,backendName:"webgl",kernelFunc:zL};class BL{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const a=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,s=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${a};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${s};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function WL(e,t,n){const r=n.texData.get(e.dataId),a=de(e.shape),s=e.shape[e.shape.length-1],i=iM({inputs:{x:e},backend:n,attrs:{shape:[a/s,s]}}),o=i.shape,u=new BL("real",o,t),l=new BL("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],d=n.runWebGLProgram(u,c,"float32"),h=n.runWebGLProgram(l,c,"float32"),p=UD({inputs:{real:d,imag:h},backend:n});n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h);const f=iM({inputs:{x:p},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(p),f}const VL={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return WL(r,!1,n)}};class UL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function GL(e){const{backend:t,attrs:n}=e,{shape:r,value:a}=n;let{dtype:s}=n;if(s=s||De(a),"string"===s){const e=Se(s,de(r));return e.fill(a),t.makeTensorInfo(r,s,e)}{const e=new UL(r,a),n=[[a]];return t.runWebGLProgram(e,[],s,n)}}const HL={kernelName:un,backendName:"webgl",kernelFunc:GL};class jL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const qL={kernelName:ln,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,a=new jL(n.shape);return r.runWebGLProgram(a,[n],n.dtype)}},KL="return floor(x);",XL=JD({opSnippet:KL,packedOpSnippet:KL,cpuKernelImpl:LF}),YL={kernelName:cn,backendName:"webgl",kernelFunc:XL},ZL=QD({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),JL={kernelName:dn,backendName:"webgl",kernelFunc:ZL};class QL{constructor(e){this.variableNames=["A"];const t=XR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class ez{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=XR(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const tz={kernelName:aa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:a}=t;const{numChannels:s}=r,i="undefined"!=typeof HTMLVideoElement&&a instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&a instanceof HTMLImageElement,[u,l]=i?[a.videoWidth,a.videoHeight]:[a.width,a.height],c=[l,u],d=[l,u,s];(o||i)&&(null==nz&&(nz=document.createElement("canvas").getContext("2d")),nz.canvas.width=u,nz.canvas.height=l,nz.drawImage(a,0,0,u,l),a=nz.canvas);const h=n.makeTensorInfo(c,"int32");n.texData.get(h.dataId).usage=wR.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(h.dataId),a);const p=Je().getBool("WEBGL_PACK")?new ez(d):new QL(d),f=n.runWebGLProgram(p,[h],"int32");return n.disposeData(h.dataId),f}};let nz;const rz={kernelName:oa,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=r,m=gl(c),g=ol(a.shape,s.shape,u,d,l,h,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(Je().getBool("WEBGL_CONV_IM2COL")&&1===a.shape[0])y=UO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===p,u=p?eM(p,!1):null,l=new PO(g,e,u,t,r),c=[a,s];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Da(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=VO({x:a,filter:s,convInfo:g,backend:n,bias:i,activation:p,preluActivationWeights:o,leakyreluAlpha:f});const x=iM({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}},az={kernelName:ua,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:d,activation:h,leakyreluAlpha:p}=r,f=[];let m=c;null==m&&(m=[1,1]),oe(ml(u,m),()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`);const g=ol(a.shape,s.shape,u,m,l,d,!0),y=Je().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels===1,b=h?eM(h,y):null,x=[a,s],w=null!=i,v=null!=o,k="leakyrelu"===h;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Da(p,"float32"));x.push(e),f.push(e)}let I;I=y?new fL(g,w,b,v,k):new pL(g,w,b,v,k);const S=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],N=n.runWebGLProgram(I,x,"float32",S);return f.forEach(e=>n.disposeIntermediateTensorInfo(e)),N}};class sz{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=cF(t.length),a=cF(n.length),s=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${a} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${s};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const iz={kernelName:fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:a}=t,s=a.shape,i=s[s.length-1],o=de(r.shape),[u,l,c,d]=oo(r,a),h=iM({inputs:{x:a},backend:n,attrs:{shape:[l,i]}}),p=iM({inputs:{x:r},backend:n,attrs:{shape:[de(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.readSync(a.dataId),t=n.bufferSync(r),s=zF(e,t,r.dtype,l,i,c,d,r.shape,o);return n.makeTensorInfo(u,r.dtype,s.values)}const f=new sz(i,d,[l,c]),m=n.runWebGLProgram(f,[p,h],p.dtype),g=iM({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(m),g}};class oz{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=cF(this.rank),r=function(e){const t=["resRC.x","resRC.y","resRC.z","resRC.w"],n=[];for(let r=0;r<e.length;r++)2===r?n.push("int(getIndices(resRC.x, resRC.z))"):n.push(`${t[r]}`);return n.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function uz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,indices:s}=t,{axis:i,batchDims:o}=r,u=ve(i,a.shape)[0],l=n.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];oe(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}const d=$f(a,s,u,o),h=de(s.shape),p=[],f=iM({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=iM({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,h/d.batchSize]}});p.push(f),p.push(m);const g=[d.batchSize,d.outerSize,h/d.batchSize,d.sliceSize];if(n.shouldExecuteOnCPU([a,s])||"string"===a.dtype){const e=n.bufferSync(m),t=n.bufferSync(f),r=PF(t,e,g);return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),n.makeTensorInfo(d.outputShape,r.dtype,r.values)}const y=new oz(f.shape,g),b=n.runWebGLProgram(y,[f,m],f.dtype);p.push(b);const x=iM({inputs:{x:b},backend:n,attrs:{shape:d.outputShape}});return p.forEach(e=>n.disposeIntermediateTensorInfo(e)),x}const lz={kernelName:pn,backendName:"webgl",kernelFunc:uz},cz=QD({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:BF,dtype:"bool"}),dz={kernelName:mn,backendName:"webgl",kernelFunc:cz},hz=QD({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:WF}),pz={kernelName:gn,backendName:"webgl",kernelFunc:hz},fz={kernelName:bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return WL(r,!0,n)}},mz=JD({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),gz={kernelName:wn,backendName:"webgl",kernelFunc:mz},yz=JD({opSnippet:"return float(isinf(x));",dtype:"bool"}),bz={kernelName:vn,backendName:"webgl",kernelFunc:yz},xz=JD({opSnippet:"return float(isnan(x));",dtype:"bool"}),wz={kernelName:kn,backendName:"webgl",kernelFunc:xz},vz=QD({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:VF,dtype:"bool"}),kz={kernelName:Sn,backendName:"webgl",kernelFunc:vz},Iz=QD({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:UF,dtype:"bool"}),Sz={kernelName:Nn,backendName:"webgl",kernelFunc:Iz},Nz={kernelName:Tn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:a,num:s}=n,i=GF(r,a,s);return t.makeTensorInfo([i.length],"float32",i)}},Tz=JD({opSnippet:"if (x < 0.0) return NAN;\n  return log(x);",packedOpSnippet:"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:HF}),Cz={kernelName:Cn,backendName:"webgl",kernelFunc:Tz},$z=JD({opSnippet:"return log(1.0 + x);"}),Ez={kernelName:$n,backendName:"webgl",kernelFunc:$z},_z=QD({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),Az={kernelName:En,backendName:"webgl",kernelFunc:_z},Rz=JD({opSnippet:"return float(!(x >= 1.0));"}),Fz={kernelName:_n,backendName:"webgl",kernelFunc:Rz},Dz=QD({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),Mz={kernelName:An,backendName:"webgl",kernelFunc:Dz};class Oz{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[];const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${s}; j <= ${s}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class Lz{constructor(e,t,n,r,a){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const s=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===a?`inversesqrt(${u})`:1===a?`1.0/(${u})`:`exp(log(${u}) * float(-${a}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${s};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${s}; j <= ${s}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const zz={kernelName:Fn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{depthRadius:s,bias:i,alpha:o,beta:u}=r,l=Je().getBool("WEBGL_PACK_NORMALIZATION")?new Lz(a.shape,s,i,o,u):new Oz(a.shape,s,i,o,u);return n.runWebGLProgram(l,[a],a.dtype)}};class Pz{constructor(e,t,n,r,a){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=a,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${a})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${a});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const Bz={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a,y:s,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,d=new Pz(a.shape,o,u,l,c);return n.runWebGLProgram(d,[a,s,i],a.dtype)}};function Wz(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reductionIndices:s,keepDims:i}=r,o=a.shape.length,u=ve(s,a.shape);let l=u;const c=zc(l,o),d=null!=c,h=n.shouldExecuteOnCPU([a]);let p=a;if(d){if(h){const e=n.texData.get(p.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=a.shape[c[e]];const r=mD(e,a.shape,a.dtype,c,t);p=n.makeTensorInfo(t,a.dtype),n.texData.get(p.dataId).values=r}else p=pM(a,c,n);l=Bc(l.length,o)}Lc("max",l,o);const[f,m]=Mc(p.shape,l);let g,y=f;if(i&&(y=Oc(f,u)),h){const e=n.texData.get(p.dataId).values,t=jF(e,de(m),y,a.dtype);g=n.makeTensorInfo(y,a.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const a=de(t),s=iM({inputs:{x:e},attrs:{shape:[de(e.shape)/a,a]},backend:r}),i=cM(s,e.dtype,"max",r),o=iM({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(p,m,y,n);return d&&n.disposeIntermediateTensorInfo(p),g}const Vz={kernelName:Mn,backendName:"webgl",kernelFunc:Wz},Uz=QD({opSnippet:LD+"\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+PD+"\n  return result;\n",cpuKernelImpl:qF}),Gz={kernelName:On,backendName:"webgl",kernelFunc:Uz},Hz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t;qR(a,"maxPool");const{filterSize:s,strides:i,pad:o,dimRoundingMode:u}=r;oe(ml(i,1),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`);const l=sl(a.shape,s,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&pe(l.inShape,l.outShape))return WD({inputs:{x:a},backend:n});const c=new ZM(l,"max",!1);return n.runWebGLProgram(c,[a],a.dtype)}},jz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{filterSize:s,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=il(a.shape,s,i,[1,1,1],o,l,u),d=new JM(c,"max",!1);return n.runWebGLProgram(d,[a],a.dtype)}};class qz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,a=e.effectiveFilterHeight,s=e.effectiveFilterWidth,i=a-1-e.padInfo.top,o=s-1-e.padInfo.left,u=a*s-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${s}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${s} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Kz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,a=e.dilationDepth,s=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,d=u-1-e.padInfo.top,h=l-1-e.padInfo.left,p=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${d}, ${h});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${s}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${p} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Xz={kernelName:Bn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s}=t,i=s,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,d=il(i.shape,o,u,[1,1,1],l,c),h=new JM(d,"max",!0),p=n.runWebGLProgram(h,[i],i.dtype),f=new Kz(d),m=n.runWebGLProgram(f,[a,p],i.dtype);return n.disposeIntermediateTensorInfo(p),m}},Yz={kernelName:zn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:a,input:s,output:i}=t,o=s;qR([s,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:d}=r,h=sl(o.shape,u,l,1,c,d),p=new ZM(h,"max",!0),f=n.runWebGLProgram(p,[o],o.dtype),m=new qz(h),g=n.runWebGLProgram(m,[a,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Zz={kernelName:Wn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:a,strides:s,pad:i,includeBatchInIndex:o}=t,u=n;oe(4===r.shape.length,()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`);const l=[1,1];oe(ml(s,l),()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`);const c=sl(r.shape,a,s,l,i),[d,h]=function(e,t,n,r){let a=new ZM(n,"max",!1);const s=r.runWebGLProgram(a,[e],"float32");return a=new ZM(n,"max",!0,!0,t),[s,r.runWebGLProgram(a,[e],"float32")]}(r,o,c,u);return[d,h]}},Jz={kernelName:Vn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:a,axis:s}=t,i=n,o=r.shape.length,u=ve(s,r.shape);let l=u;const c=zc(l,o),d=null!=c,h=i.shouldExecuteOnCPU([r]),p=[];let f=r;if(d){if(h){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=mD(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=pM(r,c,i);p.push(f),l=Bc(l.length,o)}Lc("sum",l,o);const[m,g]=Mc(f.shape,l);let y=m;a&&(y=Oc(m,u));const b=function(e,t,n,r){const a=de(t),s=iM({inputs:{x:e},attrs:{shape:[de(e.shape)/a,a]},backend:r}),i=cM(s,"float32","mean",r),o=iM({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of p)i.disposeIntermediateTensorInfo(e);return b}},Qz={kernelName:Un,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=ve(s,a.shape);let l=u;const c=zc(l,o);let d=a;null!=c&&(d=gM({inputs:{x:a},backend:n,attrs:{perm:c}}),l=Bc(l.length,a.shape.length)),Lc("min",l,o);const[h,p]=Mc(d.shape,l),f=iM({inputs:{x:d},backend:n,attrs:{shape:[-1,de(p)]}}),m=cM(f,f.dtype,"min",n);let g;return g=iM(i?{inputs:{x:m},backend:n,attrs:{shape:Oc(h,u)}}:{inputs:{x:m},backend:n,attrs:{shape:h}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(d),g}},eP=QD({opSnippet:LD+"\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  "+PD+"\n  return result;\n",cpuKernelImpl:KF}),tP={kernelName:Gn,backendName:"webgl",kernelFunc:eP};class nP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=cF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${a} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class rP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=cF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=bD("rc",r),u=bD("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d="reflect"===n?0:1;let h="";if(1===r){const e=`\n        ${a} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${d};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${d};\n        }\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${a} source = rc;\n        ${a} lt = ${a}(lessThan(source, start));\n        ${a} gte = ${a}(greaterThanEqual(source, end));\n        ${a} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${d}) +\n                gte * ((end - 1) * 2 - source + ${d});\n        source -= start;\n      `;h=`\n        ${a} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${h}\n        setOutput(result);\n      }\n    `}}const aP={kernelName:Hn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:a,mode:s}=n,i=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new rP(r.shape,a,s):new nP(r.shape,a,s);return t.runWebGLProgram(i,[r],r.dtype)}},sP=QD({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  "+PD+"\n  return result;\n"}),iP={kernelName:jn,backendName:"webgl",kernelFunc:sP};class oP{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const uP=QD({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),lP={kernelName:Zt,backendName:"webgl",kernelFunc:uP},cP="return a - b;",dP=QD({opSnippet:cP,packedOpSnippet:cP,supportsComplex:!0,cpuKernelImpl:hD}),hP={kernelName:jr,backendName:"webgl",kernelFunc:dP};function pP(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{dim:s}=r,i=ve([s],a.shape),o=Wz({inputs:{x:a},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Oc(o.shape,i),l=iM({inputs:{x:o},backend:n,attrs:{shape:u}}),c=dP({inputs:{a,b:l},backend:n}),d=FL({inputs:{x:c},backend:n}),h=fM({inputs:{x:d},backend:n,attrs:{axis:i,keepDims:!1}}),p=iM({inputs:{x:h},backend:n,attrs:{shape:u}}),f=uP({inputs:{a:d,b:p},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),f}const fP={kernelName:Dr,backendName:"webgl",kernelFunc:pP},mP={kernelName:qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:a}=t,{numSamples:s,seed:i,normalized:o}=r,u=o?a:pP({inputs:{logits:a},backend:n,attrs:{dim:a.shape.length-1}}),l=u.shape[0],c=u.shape[1],d=new oP(l,c,s),h=[[i]],p=n.runWebGLProgram(d,[u],"int32",h);return o||n.disposeIntermediateTensorInfo(u),p}},gP="return -x;",yP={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,a]=YF(e.values,r.shape,r.dtype);return n.makeTensorInfo(a,r.dtype,t)}let a;return a=Je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new AD(r.shape,gP):new ND(r.shape,gP),n.runWebGLProgram(a,[r],r.dtype)}},bP=Jh,xP={kernelName:Zn,backendName:"webgl",kernelFunc:function(e){qe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(a.dataId),c=n.readSync(s.dataId),{selectedIndices:d}=bP(l,c,i,o,u);return n.makeTensorInfo([d.length],"int32",new Int32Array(d))}},wP=Qh,vP={kernelName:Jn,backendName:"webgl",kernelFunc:function(e){qe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),{selectedIndices:h,validOutputs:p}=wP(c,d,i,o,u,l);return[n.makeTensorInfo([h.length],"int32",new Int32Array(h)),n.makeTensorInfo([],"int32",new Int32Array([p]))]}},kP=ep,IP={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){qe("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:a,scores:s}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(a.dataId),d=n.readSync(s.dataId),h=i,p=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=kP(c,d,h,p,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class SP{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const NP={kernelName:tr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=de(a.shape),l=new SP(u,s,i,o),c=iM({inputs:{x:a},backend:n,attrs:{shape:[u]}}),d=n.runWebGLProgram(l,[c],a.dtype);n.disposeIntermediateTensorInfo(c);const h=iM({inputs:{x:d},backend:n,attrs:{shape:[...a.shape,s]}});return n.disposeIntermediateTensorInfo(d),h}};function TP(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=xO({inputs:{input:r},backend:n}),t=TP({inputs:{x:e},backend:n}),a=DO({inputs:{input:r},backend:n}),s=TP({inputs:{x:a},backend:n}),i=UD({inputs:{real:t,imag:s},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(s),i}return GL({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const CP={kernelName:na,backendName:"webgl",kernelFunc:TP},$P={kernelName:er,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:a}=n;if("string"===a.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===a.dtype){const t=xO({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r}),s=DO({inputs:{input:a},backend:r}),i=TP({inputs:{x:s},backend:r}),o=UD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(s),r.disposeIntermediateTensorInfo(i),o}return GL({attrs:{shape:a.shape,dtype:a.dtype,value:1},backend:r})}},EP={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return ML({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ue(s,e.shape,"All tensors passed to stack must have matching shapes"),oe(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=LO({inputs:t.map(e=>{const t=ML({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeIntermediateTensorInfo(e)),u}};class _P{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=cF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${a} start = ${a}(${s});\n      ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${a} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${s};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class AP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map((t,n)=>t[0]+e[n]+t[1]);const r=e.length,a=cF(r),s=t.map(e=>e[0]).join(","),i=t.map((t,n)=>t[0]+e[n]).join(","),o=bD("rc",r),u=bD("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,d=[`${a} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],h=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let p="";for(let e=0,t=1===r?2:4;e<t;e++)p+=`\n        ${d[e]}\n        if (${h}) {\n          result[${e}] = float(value);\n        } else {\n          ${a} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;p+=1===r?"} ":"}}",this.userCode=`\n      const ${a} start = ${a}(${s});\n      const ${a} end = ${a}(${i});\n\n      void main() {\n        ${a} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const RP=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{paddings:s,constantValue:i}=r;if(0===de(a.shape)){const e=s.map((e,t)=>e[0]+a.shape[t]+e[1]);return GL({backend:n,attrs:{shape:e,value:i,dtype:a.dtype}})}const o=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new AP(a.shape,s,i):new _P(a.shape,s,i),u=[[i]];return n.runWebGLProgram(o,[a],a.dtype,u)},FP={kernelName:rr,backendName:"webgl",kernelFunc:RP},DP=QD({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  "+PD+"\n  return result;\n"}),MP={kernelName:sr,backendName:"webgl",kernelFunc:DP},OP={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,keepDims:i}=r,o=a.shape.length,u=[],l=ve(s,a.shape);let c=l;const d=zc(c,o);let h,p=a;if(null!=d&&(p=gM({inputs:{x:a},backend:n,attrs:{perm:d}}),c=Bc(c.length,o),u.push(p)),Lc("prod",c,o),n.shouldExecuteOnCPU([p])){const e=n.texData.get(p.dataId).values,{outVals:t,outShape:r,outDtype:a}=JF(p.shape,p.dtype,e,c);h=n.makeTensorInfo(r,a,t)}else{const[e,t]=Mc(p.shape,c),r=de(t),s=iM({inputs:{x:p},backend:n,attrs:{shape:[-1,r]}}),i=cM(s,us(a.dtype),"prod",n);h=iM({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(s),u.push(i)}if(i){u.push(h);const e=Oc(h.shape,l);h=iM({inputs:{x:h},backend:n,attrs:{shape:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),h}},LP=e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=QF(r,a,s,i);return t.makeTensorInfo([o.length],i,o)},zP={kernelName:ur,backendName:"webgl",kernelFunc:LP},PP=JD({opSnippet:"return 1.0 / x;"}),BP={kernelName:cr,backendName:"webgl",kernelFunc:PP},WP=JD({opSnippet:TD+"\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),VP={kernelName:dr,backendName:"webgl",kernelFunc:WP},UP=JD({opSnippet:TD+"\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),GP={kernelName:yr,backendName:"webgl",kernelFunc:UP};class HP{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class jP{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let d;d=a?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${d};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const qP={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new jP(a.shape,u,l,s,i):new HP(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],"float32")}};class KP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${a-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const XP={kernelName:gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new KP(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class YP{constructor(e,t,n,r,a){this.variableNames=["A"],this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class ZP{constructor(e,t,n,r,a){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[s,i,o,u]=e;this.outputShape=[s,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],d=r?"0.5":"0.0";let h;h=a?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${d})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const JP={kernelName:pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a}=t,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,c=Je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new ZP(a.shape,u,l,s,i):new YP(a.shape,u,l,s,i);return n.runWebGLProgram(c,[a],a.dtype)}};class QP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,a]=t,[,s,i]=e,o=[n&&s>1?r-1:r,n&&i>1?a-1:a],u=[n&&s>1?s-1:s,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],d=1/l,h=1/c,p=2*Math.ceil(d)+2,f=2*Math.ceil(h)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${d});\n        const float invWidthScale = float(${h});\n\n        const int winHeight = int(${p});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${s}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${a}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const eB={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:a,dy:s}=t,{alignCorners:i}=r,o=new QP(s.shape,a.shape,i);return n.runWebGLProgram(o,[s],s.dtype)}};class tB{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r)).join(","),a=cF(n);this.userCode=`\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class nB{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=bD("rc",n),a=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,s=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=cF(n);function o(n){const r=e.map((r,a)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(a,n));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${a}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${a}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${s}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${a}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const rB={kernelName:br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=a.shape.length,o=ve(s,a.shape);if(0===i)return WD({inputs:{x:a},backend:n});const u=Je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new nB(a.shape,o):new tB(a.shape,o);return n.runWebGLProgram(u,[a],a.dtype)}};class aB{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let a="";a="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${a}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const sB={kernelName:sa,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:a,fillValue:s,center:i}=t,o=n,u=new aB(r.shape,s),[l,c]=jp(i,r.shape[1],r.shape[2]),d=[[l,c,Math.sin(a),Math.cos(a)]];return o.runWebGLProgram(u,[r],r.dtype,d)}},iB=JD({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),oB={kernelName:xr,backendName:"webgl",kernelFunc:iB},uB=JD({opSnippet:"return inversesqrt(x);",cpuKernelImpl:eD}),lB={kernelName:wr,backendName:"webgl",kernelFunc:uB};class cB{constructor(e,t,n,r,a,s,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=s;const o=cF(a.length),u=cF(s.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let d="";1===r?d="i":2===r&&(d="i, coords[1]");const h=`getUpdates(${d})`,p=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${a});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${p};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${h};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const dB={kernelName:vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a,updates:s}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:d}=co(0,a,i),h=[d/l,l];if(0===d)return n.makeTensorInfo(i,a.dtype);const p=iM({inputs:{x:a},backend:n,attrs:{shape:[u,o]}}),f=iM({inputs:{x:s},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new cB(u,o,p.shape.length,f.shape.length,c,h),y=n.runWebGLProgram(g,[f,p,m],f.dtype),b=iM({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class hB{constructor(e,t,n){let r,a;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)a="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&s.push(`${n[r]}`);r=s.join(),a=i.join()}const s=cF(n);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${a}));\n        } else {\n          setOutput(getB(${a}));\n        }\n      }\n    `}}const pB={kernelName:kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=new hB(r.shape.length,a.shape,a.shape.length);return n.runWebGLProgram(i,[r,a,s],os(a.dtype,s.dtype))}},fB=JD({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Jp};\n  float scale = ${Qp};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),mB={kernelName:Ir,backendName:"webgl",kernelFunc:fB},gB="return 1.0 / (1.0 + exp(-1.0 * x));",yB=JD({opSnippet:gB,packedOpSnippet:gB,cpuKernelImpl:tD}),bB={kernelName:$r,backendName:"webgl",kernelFunc:yB},xB=JD({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),wB={kernelName:Cr,backendName:"webgl",kernelFunc:xB},vB=JD({opSnippet:ZD+"\n  return sin(x);\n"}),kB={kernelName:Nr,backendName:"webgl",kernelFunc:vB},IB=JD({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),SB={kernelName:Tr,backendName:"webgl",kernelFunc:IB},NB=JD({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),TB={kernelName:Er,backendName:"webgl",kernelFunc:NB},CB={kernelName:Rr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r;oe(a.shape.length<=4,()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet");const o=s.reduce((e,t)=>e*t),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=[],c=RP({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),d=qp(c.shape,s,o,!1),h=Kp(d.length,s.length,!1),p=Xp(c.shape,s,o,!1),f=iM({inputs:{x:c},backend:n,attrs:{shape:d}}),m=gM({inputs:{x:f},backend:n,attrs:{perm:h}}),g=iM({inputs:{x:m},backend:n,attrs:{shape:p}});return l.push(c),l.push(f),l.push(m),l.forEach(e=>n.disposeIntermediateTensorInfo(e)),g}},$B={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:a,denseShape:s,defaultValue:i}=t;if(1!==s.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${s.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Values must be a vector, saw:\n         ${a.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(a.dataId),l=n.readSync(s.dataId),c=n.readSync(i.dataId)[0],[d,h,p,f,m]=aD(o,r.shape,r.dtype,u,a.dtype,l,c);return[n.makeTensorInfo(h,r.dtype,d),n.makeTensorInfo([h[0]],a.dtype,p),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map(e=>Number(e)))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},EB={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:a,newShape:s}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Input shape should be a vector but received shape ${a.shape}`);if(1!==s.shape.length)throw new Error(`Target shape should be a vector but received shape ${s.shape}`);const i=Array.from(n.readSync(a.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(s.dataId)),[l,c,d]=sD(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([d.length],s.dtype,new Int32Array(d))]}},_B={kernelName:Lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=iD(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},AB={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:a,segmentIds:s}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==a.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${a.shape}`);if(1!==s.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${s.shape}`);const i=n.readSync(r.dataId),o=n.readSync(a.dataId),u=n.readSync(s.dataId),[l,c]=iD(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},RB={kernelName:Pr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:a,sparseValues:s,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:d}=co(0,a,o),h=new cB(l,u,a.shape.length,s.shape.length,c,[d,1],!1),p=n.runWebGLProgram(h,[s,a,i],s.dtype),f=iM({inputs:{x:p},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(p),f}},FB={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=r,o=ve(i,a.shape)[0],u=Nf(a,s,o),l=a.shape.length,c=new Array(l).fill(0),d=a.shape.slice();return u.map(e=>{const t=[...d];t[o]=e;const r=hO({inputs:{x:a},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r})}},DB="return sqrt(x);",MB=JD({opSnippet:DB,packedOpSnippet:DB,cpuKernelImpl:oD}),OB={kernelName:_r,backendName:"webgl",kernelFunc:MB},LB=JD({opSnippet:"return x * x;"}),zB={kernelName:Wr,backendName:"webgl",kernelFunc:LB},PB="return (a - b) * (a - b);",BB=QD({opSnippet:PB,packedOpSnippet:PB}),WB={kernelName:Br,backendName:"webgl",kernelFunc:BB},VB={kernelName:ra,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,a=TD+`\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,s=new ND(r.shape,a);return n.runWebGLProgram(s,[r],r.dtype)}};class UB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,a=cF(n.length),s=cF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`)).join(",")}this.userCode=`\n      ${a} begin = ${a}(${e});\n      ${a} strides = ${a}(${t});\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const GB={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Eo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=iM({inputs:{x:a},backend:n,attrs:{shape:f}});else if(g||y){oe(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const e=go(b,x,w),t=hO({inputs:{x:a},backend:n,attrs:{begin:b,size:e}});v=iM({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([a])){const e=n.readSync(a.dataId),t=_i(a.shape,a.dtype,e),r=uD(p,t,w,b);v=n.makeTensorInfo(f,a.dtype,r.values)}else{const e=new UB(b,w,p);v=n.runWebGLProgram(e,[a],a.dtype)}const k=iM({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},HB={kernelName:Ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:a,nGramWidths:s,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:d}=t,h=n.readSync(c.dataId),p=n.readSync(d.dataId),[f,m]=lD(h,p,a,s,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(d.shape,"int32",m)]}},jB={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:a}=r,{input:s,delimiter:i}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(1!==s.shape.length)throw new Error(`Input must be a vector, got shape: ${s.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(s.dataId),u=n.readSync(i.dataId)[0],[l,c,d]=cD(o,u,a),h=c.length;return[n.makeTensorInfo([h,2],"int32",l),n.makeTensorInfo([h],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(d))]}},qB={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:a}=r,{input:s}=t;if("string"!==s.dtype)throw new Error("Input must be of datatype string");if(a<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(s.dataId),o=dD(i,a);return n.makeTensorInfo(s.shape,"int32",o)}},KB=JD({opSnippet:"return tan(x);"}),XB={kernelName:qr,backendName:"webgl",kernelFunc:KB},YB=JD({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),ZB={kernelName:Kr,backendName:"webgl",kernelFunc:YB};class JB{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=cF(this.rank),a=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${a}));\n      }\n    `}}function QB(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{reps:s}=r;if("string"===a.dtype||a.shape.length>5){const e=n.readSync(a.dataId),t="string"===a.dtype?e.map(e=>Pa(e)):e,r=_i(a.shape,a.dtype,t),i=pD(r,s);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new JB(a.shape,s);return n.runWebGLProgram(i,[a],a.dtype)}const eW={kernelName:Xr,backendName:"webgl",kernelFunc:QB};class tW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class nW{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function rW(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function aW(e){let t=1;for(;t<e;)t*=2;return t}const sW={kernelName:Yr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{k:s,sorted:i}=r,o=Je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=Je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=a.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([a])||c<o||s>u){const e=n.readSync(a.dataId),[t,r]=fD(e,l,a.dtype,s,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===s)return l[l.length-1]=0,[n.makeTensorInfo(l,a.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[a,GL({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const d=n.texData.get(a.dataId),h=null!==d&&d.isPacked,p=h?n.unpackTensor(a):a,f=de(l)/c,m=iM({inputs:{x:p},attrs:{shape:[f,c]},backend:n});h&&rW(n,p);const g=aW(s),y=aW(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const a=x(),s=new tW(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(s,a,"int32",i),rW(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new nW([f,e/2]),a=[[c],[null===b?1:0],[g]],s=b;b=n.runWebGLProgram(r,t,"int32",a),rW(n,s);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=hO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,s]}}),rW(n,v);let k=uz({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});rW(n,m);const I=l.slice(0,-1);I.push(s),v=b,b=iM({inputs:{x:b},attrs:{shape:I},backend:n}),rW(n,v);const S=k;return k=iM({inputs:{x:k},attrs:{shape:I},backend:n}),rW(n,S),[k,b]}};class iW{constructor(e,t,n,r,a,s){this.variableNames=["Image","Transforms"],this.outputShape=s;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${a});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${a});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const oW={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a,transforms:s}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=new iW(d,h,i,o,u,[c,f,m,p]);return n.runWebGLProgram(g,[a,s],"float32")}},uW={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:a}=n,{x:s}=t;qR(s,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(s.dataId),{outputValues:o,outputShape:u,indices:l}=gD(i,a,s.shape,s.dtype);return[r.makeTensorInfo(u,s.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},lW={kernelName:ea,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a,o=i.shape.length,u=a.shape[s],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==s&&(l[c++]=i.shape[e]);const d=[],h=new Array(o).fill(0),p=i.shape.slice();p[s]=1;const f=new Array(u);for(let e=0;e<f.length;e++){h[s]=e;const t=hO({inputs:{x:i},backend:n,attrs:{begin:h,size:p}}),r=iM({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,d.push(t)}return d.forEach(e=>n.disposeIntermediateTensorInfo(e)),f}};class cW{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,a=e.inSize,s=e.numSegments,i=s*Math.ceil(a/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";a%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return initializationValue;\n        }\n      `);let d="";a%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${a}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${d}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${s})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${s})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const dW={kernelName:ta,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a,segmentIds:s}=t,{numSegments:i}=r,o=a.shape.length,u=[];let l=0;const c=zc([l],o);let d=a;null!=c&&(d=gM({inputs:{x:a},backend:n,attrs:{perm:c}}),u.push(d),l=Bc(1,o)[0]);const h=Cf(d.shape,l,i),p=de([d.shape[l]]),f=iM({inputs:{x:d},backend:n,attrs:{shape:[-1,p]}});u.push(f);const m=us(a.dtype),g=(e,t,r,a,s)=>{const i=e.shape[0],o=e.shape[1],l=Tf(o,s),c=new cW({windowSize:l,inSize:o,batchSize:i,numSegments:s},t),d=n.compileAndRun(c,[e,r],a);if(u.push(d),d.shape[1]===s)return d;const h=LP({backend:n,attrs:{start:0,stop:s,step:1,dtype:"float32"}}),p=QB({inputs:{x:h},backend:n,attrs:{reps:[o/l]}});return u.push(h),u.push(p),g(d,t,p,a,s)},y=iM({inputs:{x:g(f,"unsortedSegmentSum",s,m,i)},backend:n,attrs:{shape:h}});let b=y;if(null!=c){u.push(y);const e=Pc(c);b=gM({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach(e=>n.disposeIntermediateTensorInfo(e)),b}},hW=[zz,Bz,xM,vM,IM,NM,$M,AM,RM,FM,PM,BM,VM,GM,KM,jM,YM,eO,QM,rO,aO,sO,uO,fO,mO,gO,vO,SO,CO,_O,GD,zO,XO,YO,GO,JO,QO,ZO,tL,rL,sL,lL,cL,hL,bL,xL,mL,vL,IL,SL,TL,CL,EL,AL,DL,OL,PL,VL,HL,qL,YL,JL,tz,rz,az,iz,lz,dz,pz,VD,fz,MO,gz,bz,wz,qD,kz,Sz,Nz,Ez,Cz,Az,Fz,Mz,Vz,jz,Hz,Xz,Yz,Zz,Gz,Jz,Qz,tP,aP,iP,mP,sM,yP,xP,vP,IP,bO,NP,$P,EP,FP,MP,YD,OP,zP,wO,lP,BP,GP,VP,oM,qP,XP,JP,eB,rB,sB,oB,lB,dB,pB,mB,bB,wB,kB,SB,pO,fP,TB,CB,$B,EB,_B,AB,RB,FB,OB,zB,WB,VB,GB,HB,jB,qB,hP,mM,XB,ZB,eW,sW,oW,yM,uW,lW,dW,CP];for(const e of hW)fa(e);const pW={"tfjs-core":jo,"tfjs-backend-cpu":"3.11.0","tfjs-backend-webgl":"3.11.0","tfjs-data":oT,"tfjs-layers":Rw,"tfjs-converter":Xm,tfjs:"3.11.0"};var fW,mW;let gW;!function(e){e[e.float32=0]="float32",e[e.int32=1]="int32",e[e.bool=2]="bool",e[e.string=3]="string",e[e.complex64=4]="complex64"}(fW||(fW={})),function(e){e[e.linear=0]="linear",e[e.relu=1]="relu",e[e.relu6=2]="relu6",e[e.prelu=3]="prelu",e[e.leakyrelu=4]="leakyrelu",e[e.sigmoid=5]="sigmoid",e[e.elu=6]="elu"}(mW||(mW={}));const yW={kernelName:ia,backendName:"wasm",setupFunc:function(e){gW=e.wasm.cwrap(ia,null,["number","array","number","number","array","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s,bias:i,preluActivationWeights:o}=t;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("_FusedMatMul for non non-float32 tensors not yet supported.");const{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:d}=r,h=n.dataIdMap.get(a.dataId).id,p=n.dataIdMap.get(s.dataId).id;let f=0;if(null!=i){const e=n.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`_FusedMatMul only supports rank-1 bias but got rank ${e.shape.length}.`);f=e.id}const m=null==o?0:n.dataIdMap.get(o.dataId).id,g=mW[c];if(null==g)throw new Error(`${c} activation not yet supported for FusedConv2D in the wasm backend.`);const y=u?a.shape[2]:a.shape[1],b=l?s.shape[1]:s.shape[2],x=a.shape[0],w=n.makeOutput([x,y,b],a.dtype),v=n.dataIdMap.get(w.dataId).id,k=new Uint8Array(new Int32Array(a.shape).buffer),I=new Uint8Array(new Int32Array(s.shape).buffer);return gW(h,k,a.shape.length,p,I,s.shape.length,u,l,g,f,m,d||0,v),w}};function bW(e,t){let n;return{kernelName:e,backendName:"wasm",setupFunc:function(t){n=t.wasm.cwrap(e,null,["number","number","number"])},kernelFunc:function(e){const{backend:r,inputs:{x:a}}=e,s=r.dataIdMap.get(a.dataId).id,i=r.makeOutput(a.shape,t||a.dtype),o=r.dataIdMap.get(i.dataId).id;return 0===de(i.shape)||n(s,fW[a.dtype],o),i}}}const xW=bW(rt);function wW(e,t,n){let r;return{kernelName:e,backendName:"wasm",setupFunc:function(t){r=t.wasm.cwrap(e,null,["number","array","number","number","array","number","number","number"])},kernelFunc:function(a){const{backend:s,inputs:i}=a,{a:o,b:u}=i,l=s.dataIdMap.get(o.dataId).id,c=s.dataIdMap.get(u.dataId).id,d=null!=n?n:o.dtype,h=Pu(o.shape,u.shape),p=s.makeOutput(h,d);if(0===de(h))return p;const f=new Uint8Array(new Int32Array(o.shape).buffer),m=new Uint8Array(new Int32Array(u.shape).buffer),g=s.dataIdMap.get(p.dataId).id,y=()=>r(l,f,o.shape.length,c,m,u.shape.length,fW[o.dtype],g);if(t&&"float32"===o.dtype)return y(),p;const b=Lu(o.shape,h),x=Lu(u.shape,h),w=b.every((e,t)=>e===t),v=x.every((e,t)=>e===t);if(w&&v)return y(),p;throw new Error(`Broadcasting along outer dims is not yet supported for ${o.dtype} ${e}.`)}}}const vW=wW(it,!0);let kW;const IW={kernelName:ot,backendName:"wasm",setupFunc:function(e){kW=e.wasm.cwrap(ot,null,["array","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,r=n.makeOutput(t[0].shape,t[0].dtype);if(0===de(r.shape))return r;const a=t.map(e=>n.dataIdMap.get(e.dataId).id),s=new Uint8Array(new Int32Array(a).buffer),i=n.dataIdMap.get(r.dataId).id;return kW(s,a.length,fW[r.dtype],i),r}};function SW(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype),a=n.typedArrayFromHeap(t);return n.typedArrayFromHeap(r).set(a),r}const NW={kernelName:yn,backendName:"wasm",kernelFunc:SW};let TW;function CW(e){const{inputs:t,backend:n,attrs:r}=e,[a,s]=function(e,t){const n=[],r=[];for(let a=0;a<e.length;++a)1!==e[a]&&n.push(e[a]),1!==e[t[a]]&&r.push(t[a]);for(let e=0;e<r.length;++e){let t=-1;for(let n=0;n<r.length;++n)r[n]>=e&&(-1===t||r[t]>r[n])&&(t=n);r[t]=e}return[n,r]}(t.x.shape,r.perm);let i=!0;for(let e=0;e<s.length;e++)s[e]!==e&&(i=!1);const o=function(e,t){const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];return n}(t.x.shape,r.perm),u={dataId:t.x.dataId,shape:a,dtype:t.x.dtype};if(i){const e=SW({inputs:t,backend:n});return e.shape=o,e}const l=n.makeOutput(o,u.dtype),c=n.dataIdMap.get(u.dataId).id,d=n.dataIdMap.get(l.dataId).id,h=new Uint8Array(new Int32Array(s).buffer),p=new Uint8Array(new Int32Array(u.shape).buffer);return TW(c,p,u.shape.length,fW[u.dtype],d,h,s.length),l}const $W={kernelName:Jr,backendName:"wasm",kernelFunc:CW,setupFunc:function(e){TW=e.wasm.cwrap(Jr,null,["number","array","number","number","number","array","number"])}};function EW(e,t,n){const r=e.shape,a=e.shape.length,s=ve(t,r);let i=s;const o=zc(i,a);let u=null,l=!1;if(null!=o){const t=new Array(a);for(let e=0;e<t.length;e++)t[e]=r[o[e]];i=Bc(i.length,a),u=CW({inputs:{x:e},attrs:{perm:o},backend:n});const s=n.dataIdMap.get(e.dataId).id;n.dataIdMap.get(u.dataId).id!==s&&(l=!0)}return{transposed:u,originalAxes:s,axes:i,inputWasTransposed:l}}let _W;const AW={kernelName:ut,backendName:"wasm",setupFunc:function(e){_W=e.wasm.cwrap(ut,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=EW(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id),Lc("all",c,u.shape.length);const[p,f]=Mc(u.shape,c),m=de(f),g=t.makeOutput(p,i.dtype);if(0!==de(u.shape)){const e=t.dataIdMap.get(g.dataId).id;_W(o,m,e)}if(h&&t.disposeData(l.dataId),s){const e=Oc(g.shape,d);g.shape=e}return g}};let RW;const FW={kernelName:lt,backendName:"wasm",setupFunc:function(e){RW=e.wasm.cwrap(lt,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=EW(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id),Lc("any",c,u.shape.length);const[p,f]=Mc(u.shape,c),m=de(f),g=t.makeOutput(p,i.dtype);if(0!==de(u.shape)){const e=t.dataIdMap.get(g.dataId).id;RW(o,m,e)}if(h&&t.disposeData(l.dataId),s){const e=Oc(g.shape,d);g.shape=e}return g}};let DW;const MW={kernelName:ct,backendName:"wasm",kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id;let o=i,u=s;const{transposed:l,axes:c,inputWasTransposed:d}=EW(s,a,t);if(d){const e=t.dataIdMap.get(l.dataId).id;e!==i&&(u=l,o=e)}const h=u.shape.slice(0,-1),p=t.makeOutput(h,"int32"),f=t.dataIdMap.get(p.dataId).id,m=de(p.shape),g=u.shape[c[0]];return DW(o,fW[u.dtype],m,g,f),d&&t.disposeData(l.dataId),p},setupFunc:function(e){DW=e.wasm.cwrap(ct,null,["number","number","number","number","number"])}};let OW;const LW={kernelName:yt,backendName:"wasm",setupFunc:function(e){OW=e.wasm.cwrap(yt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=sl(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.strideHeight,b=c.strideWidth,x=c.inChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);if(1!==c.dilationWidth||1!==c.dilationHeight)throw new Error(`was backend only supports average pooling with dilation = [1, 1], got [${c.dilationHeight}, ${c.dilationWidth}].`);const w=r.makeOutput(c.outShape,"float32"),v=r.dataIdMap.get(w.dataId).id;return OW(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,x,v),w}};function zW(e){const{inputs:t,attrs:n}=e,{x:r}=t,{shape:a}=n,s=de(r.shape),i=we(a,s);return oe(s===de(i),()=>`new shape: ${i}, old shape: ${r.shape}. New shape and old shape must have the same number of elements.`),e.backend.incRef(r.dataId),{dataId:r.dataId,shape:i,dtype:r.dtype}}const PW={kernelName:hr,backendName:"wasm",kernelFunc:zW};let BW;const WW={kernelName:vt,backendName:"wasm",setupFunc:function(e){BW=e.wasm.cwrap(vt,null,["number","array","number","number","array","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a,b:s}=t,{transposeA:i,transposeB:o}=r;if("float32"!==a.dtype||"float32"!==s.dtype)throw new Error("BatchMatMul for non non-float32 tensors not yet supported.");const u=a.shape.length,l=s.shape.length,c=i?a.shape[u-2]:a.shape[u-1],d=o?s.shape[l-1]:s.shape[l-2],h=i?a.shape[u-1]:a.shape[u-2],p=o?s.shape[l-2]:s.shape[l-1],f=a.shape.slice(0,-2),m=s.shape.slice(0,-2),g=de(f),y=de(m);oe(u>=2&&l>=2&&(g===y||1===g||1===y),()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${f}) and (${m}).`);const b=(g>y?a.shape.slice(0,-2):s.shape.slice(0,-2)).concat([h,p]);oe(c===d,()=>`Error in matMul: inner shapes (${c}) and (${d}) of Tensors with shapes ${a.shape} and ${s.shape} and transposeA=${i} and transposeB=${o} must match.`);const x=o?[y,p,d]:[y,d,p],w=zW({inputs:{x:a},backend:n,attrs:{shape:i?[g,c,h]:[g,h,c]}}),v=zW({inputs:{x:s},backend:n,attrs:{shape:x}}),k=n.dataIdMap.get(w.dataId).id,I=n.dataIdMap.get(v.dataId).id,S=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],T=Math.max(g,y),C=n.makeOutput([T,S,N],w.dtype),$=n.dataIdMap.get(C.dataId).id,E=new Uint8Array(new Int32Array(w.shape).buffer),_=new Uint8Array(new Int32Array(v.shape).buffer);return BW(k,E,w.shape.length,I,_,v.shape.length,i,o,$),n.disposeData(w.dataId),n.disposeData(v.dataId),C.shape=b,C}};function VW(e){const{inputs:{x:t},attrs:{begin:n,size:r},backend:a}=e,[s,i]=$o(t,n,r),o=To(t.shape,s,i),u=a.readSync(t.dataId),l=a.makeOutput(i,t.dtype),c=Le(t.shape),d=a.dataIdMap.get(l.dataId);if(o){const e=Co(s,c);return"string"===t.dtype?d.stringBytes=u.slice(e,e+de(i)):a.typedArrayFromHeap(l).set(u.subarray(e,e+de(i))),l}if("string"===t.dtype){const e=EC(u,s,i,t.shape,t.dtype);return d.stringBytes=e,l}const h=a.typedArrayFromHeap(l),p=t.shape.length;if(2===p)!function(e,t,n,r,a){let s=0;const i=r[0],o=r[1],u=i+a[0];for(let r=i;r<u;r++){const i=r*t+o;n.set(e.subarray(i,i+a[1]),s),s+=a[1]}}(u,c[0],h,s,i);else if(3===p)!function(e,t,n,r,a,s){let i=0;const o=a[0],u=a[1],l=a[2],c=o+s[0],d=u+s[1];for(let a=o;a<c;a++)for(let o=u;o<d;o++){const u=a*t+o*n+l;r.set(e.subarray(u,u+s[2]),i),i+=s[2]}}(u,c[0],c[1],h,s,i);else if(4===p)!function(e,t,n,r,a,s,i){let o=0;const u=s[0],l=s[1],c=s[2],d=u+i[0],h=l+i[1],p=c+i[2],f=s[3];for(let s=u;s<d;s++)for(let u=l;u<h;u++)for(let l=c;l<p;l++){const c=s*t+u*n+l*r+f;a.set(e.subarray(c,c+i[3]),o),o+=i[3]}}(u,c[0],c[1],c[2],h,s,i);else{const e=EC(u,s,i,t.shape,t.dtype);h.set(e)}return l}const UW={kernelName:Sr,backendName:"wasm",kernelFunc:VW},GW={kernelName:kt,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,crops:i}=r,o=s.reduce((e,t)=>e*t),u=qp(a.shape,s,o),l=Kp(u.length,s.length),c=Xp(a.shape,s,o),d=Yp(i,s.length),h=Zp(c,i,s.length),p=zW({inputs:{x:a},backend:n,attrs:{shape:u}}),f=CW({inputs:{x:p},backend:n,attrs:{perm:l}}),m=VW({inputs:{x:zW({inputs:{x:f},backend:n,attrs:{shape:c}})},backend:n,attrs:{begin:d,size:h}});return n.disposeData(p.dataId),n.disposeData(f.dataId),n.disposeData(p.dataId),m}};function HW(e){const{inputs:{x:t},attrs:{dtype:n},backend:r}=e,a=r.makeOutput(t.shape,n),s=r.typedArrayFromHeap(t);return r.typedArrayFromHeap(a).set(s),a}const jW={kernelName:Tt,backendName:"wasm",kernelFunc:HW},qW=bW(Ct);let KW;const XW={kernelName:$t,backendName:"wasm",setupFunc:function(e){KW=e.wasm.cwrap($t,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{clipValueMin:s,clipValueMax:i}=r,o=n.dataIdMap.get(a.dataId).id,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(u.dataId).id;return KW(o,s,i,l),u}};function YW(e){const{inputs:t,backend:n}=e,r=ve(e.attrs.axis,t[0].shape)[0];let a=Up(t.map(e=>e.shape),r);const s=t.filter(e=>de(e.shape)>0);if(1===s.length)return SW({inputs:{x:s[0]},backend:n});const i=n.makeOutput(a,t[0].dtype);if(0===de(a))return i;if(Vp(s.map(e=>e.shape),r),"string"===s[0].dtype){const e=s.map(e=>{const t=de(e.shape.slice(r));return zW({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})}),o=e.map(e=>({vals:n.readSync(e.dataId),shape:e.shape}));a=Up(e.map(e=>e.shape),1);const u=1===e[0].shape[0],l=UC(o,a,t[0].dtype,u),c=Up(s.map(e=>e.shape),r);return i.shape=c,n.dataIdMap.get(i.dataId).stringBytes=_f(l),e.forEach(e=>n.disposeData(e.dataId)),i}const o=de(s[0].shape.slice(0,r));let u=0;const l=s.map(e=>{const t=de(e.shape.slice(r));return u+=t,t}),c=s.map(e=>n.typedArrayFromHeap(e)),d=n.typedArrayFromHeap(i);for(let e=0;e<o;e++){let t=e*u;for(let n=0;n<c.length;n++){const r=l[n],a=e*r,s=c[n].subarray(a,a+r);d.set(s,t),t+=r}}return i}const ZW={kernelName:At,backendName:"wasm",kernelFunc:YW};let JW;const QW={kernelName:Rt,backendName:"wasm",setupFunc:function(e){JW=e.wasm.cwrap(Rt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d,dataFormat:h}=n,p=gl(h),f=ol(a.shape,s.shape,u,l,c,d,!1,p),m=f.filterHeight,g=f.filterWidth,y=f.padInfo.top,b=f.padInfo.right,x=f.padInfo.bottom,w=f.padInfo.left,v=f.dilationHeight,k=f.dilationWidth,I=f.strideHeight,S=f.strideWidth,N=f.inChannels,T=f.outChannels,C="SAME"===f.padInfo.type?1:0;if("channelsLast"!==f.dataFormat)throw new Error(`wasm backend Conv2D does not support dataFormat:'${f.dataFormat}'. Please use 'channelsLast'.`);const $=r.makeOutput(f.outShape,"float32"),E=r.dataIdMap.get($.dataId).id;return JW(i,a.shape[0],a.shape[1],a.shape[2],o,m,g,y,b,x,w,C,v,k,I,S,N,T,E),$}};let eV;const tV={kernelName:Dt,backendName:"wasm",setupFunc:function(e){eV=e.wasm.cwrap(Dt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{dy:a,filter:s}=n,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,inputShape:c}=r,d=gl(u),h=ol(c,s.shape,i,1,o,l,!1,d),{batchSize:p,filterHeight:f,filterWidth:m,inChannels:g,inHeight:y,inWidth:b,outChannels:x,outHeight:w,outWidth:v,strideHeight:k,strideWidth:I}=h,S=f-1-h.padInfo.top,N=m-1-h.padInfo.left,T="channelsLast"===h.dataFormat,C=Le(h.inShape),$=Le(a.shape),[E,_,A]=Le(s.shape),R=C[0],F=T?C[1]:C[2],D=T?C[2]:1,M=T?1:C[1],O=$[0],L=T?$[1]:$[2],z=T?$[2]:1,P=T?1:$[1],B=t.makeOutput(h.inShape,"float32"),W=t.dataIdMap.get(B.dataId).id,V=t.dataIdMap.get(a.dataId).id,U=t.dataIdMap.get(s.dataId).id;return eV(V,U,p,f,m,y,b,g,w,v,x,k,I,S,N,E,_,A,R,F,D,M,O,L,z,P,W),B}},nV=bW(zt),rV=bW(Pt);var aV;let sV;!function(e){e[e.bilinear=0]="bilinear",e[e.nearest=1]="nearest"}(aV||(aV={}));const iV={kernelName:Wt,backendName:"wasm",setupFunc:function(e){sV=e.wasm.cwrap(Wt,null,["number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{method:a,extrapolationValue:s,cropSize:i}=r,{image:o,boxes:u,boxInd:l}=n,c=u.shape[0],[d,h]=i,p=[c,d,h,o.shape[3]];let f,m=t.dataIdMap.get(o.dataId);"float32"!==o.dtype&&(f=HW({backend:t,inputs:{x:o},attrs:{dtype:"float32"}}),m=t.dataIdMap.get(f.dataId));const g=m.id,y=t.dataIdMap.get(u.dataId).id,b=t.dataIdMap.get(l.dataId).id,x=t.makeOutput(p,"float32"),w=t.dataIdMap.get(x.dataId).id,v=new Uint8Array(new Int32Array(o.shape).buffer);return sV(g,y,b,c,v,d,h,aV[a],s,w),null!=f&&t.disposeData(f.dataId),x}};let oV;const uV={kernelName:Bt,backendName:"wasm",setupFunc:function(e){oV=e.wasm.cwrap(Bt,null,["number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{axis:s,exclusive:i,reverse:o}=r,u=a.shape.length;oe("float32"===a.dtype||"int32"===a.dtype,()=>`cumsum does not support ${a.dtype} tensors in the WASM backend`);const l=zc([s],u);let c=a;null!==l&&(c=CW({inputs:{x:a},attrs:{perm:l},backend:n}));const d=Bc(1,u)[0];Lc("cumsum",[d],u);const h=n.makeOutput(c.shape,c.dtype),p=c.shape[d],f=n.dataIdMap.get(c.dataId).id,m=n.dataIdMap.get(h.dataId).id;oV(f,i?1:0,o?1:0,p,m,fW[a.dtype]);let g=h;return null!==l&&(g=CW({inputs:{x:h},attrs:{perm:Pc(l)},backend:n}),n.disposeData(c.dataId),n.disposeData(h.dataId)),g}};let lV;const cV={kernelName:Ut,backendName:"wasm",setupFunc:function(e){lV=e.wasm.cwrap(Ut,null,["number","number","number","array","number","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{blockSize:s,dataFormat:i}=r,o=a.shape[0],u=("NHWC"===i?a.shape[1]:a.shape[2])*s,l=("NHWC"===i?a.shape[2]:a.shape[3])*s,c=("NHWC"===i?a.shape[3]:a.shape[1])/(s*s),d="NHWC"===i?[o,u,l,c]:[o,c,u,l],h=t.makeOutput(d,"float32"),p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(Le(a.shape)).buffer),m=new Uint8Array(new Int32Array(d).buffer),g=new Uint8Array(new Int32Array(Le(d)).buffer),y=t.dataIdMap.get(h.dataId).id;return lV(p,s,"NHWC"===i?1:0,f,a.shape.length-1,m,g,d.length,y),h}};let dV;const hV={kernelName:Gt,backendName:"wasm",setupFunc:function(e){dV=e.wasm.cwrap(Gt,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s}=t,i=r.dataIdMap.get(a.dataId).id,o=r.dataIdMap.get(s.dataId).id,{strides:u,dilations:l,pad:c,dimRoundingMode:d}=n,h=null==l?[1,1]:l,p=ol(a.shape,s.shape,u,h,c,d,!0),f=p.filterHeight,m=p.filterWidth,g=p.padInfo.top,y=p.padInfo.right,b=p.padInfo.bottom,x=p.padInfo.left,w=p.dilationHeight,v=p.dilationWidth,k=p.strideHeight,I=p.strideWidth,S=p.inChannels,N=p.outChannels,T="SAME"===p.padInfo.type?1:0;if("channelsLast"!==p.dataFormat)throw new Error(`wasm backend DepthwiseConv2dNative does not support dataFormat:'${p.dataFormat}'. Please use 'channelsLast'.`);const C=r.makeOutput(p.outShape,"float32"),$=r.dataIdMap.get(C.dataId).id;return dV(i,a.shape[0],a.shape[1],a.shape[2],o,f,m,g,y,b,x,T,w,v,k,I,S,N,$),C}},pV=bW(Qt),fV=wW(nn,!1,"bool"),mV=bW(rn,"float32");function gV(e){const{inputs:t,attrs:n,backend:r}=e,{input:a}=t,{dim:s}=n,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(oe(-(i+1)<=s,()=>`Axis must be in the interval [${-(i+1)}, ${i}]`),u=i+s+1),o.splice(u,0,1),zW({inputs:{x:a},backend:r,attrs:{shape:o}})}const yV={kernelName:an,backendName:"wasm",kernelFunc:gV};function bV(e){const{attrs:{shape:t,value:n,dtype:r},backend:a}=e,s=a.makeOutput(t,r);return a.typedArrayFromHeap(s).fill(n),s}const xV={kernelName:un,backendName:"wasm",kernelFunc:bV};let wV;const vV={kernelName:ln,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{image:r}=t,a=n.makeOutput(r.shape,r.dtype),s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id,[o,u,l,c]=r.shape;return wV(s,o,u,l,c,i),a},setupFunc:function(e){wV=e.wasm.cwrap(ln,null,["number","number","number","number","number","number"])}},kV=bW(cn),IV=wW(dn,!1);let SV;const NV={kernelName:hn,backendName:"wasm",setupFunc:function(e){SV=e.wasm.cwrap(hn,null,["number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{varianceEpsilon:a}=r,{x:s,mean:i,variance:o,offset:u,scale:l}=n,c=t.dataIdMap.get(s.dataId).id,d=t.dataIdMap.get(i.dataId).id,h=t.dataIdMap.get(o.dataId).id,p=null!=u?t.dataIdMap.get(u.dataId).id:0,f=null!=l?t.dataIdMap.get(l.dataId).id:0,m=t.makeOutput(s.shape,s.dtype);if(0===de(s.shape))return m;const g=t.dataIdMap.get(m.dataId).id;return SV(c,d,h,p,f,a,g),m}};let TV;const CV={kernelName:oa,backendName:"wasm",setupFunc:function(e){TV=e.wasm.cwrap(oa,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=ol(a.shape,s.shape,u,c,l,h),g=mW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return TV(y,F,D,M,b,v,k,w,I,S,N,T,R,C,$,E,_,A,x,g,z,f||0,L),O}};let $V;const EV={kernelName:ua,backendName:"wasm",setupFunc:function(e){$V=e.wasm.cwrap(ua,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a,filter:s,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dataFormat:d,dimRoundingMode:h,activation:p,leakyreluAlpha:f}=n,m=ol(a.shape,s.shape,u,c,l,h,!0),g=mW[p];if(null==g)throw new Error(`${p} activation not yet supported for FusedDepthwiseConv2D in the wasm backend.`);const y=r.dataIdMap.get(a.dataId).id,b=r.dataIdMap.get(s.dataId).id,x=m.outChannels;let w=0;if(null!=i){const e=r.dataIdMap.get(i.dataId);if(1!==e.shape.length)throw new Error(`FusedDepthwiseConv2D only supports rank-1 bias but got rank ${e.shape.length}.`);if(e.shape[0]!==x)throw new Error(`FusedDepthwiseConv2D bias shape (${e.shape}) does not match the number of output channels (${x})`);w=e.id}const v=m.filterHeight,k=m.filterWidth,I=m.padInfo.top,S=m.padInfo.right,N=m.padInfo.bottom,T=m.padInfo.left,C=m.dilationHeight,$=m.dilationWidth,E=m.strideHeight,_=m.strideWidth,A=m.inChannels,R="SAME"===m.padInfo.type?1:0,F=m.batchSize,D=m.inHeight,M=m.inWidth;if("NHWC"!==d)throw new Error(`wasm backend FusedDepthwiseConv2D does not support dataFormat:'${d}'. Please use 'NHWC'.`);const O=r.makeOutput(m.outShape,"float32"),L=r.dataIdMap.get(O.dataId).id,z=null==o?0:r.dataIdMap.get(o.dataId).id;return $V(y,F,D,M,b,v,k,w,I,S,N,T,R,C,$,E,_,A,x,g,z,f||0,L),O}};let _V;const AV={kernelName:fn,backendName:"wasm",setupFunc:function(e){_V=e.wasm.cwrap(fn,null,["number","number","number","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n}=e,{params:r,indices:a}=n,[s,i,o,u]=oo(r,a),l=t.makeOutput(s,r.dtype);if(0===i)return l;const c=a.shape,d=c[c.length-1],h=t.dataIdMap.get(r.dataId).id,p=t.dataIdMap.get(a.dataId).id,f=new Uint8Array(new Int32Array(u).buffer),m=t.dataIdMap.get(l.dataId).id;return _V(h,fW[r.dtype],p,i,d,o,f,m),l}};let RV;const FV={kernelName:pn,backendName:"wasm",setupFunc:function(e){RV=e.wasm.cwrap("Gather",null,["number","number","array","number","number","number","array","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a,indices:s}=n,{axis:i,batchDims:o}=r,u=ve(i,a.shape)[0],l=t.readSync(s.dataId),c=a.shape[u];for(let e=0;e<l.length;++e){const t=l[e];oe(t<=c-1&&t>=0,()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`)}const d=$f(a,s,u,o),h=zW({inputs:{x:a},attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]},backend:t}),p=de(s.shape),f=zW({inputs:{x:s},attrs:{shape:[d.batchSize,p/d.batchSize]},backend:t}),m=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],g=t.makeOutput(m,a.dtype);if(0===de(a.shape))return g;const y=h.shape.length-1,b=t.dataIdMap.get(h.dataId).id,x=t.dataIdMap.get(f.dataId).id,w=t.dataIdMap.get(g.dataId).id,v=new Uint8Array(new Int32Array(Le(h.shape)).buffer),k=new Uint8Array(new Int32Array(Le(m)).buffer);return RV(b,fW[a.dtype],v,y,x,d.batchSize,k,w),t.disposeData(h.dataId),t.disposeData(f.dataId),g.shape=d.outputShape,g}},DV=wW(mn,!1,"bool"),MV=wW(gn,!1,"bool");let OV;const LV={kernelName:In,backendName:"wasm",setupFunc:function(e){OV=e.wasm.cwrap(In,null,["number","number","number","number"])},kernelFunc:function(e){const{inputs:{x:t},attrs:{alpha:n},backend:r}=e,a=r.dataIdMap.get(t.dataId).id,s=r.makeOutput(t.shape,"float32");if(0!==de(t.shape)){const e=r.dataIdMap.get(s.dataId).id;OV(a,fW[t.dtype],n,e)}return s}},zV=wW(Sn,!1,"bool"),PV=wW(Nn,!1,"bool"),BV=bW(Cn),WV=wW(En,!1,"bool");let VV;const UV={kernelName:Mn,backendName:"wasm",setupFunc:function(e){VV=e.wasm.cwrap(Mn,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{reductionIndices:a,keepDims:s}=r,{x:i}=n;let o=t.dataIdMap.get(i.dataId).id,u=i;const{transposed:l,axes:c,originalAxes:d,inputWasTransposed:h}=EW(i,a,t);h&&(u=l,o=t.dataIdMap.get(l.dataId).id),Lc("max",c,u.shape.length);const[p,f]=Mc(u.shape,c),m=de(f),g=t.makeOutput(p,i.dtype);if(0!==de(u.shape)){const e=t.dataIdMap.get(g.dataId).id;VV(o,fW[i.dtype],m,e)}if(h&&t.disposeData(l.dataId),s){const e=Oc(g.shape,d);g.shape=e}return g}},GV=wW(On,!1);let HV;const jV={kernelName:Ln,backendName:"wasm",setupFunc:function(e){HV=e.wasm.cwrap(Ln,null,["number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,a=t.x,s=r.dataIdMap.get(a.dataId).id;oe("float32"===a.dtype,()=>`Error in MaxPool: only float32 input is supported. Got ${a.dtype}.`);const{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=n,c=sl(a.shape,i,o,1,u,l),d=c.filterHeight,h=c.filterWidth,p=c.padInfo.top,f=c.padInfo.right,m=c.padInfo.bottom,g=c.padInfo.left,y=c.dilationHeight,b=c.dilationWidth,x=c.strideHeight,w=c.strideWidth,v=c.inChannels,k=c.outChannels;if("channelsLast"!==c.dataFormat)throw new Error(`wasm backend does not support dataFormat:'${c.dataFormat}'. Please use 'channelsLast'.`);const I=r.makeOutput(c.outShape,"float32"),S=r.dataIdMap.get(I.dataId).id;return HV(s,a.shape[0],a.shape[1],a.shape[2],d,h,p,f,m,g,y,b,x,w,v,k,S),I}};let qV;const KV={kernelName:Vn,backendName:"wasm",setupFunc:function(e){qV=e.wasm.cwrap(Vn,null,["number, number, number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=EW(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Bc(f.length,l.shape.length))}Lc("mean",f,l.shape.length);const[m,g]=Mc(l.shape,f),y=de(g);let b=l;"float32"!==l.dtype&&(b=HW({backend:t,inputs:{x:l},attrs:{dtype:"float32"}}),u=t.dataIdMap.get(b.dataId).id);const x=t.makeOutput(m,"float32");if(0!==de(l.shape)){const e=t.dataIdMap.get(x.dataId).id;qV(u,y,e)}if(p&&t.disposeData(c.dataId),s){const e=Oc(x.shape,h);x.shape=e}return"float32"!==l.dtype&&t.disposeData(b.dataId),x}};let XV;const YV={kernelName:Un,backendName:"wasm",setupFunc:function(e){XV=e.wasm.cwrap(Un,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=EW(i,a,t);if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e)}Lc("min",d,l.shape.length);const[f,m]=Mc(l.shape,d),g=de(m),y=t.makeOutput(f,l.dtype);if(0!==de(l.shape)){const e=t.dataIdMap.get(y.dataId).id;XV(u,fW[i.dtype],g,e)}if(p&&t.disposeData(c.dataId),s){const e=Oc(y.shape,h);y.shape=e}return y}},ZV=wW(Gn,!1);var JV;let QV;!function(e){e[e.reflect=0]="reflect",e[e.symmetric=1]="symmetric"}(JV||(JV={}));const eU={kernelName:Hn,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,mode:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]),i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return QV(i,l,t.shape.length,fW[t.dtype],h,p,JV[a],u),o},setupFunc:function(e){QV=e.wasm.cwrap(Hn,null,["number","array","number","number","array","array","number","number"])}},tU=wW(Kn,!0),nU=bW(Xn);function rU(e,t){const n=new Int32Array(e.wasm.HEAPU8.buffer,t,4),r=n[0],a=n[1],s=n[2],i=n[3];return e.wasm._free(t),{pSelectedIndices:r,selectedSize:a,pSelectedScores:s,pValidOutputs:i}}let aU;const sU={kernelName:Zn,backendName:"wasm",setupFunc:function(e){aU=e.wasm.cwrap(Zn,"number",["number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i}=r,{boxes:o,scores:u}=n,l=t.dataIdMap.get(o.dataId).id,c=t.dataIdMap.get(u.dataId).id,d=aU(l,c,s,a,i),{pSelectedIndices:h,selectedSize:p,pSelectedScores:f,pValidOutputs:m}=rU(t,d);return t.wasm._free(f),t.wasm._free(m),t.makeOutput([p],"int32",h)}};let iU;const oU={kernelName:Jn,backendName:"wasm",setupFunc:function(e){iU=e.wasm.cwrap(Jn,"number",["number","number","number","number","number","bool"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,padToMaxOutputSize:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=iU(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rU(t,h);return t.wasm._free(m),[t.makeOutput([f],"int32",p),t.makeOutput([],"int32",g)]}};let uU;const lU={kernelName:Qn,backendName:"wasm",setupFunc:function(e){uU=e.wasm.cwrap(Qn,"number",["number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{iouThreshold:a,maxOutputSize:s,scoreThreshold:i,softNmsSigma:o}=r,{boxes:u,scores:l}=n,c=t.dataIdMap.get(u.dataId).id,d=t.dataIdMap.get(l.dataId).id,h=uU(c,d,s,a,i,o),{pSelectedIndices:p,selectedSize:f,pSelectedScores:m,pValidOutputs:g}=rU(t,h);return t.wasm._free(g),[t.makeOutput([f],"int32",p),t.makeOutput([f],"float32",m)]}},cU=wW(Yn,!1,"bool");let dU;const hU={kernelName:tr,backendName:"wasm",setupFunc:function(e){dU=e.wasm.cwrap(tr,null,["number","number","number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:a}=t,{depth:s,onValue:i,offValue:o}=r,u=n.makeOutput([...a.shape,s],"int32"),l=n.dataIdMap.get(u.dataId).id,c=n.dataIdMap.get(a.dataId).id;return dU(c,s,i,o,l),u}},pU={kernelName:er,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(1),r}},fU={kernelName:nr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:a}=r;if(1===t.length)return gV({inputs:{input:t[0]},backend:n,attrs:{dim:a}});const s=t[0].shape,i=t[0].dtype;t.forEach(e=>{ue(s,e.shape,"All tensors passed to stack must have matching shapes"),oe(i===e.dtype,()=>"All tensors passed to stack must have matching dtypes")});const o=[],u=YW({inputs:t.map(e=>{const t=gV({inputs:{input:e},backend:n,attrs:{dim:a}});return o.push(t),t}),backend:n,attrs:{axis:a}});return o.forEach(e=>n.disposeData(e.dataId)),u}};let mU;const gU={kernelName:rr,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n,attrs:{paddings:r,constantValue:a}}=e,s=r.map((e,n)=>e[0]+t.shape[n]+e[1]);if(0===de(t.shape))return bV({backend:n,attrs:{shape:s,value:a,dtype:t.dtype}});const i=n.dataIdMap.get(t.dataId).id,o=n.makeOutput(s,t.dtype),u=n.dataIdMap.get(o.dataId).id,l=new Uint8Array(new Int32Array(t.shape).buffer),c=r.map(e=>e[0]),d=r.map(e=>e[1]),h=new Uint8Array(new Int32Array(c).buffer),p=new Uint8Array(new Int32Array(d).buffer);return mU(i,l,t.shape.length,fW[t.dtype],h,p,a,u),o},setupFunc:function(e){mU=e.wasm.cwrap(rr,null,["number","array","number","number","array","array","number","number"])}},yU=wW(sr,!1);let bU;const xU={kernelName:ir,backendName:"wasm",setupFunc:function(e){bU=e.wasm.cwrap(ir,null,["number","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:a}=t,s=n.dataIdMap.get(r.dataId).id,i=n.dataIdMap.get(a.dataId).id;let o=s;const u=r;let l=u;"float32"!==u.dtype&&(l=HW({backend:n,inputs:{x:r},attrs:{dtype:"float32"}}),o=n.dataIdMap.get(l.dataId).id);const c=n.makeOutput(r.shape,"float32"),d=n.dataIdMap.get(c.dataId).id;return bU(o,i,d),"float32"!==u.dtype&&n.disposeData(l.dataId),c}};let wU;const vU={kernelName:or,backendName:"wasm",setupFunc:function(e){wU=e.wasm.cwrap(or,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=EW(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Bc(f.length,l.shape.length))}Lc("prod",f,l.shape.length);const[m,g]=Mc(l.shape,f),y=de(g),b=t.makeOutput(m,l.dtype);if(0!==de(l.shape)){const e=t.dataIdMap.get(b.dataId).id;wU(u,y,fW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Oc(b.shape,h);b.shape=e}return b}},kU={kernelName:ur,backendName:"wasm",kernelFunc:e=>{const{backend:t,attrs:n}=e,{start:r,stop:a,step:s,dtype:i}=n,o=H_(r,a,s,i),u=t.makeOutput([o.length],i);return t.typedArrayFromHeap(u).set(o),u}},IU=wW(Zt,!0),SU=bW(dr),NU=bW(yr);let TU;const CU={kernelName:mr,backendName:"wasm",setupFunc:function(e){TU=e.wasm.cwrap(mr,null,["number","number","number","number","number","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{images:a}=n,{alignCorners:s,halfPixelCenters:i,size:o}=r,[u,l]=o,[c,d,h,p]=a.shape,f=[c,u,l,p];let m,g=t.dataIdMap.get(a.dataId);"float32"!==g.dtype&&(m=HW({backend:t,inputs:{x:a},attrs:{dtype:"float32"}}),g=t.dataIdMap.get(m.dataId));const y=g.id,b=t.makeOutput(f,"float32");if(0===de(a.shape))return b;const x=t.dataIdMap.get(b.dataId).id;return TU(y,c,d,h,p,u,l,s?1:0,i?1:0,x),null!=m&&t.disposeData(m.dataId),b}};let $U;const EU={kernelName:br,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{dims:s}=r,i=ve(s,a.shape);if(0===a.shape.length)return SW({inputs:{x:a},backend:n});const o=n.makeOutput(a.shape,a.dtype),u=n.dataIdMap.get(a.dataId).id,l=n.dataIdMap.get(o.dataId).id,c=new Uint8Array(new Int32Array(i).buffer),d=new Uint8Array(new Int32Array(a.shape).buffer);$U(u,c,i.length,d,a.shape.length,l);const h=zW({inputs:{x:o},attrs:{shape:a.shape},backend:n});return n.disposeData(o.dataId),h},setupFunc:function(e){$U=e.wasm.cwrap(br,null,["number","array","number","array","number","number"])}};let _U;const AU={kernelName:sa,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:a}=t,{radians:s,fillValue:i,center:o}=r,u=n.makeOutput(a.shape,a.dtype),l=n.dataIdMap.get(a.dataId).id,c=n.dataIdMap.get(u.dataId).id,[d,h,p,f]=a.shape,[m,g]=jp(o,h,p),y="number"==typeof i?[i,i,i,0===i?0:255]:[...i,255],b=new Uint8Array(new Int32Array(y).buffer);return _U(l,d,h,p,f,s,m,g,b,y.length,c),u},setupFunc:function(e){_U=e.wasm.cwrap(sa,null,["number","number","number","number","number","number","number","number","array","number","number"])}},RU=bW(xr),FU=bW(wr);let DU;const MU={kernelName:vr,backendName:"wasm",setupFunc:function(e){DU=e.wasm.cwrap(vr,null,["number","number","number","number","number","number","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{indices:a,updates:s}=n,{shape:i}=r,o=t.makeOutput(i,s.dtype);if(0===de(i))return o;const{sliceRank:u,numUpdates:l,sliceSize:c,strides:d,outputSize:h}=co(0,a,i),p=t.dataIdMap.get(a.dataId).id,f=t.dataIdMap.get(s.dataId).id,m=new Uint8Array(new Int32Array(d).buffer),g=t.dataIdMap.get(o.dataId).id;return DU(p,f,fW[s.dtype],u,l,c,m,h,g),o}};let OU;const LU={kernelName:kr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:a,e:s}=t,i=n.dataIdMap.get(r.dataId).id,o=n.dataIdMap.get(a.dataId).id,u=n.dataIdMap.get(s.dataId).id,l=n.makeOutput(a.shape,a.dtype),c=n.dataIdMap.get(l.dataId).id,d=r.shape.length,h=a.shape.length,p=0===d||d>1||1===h?1:de(a.shape.slice(1));return OU(i,o,u,p,c),l},setupFunc:function(e){OU=e.wasm.cwrap("SelectV2",null,["number","number","number","number","number"])}};let zU;const PU={kernelName:"Sigmoid",backendName:"wasm",setupFunc:function(e){zU=e.wasm.cwrap($r,null,["number","number"])},kernelFunc:function(e){const{backend:t,inputs:{x:n}}=e,r=t.dataIdMap.get(n.dataId).id,a=t.makeOutput(n.shape,n.dtype),s=t.dataIdMap.get(a.dataId).id;return 0===de(a.shape)||zU(r,s),a}},BU=bW(Nr);let WU;const VU={kernelName:Dr,backendName:"wasm",setupFunc:function(e){WU=e.wasm.cwrap(Dr,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:{logits:n},attrs:{dim:r}}=e,a=t.dataIdMap.get(n.dataId).id,s=t.makeOutput(n.shape,n.dtype),i=t.dataIdMap.get(s.dataId).id,o=n.shape[r],u=de(n.shape)/o;return 0===de(s.shape)||WU(a,i,o,u),s}},UU={kernelName:Rr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,{blockShape:s,paddings:i}=r,o=de(s),u=[[0,0]];u.push(...i);for(let e=1+s.length;e<a.shape.length;++e)u.push([0,0]);const l=gU.kernelFunc({inputs:{x:a},backend:n,attrs:{paddings:u,constantValue:0}}),c=qp(l.shape,s,o,!1),d=Kp(c.length,s.length,!1),h=Xp(l.shape,s,o,!1),p=zW({inputs:{x:l},backend:n,attrs:{shape:c}}),f=CW({inputs:{x:p},backend:n,attrs:{perm:d}}),m=zW({inputs:{x:f},backend:n,attrs:{shape:h}});return n.disposeData(l.dataId),n.disposeData(p.dataId),n.disposeData(f.dataId),m}},GU={kernelName:Fr,backendName:"wasm",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{x:a}=t,{numOrSizeSplits:s,axis:i}=n,o=ve(i,a.shape)[0],u=Nf(a,s,o),l=new Array(a.shape.length).fill(0),c=a.shape.slice();return u.map(e=>{const t=[...c];t[o]=e;const n=VW({inputs:{x:a},attrs:{begin:l,size:t},backend:r});return l[o]+=e,n})}},HU=bW(_r),jU=bW(Wr),qU=wW(Br,!0);let KU;const XU={kernelName:ra,backendName:"wasm",setupFunc:function(e){KU=e.wasm.cwrap(ra,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{alpha:a}=r,{x:s}=n,i=t.dataIdMap.get(s.dataId).id,o=t.makeOutput(s.shape,s.dtype),u=t.dataIdMap.get(o.dataId).id;return KU(i,a,fW[s.dtype],u),o}};let YU;const ZU={kernelName:Vr,backendName:"wasm",setupFunc:function(e){YU=e.wasm.cwrap(Vr,null,["number","array","number","array","array","array","array","array","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{x:a}=n,{begin:s,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:d,shrinkAxisMask:h}=r,{finalShapeSparse:p,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Eo(a.shape,s,i,o,u,l,c,d,h);let v;if(m)v=zW({inputs:{x:a},backend:t,attrs:{shape:f}});else if(g||y){oe(a.shape.length>=1,()=>`Input must have rank at least 1, got: ${a.shape.length}`);const e=go(b,x,w),n=VW({inputs:{x:a},backend:t,attrs:{begin:b,size:e}});v=zW({inputs:{x:n},backend:t,attrs:{shape:f}}),t.disposeData(n.dataId)}else{const e=t.makeOutput(p,"float32"),n=t.dataIdMap.get(a.dataId).id,r=new Uint8Array(new Int32Array(Le(a.shape)).buffer),s=new Uint8Array(new Int32Array(b).buffer),i=new Uint8Array(new Int32Array(x).buffer),o=new Uint8Array(new Int32Array(w).buffer),u=new Uint8Array(new Int32Array(p).buffer),l=new Uint8Array(new Int32Array(Le(p)).buffer),c=t.dataIdMap.get(e.dataId).id;YU(n,r,a.shape.length,s,i,o,u,l,p.length,c),v=zW({inputs:{x:e},backend:t,attrs:{shape:f}}),t.disposeData(e.dataId)}return v}},JU=wW(jr,!0);let QU;const eG={kernelName:Ar,backendName:"wasm",setupFunc:function(e){QU=e.wasm.cwrap(Ar,null,["number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{axis:a,keepDims:s}=r,{x:i}=n,o=t.dataIdMap.get(i.dataId).id;let u=o,l=i;const{transposed:c,axes:d,originalAxes:h,inputWasTransposed:p}=EW(i,a,t);let f=d;if(p){const e=t.dataIdMap.get(c.dataId).id;e!==o&&(l=c,u=e,f=Bc(f.length,l.shape.length))}Lc("sum",f,l.shape.length);const[m,g]=Mc(l.shape,f),y=de(g),b=t.makeOutput(m,l.dtype);if(0!==de(l.shape)){const e=t.dataIdMap.get(b.dataId).id;QU(u,y,fW[b.dtype],e)}if(p&&t.disposeData(c.dataId),s){const e=Oc(b.shape,h);b.shape=e}return b}},tG=bW(qr),nG=bW(Kr);let rG;const aG={kernelName:Xr,backendName:"wasm",setupFunc:function(e){rG=e.wasm.cwrap(Xr,null,["number","array","number","array","number","number"])},kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:a}=t,s=n.dataIdMap.get(a.dataId).id,{reps:i}=r,o=new Array(a.shape.length);for(let e=0;e<o.length;e++)o[e]=a.shape[e]*i[e];const u=new Uint8Array(new Int32Array(a.shape).buffer),l=new Uint8Array(new Int32Array(o).buffer),c=n.makeOutput(o,a.dtype),d=n.dataIdMap.get(c.dataId).id;return rG(s,u,a.shape.length,l,o.length,fW[c.dtype],d),c}};let sG;const iG={kernelName:Yr,backendName:"wasm",setupFunc:function(e){sG=e.wasm.cwrap(Yr,null,["number","array","number","number","number","bool","number","number"])},kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{k:a,sorted:s}=n,i=t.dataIdMap.get(r.dataId).id,o=new Uint8Array(new Int32Array(r.shape).buffer),u=r.shape.slice();u[u.length-1]=a;const l=t.makeOutput(u,r.dtype),c=t.dataIdMap.get(l.dataId).id,d=t.makeOutput(u,"int32"),h=t.dataIdMap.get(d.dataId).id;return sG(i,o,r.shape.length,fW[r.dtype],a,s,c,h),[l,d]}};let oG;const uG={kernelName:Zr,backendName:"wasm",setupFunc:function(e){oG=e.wasm.cwrap(Zr,null,["number","number","bool","number","number","number","number","number","number","array","number","number","number","number","number"])},kernelFunc:function(e){const{backend:t,inputs:n,attrs:r}=e,{image:a,transforms:s}=n,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,d,h,p]=a.shape,[f,m]=null!=l?l:[d,h],g=[c,f,m,p],y=new Uint8Array(new Int32Array(Le(a.shape)).buffer),b=t.makeOutput(g,a.dtype),x=t.dataIdMap.get(b.dataId).id,w=t.dataIdMap.get(a.dataId).id,v=t.dataIdMap.get(s.dataId).id,k="nearest"===i?1:2;let I;switch(o){case"constant":default:I=1;break;case"reflect":I=2;break;case"wrap":I=3;break;case"nearest":I=4}return oG(w,v,s.shape[0]>1,c,f,m,p,h,d,y,a.shape.length-1,k,I,u,x),b}},lG={kernelName:ea,backendName:"wasm",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:a}=t;let{axis:s}=r;s<0&&(s+=a.shape.length);const i=a.shape[s],o=a.shape.length,u=new Array(o-1);let l=0;for(let e=0;e<o;e++)e!==s&&(u[l++]=a.shape[e]);const c=new Array(i),d=new Array(o).fill(0),h=a.shape.slice();h[s]=1;for(let e=0;e<c.length;e++)d[s]=e,c[e]=VW({inputs:{x:a},attrs:{begin:d,size:h},backend:n});return c.map(({dataId:e,dtype:t})=>({dataId:e,dtype:t,shape:u}))}},cG={kernelName:na,backendName:"wasm",kernelFunc:function(e){const{inputs:{x:t},backend:n}=e,r=n.makeOutput(t.shape,t.dtype);return n.typedArrayFromHeap(r).fill(0),r}},dG=[xW,vW,IW,AW,FW,MW,LW,WW,GW,jW,qW,XW,ZW,QW,tV,nV,rV,iV,uV,cV,hV,pV,fV,mV,yV,xV,vV,kV,IV,yW,NV,CV,EV,AV,FV,DV,MV,NW,LV,zV,PV,BV,WV,UV,GV,jV,KV,YV,ZV,eU,tU,nU,sU,oU,lU,cU,hU,pU,fU,gU,yU,xU,vU,kU,IU,SU,NU,PW,CU,EU,AU,FU,RU,MU,LU,PU,BU,UW,VU,UU,GU,HU,jU,qU,XU,ZU,JU,eG,tG,nG,aG,iG,uG,$W,lG,cG];for(const e of dG)fa(e);const hG=Je();hG.registerFlag("WASM_HAS_SIMD_SUPPORT",async()=>WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))),hG.registerFlag("WASM_HAS_MULTITHREAD_SUPPORT",async()=>{if(hG.get("IS_NODE"))return!1;try{return(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11]))}catch(e){return!1}});var pG=n(417),fG=n.n(pG),mG=n(805),gG=n.n(mG);class yG extends Z{constructor(e){super(),this.wasm=e,this.dataIdNextNumber=1,this.wasm.tfjs.initWithThreadsCount(NG),TG=this.wasm.tfjs.getThreadsCount(),this.dataIdMap=new Y(this,Jo())}write(e,t,n){const r={id:this.dataIdNextNumber++};return this.move(r,e,t,n,1),r}numDataIds(){return this.dataIdMap.numDataIds()}async time(e){const t=Oa();return e(),{kernelMs:Oa()-t}}move(e,t,n,r,a){const s=this.dataIdNextNumber++;if("string"===r){const i=t;return void this.dataIdMap.set(e,{id:s,stringBytes:i,shape:n,dtype:r,memoryOffset:null,refCount:a})}const i=de(n),o=i*Ee(r),u=this.wasm._malloc(o);this.dataIdMap.set(e,{id:s,memoryOffset:u,shape:n,dtype:r,refCount:a}),this.wasm.tfjs.registerTensor(s,i,u),null!=t&&this.wasm.HEAPU8.set(new Uint8Array(t.buffer,t.byteOffset,o),u)}async read(e){return this.readSync(e)}readSync(e){const{memoryOffset:t,dtype:n,shape:r,stringBytes:a}=this.dataIdMap.get(e);return"string"===n?a:function(e,t){switch(t){case"float32":return new Float32Array(e);case"int32":return new Int32Array(e);case"bool":return new Uint8Array(e);default:throw new Error(`Unknown dtype ${t}`)}}(this.wasm.HEAPU8.slice(t,t+de(r)*Ee(n)).buffer,n)}disposeData(e,t=!1){if(this.dataIdMap.has(e)){const n=this.dataIdMap.get(e);if(n.refCount--,!t&&n.refCount>0)return!1;this.wasm._free(n.memoryOffset),this.wasm.tfjs.disposeData(n.id),this.dataIdMap.delete(e)}return!0}refCount(e){return this.dataIdMap.has(e)?this.dataIdMap.get(e).refCount:0}incRef(e){const t=this.dataIdMap.get(e);null!=t&&t.refCount++}floatPrecision(){return 32}getMemoryOffset(e){return this.dataIdMap.get(e).memoryOffset}dispose(){this.wasm.tfjs.dispose(),"PThread"in this.wasm&&this.wasm.PThread.terminateAllThreads(),this.wasm=null}memory(){return{unreliable:!1}}makeOutput(e,t,n){let r;if(null==n)r=this.write(null,e,t);else{const a=this.dataIdNextNumber++;r={id:a},this.dataIdMap.set(r,{id:a,memoryOffset:n,shape:e,dtype:t,refCount:1});const s=de(e);this.wasm.tfjs.registerTensor(a,s,n)}return{dataId:r,shape:e,dtype:t}}typedArrayFromHeap({shape:e,dtype:t,dataId:n}){const r=this.wasm.HEAPU8.buffer,{memoryOffset:a}=this.dataIdMap.get(n),s=de(e);switch(t){case"float32":return new Float32Array(r,a,s);case"int32":return new Int32Array(r,a,s);case"bool":return new Uint8Array(r,a,s);default:throw new Error(`Unknown dtype ${t}`)}}}function bG(e,t,n){if(null!=wG)return wG;let r="tfjs-backend-wasm.wasm";return e&&t?r="tfjs-backend-wasm-threaded-simd.wasm":e&&(r="tfjs-backend-wasm-simd.wasm"),null!=kG&&null!=kG[r]?kG[r]:n+r}const xG=["tfjs-backend-wasm.wasm","tfjs-backend-wasm-simd.wasm","tfjs-backend-wasm-threaded-simd.wasm"];let wG=null,vG=null,kG={},IG=!1,SG=!1,NG=-1,TG=null;du("wasm",async()=>{const{wasm:e}=await async function(){const[e,t]=await Promise.all([Je().getAsync("WASM_HAS_SIMD_SUPPORT"),Je().getAsync("WASM_HAS_MULTITHREAD_SUPPORT")]);return new Promise((n,r)=>{const a={};var s;a.locateFile=(n,r)=>{if(n.endsWith(".worker.js")){const e=new Blob(['var Module={};function threadPrintErr(){var text=Array.prototype.slice.call(arguments).join(" ");console.error(text)}function threadAlert(){var text=Array.prototype.slice.call(arguments).join(" ");postMessage({cmd:"alert",text:text,threadId:Module["_pthread_self"]()})}var err=threadPrintErr;this.alert=threadAlert;Module["instantiateWasm"]=function(info,receiveInstance){var instance=new WebAssembly.Instance(Module["wasmModule"],info);Module["wasmModule"]=null;receiveInstance(instance);return instance.exports};function moduleLoaded(){}this.onmessage=function(e){try{if(e.data.cmd==="load"){Module["wasmModule"]=e.data.wasmModule;Module["wasmMemory"]=e.data.wasmMemory;Module["buffer"]=Module["wasmMemory"].buffer;Module["ENVIRONMENT_IS_PTHREAD"]=true;if(typeof e.data.urlOrBlob==="string"){importScripts(e.data.urlOrBlob)}else{var objectUrl=URL.createObjectURL(e.data.urlOrBlob);importScripts(objectUrl);URL.revokeObjectURL(objectUrl)}WasmBackendModuleThreadedSimd(Module).then(function(instance){Module=instance;moduleLoaded()})}else if(e.data.cmd==="objectTransfer"){Module["PThread"].receiveObjectTransfer(e.data)}else if(e.data.cmd==="run"){Module["__performance_now_clock_drift"]=performance.now()-e.data.time;Module["__emscripten_thread_init"](e.data.threadInfoStruct,0,0);var max=e.data.stackBase;var top=e.data.stackBase+e.data.stackSize;Module["establishStackSpace"](top,max);Module["_emscripten_tls_init"]();Module["PThread"].receiveObjectTransfer(e.data);Module["PThread"].setThreadStatus(Module["_pthread_self"](),1);try{var result=Module["invokeEntryPoint"](e.data.start_routine,e.data.arg);if(!Module["getNoExitRuntime"]())Module["PThread"].threadExit(result)}catch(ex){if(ex==="Canceled!"){Module["PThread"].threadCancel()}else if(ex!="unwind"){if(ex instanceof Module["ExitStatus"]){if(Module["getNoExitRuntime"]()){}else{Module["PThread"].threadExit(ex.status)}}else{Module["PThread"].threadExit(-2);throw ex}}}}else if(e.data.cmd==="cancel"){if(Module["_pthread_self"]()){Module["PThread"].threadCancel()}}else if(e.data.target==="setimmediate"){}else if(e.data.cmd==="processThreadQueue"){if(Module["_pthread_self"]()){Module["_emscripten_current_thread_process_queued_calls"]()}}else{err("worker.js received unknown command "+e.data.cmd);err(e.data)}}catch(ex){err("worker.js onmessage() captured an uncaught exception: "+ex);if(ex&&ex.stack)err(ex.stack);throw ex}};if(typeof process==="object"&&typeof process.versions==="object"&&typeof process.versions.node==="string"){self={location:{href:__filename}};var onmessage=this.onmessage;var nodeWorkerThreads=require("worker_threads");global.Worker=nodeWorkerThreads.Worker;var parentPort=nodeWorkerThreads.parentPort;parentPort.on("message",function(data){onmessage({data:data})});var nodeFS=require("fs");var nodeRead=function(filename){return nodeFS.readFileSync(filename,"utf8")};function globalEval(x){global.require=require;global.Module=Module;eval.call(null,x)}importScripts=function(f){globalEval(nodeRead(f))};postMessage=function(msg){parentPort.postMessage(msg)};if(typeof performance==="undefined"){performance={now:function(){return Date.now()}}}}'],{type:"application/javascript"});return URL.createObjectURL(e)}return n.endsWith(".wasm")?bG(e,t,null!=vG?vG:r):r+n},SG&&(a.instantiateWasm=(s=bG(e,t,null!=vG?vG:""),(e,t)=>(La(s,{credentials:"same-origin"}).then(n=>{n.ok||e.env.a(`failed to load wasm binary file at '${s}'`),n.arrayBuffer().then(n=>{WebAssembly.instantiate(n,e).then(e=>{t(e.instance,e.module)})})}),{})));let i,o=!1;a.onAbort=()=>{o||IG||(IG=!0,r({message:"Make sure the server can serve the `.wasm` file relative to the bundled js file. For more details see https://github.com/tensorflow/tfjs/blob/master/tfjs-backend-wasm/README.md#using-bundlers"}))},t&&e&&null==wG?(a.mainScriptUrlOrBlob=new Blob(["var WasmBackendModuleThreadedSimd = "+fG().toString()],{type:"text/javascript"}),i=fG()(a)):i=gG()(a),i.then(e=>{o=!0,IG=!1,e.tfjs={init:e.cwrap("init",null,[]),initWithThreadsCount:e.cwrap("init_with_threads_count",null,["number"]),getThreadsCount:e.cwrap("get_threads_count","number",[]),registerTensor:e.cwrap("register_tensor",null,["number","number","number"]),disposeData:e.cwrap("dispose_data",null,["number"]),dispose:e.cwrap("dispose",null,[])},n({wasm:e})})})}();return new yG(e)},2);let CG=null,$G=!1;const EG=async()=>G,_G=async()=>(CG||(CG=await function(e){var t=void 0===e?{}:e,n=t.maxFaces,r=void 0===n?10:n,a=t.inputWidth,s=void 0===a?128:a,i=t.inputHeight,o=void 0===i?128:i,u=t.iouThreshold,l=void 0===u?.3:u,c=t.scoreThreshold,d=void 0===c?.75:c,h=t.modelUrl;return Ym(this,void 0,void 0,function(){var e;return Zm(this,function(t){switch(t.label){case 0:return null==h?[3,2]:[4,Km(h)];case 1:return e=t.sent(),[3,4];case 2:return[4,Km("https://tfhub.dev/tensorflow/tfjs-model/blazeface/1/default/1",{fromTFHub:!0})];case 3:e=t.sent(),t.label=4;case 4:return[2,new ng(e,s,o,r,l,d)]}})})}({iouThreshold:.75,scoreThreshold:.95,modelUrl:`${H.STATIC_ASSETS_BASE_URL}wasm-store/blazeface/model.json`})),CG);let AG,RG;const FG=`${H.STATIC_ASSETS_BASE_URL}wasm-store/tf/`;let DG,MG,OG,LG,zG,PG,BG,WG,VG,UG,GG=null,HG=!0;const jG=async e=>{performance.now();const t=await EG();t.engine().startScope();try{const n=t.browser.fromPixels(e),r=await(async e=>{const t=await _G(),n=await t.estimateFaces(e,!1,!1,!1);if(!n||0===n.length)return null;const r=e=>(e.bottomRight[0]-e.topLeft[0])*(e.bottomRight[1]-e.topLeft[1]);return n.reduce((e,t)=>r(t)>r(e)?t:e,n[0])})(n);if(!r)return{faceFound:!1,far:!1,close:!1,noSufficientLite:!1,misAligned:!1,outsideGuide:!1};if(!((e,t,n)=>{const r=parseInt(e.topLeft[0]),a=parseInt(e.topLeft[1]),s=parseInt(e.bottomRight[0]),i=parseInt(e.bottomRight[1]);return!(r<=0||s>=t||a<=0||i>=n)})(r,BG,PG))return{faceFound:!1,far:!1,close:!1,noSufficientLite:!1,misAligned:!1,outsideGuide:!1};const a=await(async(e,t)=>{RG||await ZG();const n=parseInt(t.topLeft[0]),r=parseInt(t.topLeft[1]),a=parseInt(t.bottomRight[0]),s=parseInt(t.bottomRight[1]),i=await EG(),o=await i.tidy(()=>{const t=i.div(e,255).slice([r,n],[s-r,a-n]),o=i.image.resizeBilinear(t,[112,112]).expandDims(0);let u=RG.predict(o).squeeze(0).reshape([106,2]),[l,c]=i.split(u,2,1);return l=i.add(i.mul(l,t.shape[1]),n).asType("float32"),c=i.add(i.mul(c,t.shape[0]),r).asType("float32"),new Float32Array(i.concat([l,c],1).reshape([106,2]).dataSync().buffer)}),u=AG._malloc(o.length*o.BYTES_PER_ELEMENT);AG.HEAPF32.set(o,u>>2);const l=new Float32Array(AG.glCalculateExtraFacePoints(u));return AG._free(u),l})(n,r),s=await((e,t,n,r,a)=>{if(!AG)throw new Error("WASM module not initialized");const s=AG._malloc(e.length),i=AG._malloc(t.length*t.BYTES_PER_ELEMENT);try{AG.HEAPU8.set(e,s),AG.HEAPF32.set(t,i>>2);const o=AG.verify_image(s,n,r,i,a.tx,a.ty,a.bx,a.by,X.Fr,!1);return{faceFound:!0,far:o.too_far,close:o.too_close,noSufficientLite:o.light,misAligned:!0===o.orientation,outsideGuide:o.outsideGuide}}catch(e){throw console.error("Error in validateWithWasm:",e),e}finally{AG&&(s&&AG._free(s),i&&AG._free(i))}})(e.data,a,BG,PG,zG);return performance.now(),s}finally{t.engine().endScope()}},qG=async()=>{if(HG)return;VG.drawImage(WG,0,0),OG.drawImage(WG,UG.x,UG.y,UG.width,UG.height,0,0,BG,PG);const e=await jG(OG.getImageData(0,0,BG,PG));HG||(LG(e),requestAnimationFrame(qG))},KG=function(){return MG||(MG=new Promise((e,t)=>{YG().then(()=>async function(){await XG()}()).then(()=>{e()}).catch(()=>{MG=null,t()})}),MG)};let XG=async()=>{RG||await Promise.all([ZG()]).then(([e])=>(RG=e,Promise.resolve()))};const YG=async function(){return new Promise(async(e,t)=>{try{const t=await EG();return await _G(),await(async e=>{$G||(function(e,t=!1){if(IG)throw new Error("The WASM backend was already initialized. Make sure you call `setWasmPaths()` before you call `tf.setBackend()` or `tf.ready()`");if("string"==typeof e)vG=e;else{kG=e;const t=xG.filter(e=>null==kG[e]);if(t.length>0)throw new Error(`There were no entries found for the following binaries: ${t.join(",")}. Please either call setWasmPaths with a map providing a path for each binary, or with a string indicating the directory where all the binaries can be found.`)}SG=t}({"tfjs-backend-wasm.wasm":`${e}tfjs-backend-wasm.wasm`,"tfjs-backend-wasm-simd.wasm":`${e}tfjs-backend-wasm-simd.wasm`,"tfjs-backend-wasm-threaded-simd.wasm":`${e}tfjs-backend-wasm-threaded-simd.wasm`}),$G=!0)})(FG),await t.setBackend("wasm"),await t.ready(),AG={onRuntimeInitialized:()=>e(),onStatus:e=>{},onExit:()=>{},locateFile:e=>H.ASSETS_BASE_URL+e},t.enableProdMode(),K()(AG)}catch(e){console.error("Error initializing WASM:",e),t(e)}})},ZG=async()=>{if(RG)return RG;try{const e=await EG(),t=`${H.STATIC_ASSETS_BASE_URL}wasm-store/landmarks/112/`,n=`${t}landmarks-model.json`,r=`${t}landmark-weights.bin`,[a,s]=await Promise.all([fetch(n),fetch(r)]);if(!a.ok)throw new Error(`Failed to load model schema: ${a.statusText}`);if(!s.ok)throw new Error(`Failed to load model weights: ${s.statusText}`);const[i,o]=await Promise.all([a.json(),s.arrayBuffer()]),u=e.io.fromMemory({modelTopology:i.modelTopology,weightSpecs:i.weightsManifest,weightData:o,userDefinedMetadata:i.userDefinedMetaData||{}});return RG=await e.loadGraphModel(u),RG}catch(e){throw console.error("Error loading landmark model:",e),RG=null,e}},JG=()=>{HG=!0};class QG{static CONTAINER_MISSING={code:1,message:"Container is missing."};static SDK_NOT_INITIALIZED={code:2,message:"SDK not initialized."};static IMAGE_NOT_PROVIDED={code:3,message:"Image not provided."};static API_ERROR={code:4,message:"API error."};static CAMERA_NOT_FOUND={code:5,message:"Camera not found."};static APP_INIT_ISSUE={code:6,message:"App initialization issue."};static REQUEST_CANCELLED={code:7,message:"Request cancelled."};static IMAGE_FILE_MISSING={code:8,message:"Image file is missing."};static NO_FACE_DETECTED={code:9,message:"No face detected in the image."};static IMAGE_PROCESSING_FAILED={code:10,message:"Failed to process the image."}}const eH={context:void 0,registry:void 0,effects:void 0,done:!1,getContextId(){return tH(this.context.count)},getNextContextId(){return tH(this.context.count++)}};function tH(e){const t=String(e),n=t.length-1;return eH.context.id+(n?String.fromCharCode(96+n):"")+t}const nH=(Symbol("solid-proxy"),Symbol("solid-track"),Symbol("solid-dev-component"),{equals:(e,t)=>e===t});let rH=EH;const aH=1,sH=2,iH={owned:null,cleanups:null,context:null,owner:null};var oH=null;let uH=null,lH=null,cH=null,dH=null,hH=null,pH=null,fH=0;function mH(e,t){const n={value:e,observers:null,observerSlots:null,comparator:(t=t?Object.assign({},nH,t):nH).equals||void 0};return[kH.bind(n),e=>("function"==typeof e&&(e=uH&&uH.running&&uH.sources.has(n)?e(n.tValue):e(n.value)),IH(n,e))]}function gH(e,t,n){const r=TH(e,t,!1,aH);lH&&uH&&uH.running?hH.push(r):SH(r)}function yH(e,t,n){n=n?Object.assign({},nH,n):nH;const r=TH(e,t,!0,0);return r.observers=null,r.observerSlots=null,r.comparator=n.equals||void 0,lH&&uH&&uH.running?(r.tState=aH,hH.push(r)):SH(r),kH.bind(r)}function bH(e){if(!cH&&null===dH)return e();const t=dH;dH=null;try{return cH?cH.untrack(e):e()}finally{dH=t}}const[xH,wH]=mH(!1);let vH;function kH(){const e=uH&&uH.running;if(this.sources&&(e?this.tState:this.state))if((e?this.tState:this.state)===aH)SH(this);else{const e=hH;hH=null,$H(()=>_H(this),!1),hH=e}if(dH){const e=this.observers?this.observers.length:0;dH.sources?(dH.sources.push(this),dH.sourceSlots.push(e)):(dH.sources=[this],dH.sourceSlots=[e]),this.observers?(this.observers.push(dH),this.observerSlots.push(dH.sources.length-1)):(this.observers=[dH],this.observerSlots=[dH.sources.length-1])}return e&&uH.sources.has(this)?this.tValue:this.value}function IH(e,t,n){let r=uH&&uH.running&&uH.sources.has(e)?e.tValue:e.value;if(!e.comparator||!e.comparator(r,t)){if(uH){const r=uH.running;(r||!n&&uH.sources.has(e))&&(uH.sources.add(e),e.tValue=t),r||(e.value=t)}else e.value=t;e.observers&&e.observers.length&&$H(()=>{for(let t=0;t<e.observers.length;t+=1){const n=e.observers[t],r=uH&&uH.running;r&&uH.disposed.has(n)||((r?n.tState:n.state)||(n.pure?hH.push(n):pH.push(n),n.observers&&AH(n)),r?n.tState=aH:n.state=aH)}if(hH.length>1e6)throw hH=[],new Error},!1)}return t}function SH(e){if(!e.fn)return;RH(e);const t=fH;NH(e,uH&&uH.running&&uH.sources.has(e)?e.tValue:e.value,t),uH&&!uH.running&&uH.sources.has(e)&&queueMicrotask(()=>{$H(()=>{uH&&(uH.running=!0),dH=oH=e,NH(e,e.tValue,t),dH=oH=null},!1)})}function NH(e,t,n){let r;const a=oH,s=dH;dH=oH=e;try{r=e.fn(t)}catch(t){return e.pure&&(uH&&uH.running?(e.tState=aH,e.tOwned&&e.tOwned.forEach(RH),e.tOwned=void 0):(e.state=aH,e.owned&&e.owned.forEach(RH),e.owned=null)),e.updatedAt=n+1,DH(t)}finally{dH=s,oH=a}(!e.updatedAt||e.updatedAt<=n)&&(null!=e.updatedAt&&"observers"in e?IH(e,r,!0):uH&&uH.running&&e.pure?(uH.sources.add(e),e.tValue=r):e.value=r,e.updatedAt=n)}function TH(e,t,n,r=aH,a){const s={fn:e,state:r,updatedAt:null,owned:null,sources:null,sourceSlots:null,cleanups:null,value:t,owner:oH,context:oH?oH.context:null,pure:n};if(uH&&uH.running&&(s.state=0,s.tState=r),null===oH||oH!==iH&&(uH&&uH.running&&oH.pure?oH.tOwned?oH.tOwned.push(s):oH.tOwned=[s]:oH.owned?oH.owned.push(s):oH.owned=[s]),cH&&s.fn){const[e,t]=mH(void 0,{equals:!1}),n=cH.factory(s.fn,t);!function(e){null===oH||(null===oH.cleanups?oH.cleanups=[e]:oH.cleanups.push(e))}(()=>n.dispose());const r=()=>function(e){if(uH&&uH.running)return e(),uH.done;const t=dH,n=oH;return Promise.resolve().then(()=>{let r;return dH=t,oH=n,(lH||vH)&&(r=uH||(uH={sources:new Set,effects:[],promises:new Set,disposed:new Set,queue:new Set,running:!0}),r.done||(r.done=new Promise(e=>r.resolve=e)),r.running=!0),$H(e,!1),dH=oH=null,r?r.done:void 0})}(t).then(()=>a.dispose()),a=cH.factory(s.fn,r);s.fn=t=>(e(),uH&&uH.running?a.track(t):n.track(t))}return s}function CH(e){const t=uH&&uH.running;if(0===(t?e.tState:e.state))return;if((t?e.tState:e.state)===sH)return _H(e);if(e.suspense&&bH(e.suspense.inFallback))return e.suspense.effects.push(e);const n=[e];for(;(e=e.owner)&&(!e.updatedAt||e.updatedAt<fH);){if(t&&uH.disposed.has(e))return;(t?e.tState:e.state)&&n.push(e)}for(let r=n.length-1;r>=0;r--){if(e=n[r],t){let t=e,a=n[r+1];for(;(t=t.owner)&&t!==a;)if(uH.disposed.has(t))return}if((t?e.tState:e.state)===aH)SH(e);else if((t?e.tState:e.state)===sH){const t=hH;hH=null,$H(()=>_H(e,n[0]),!1),hH=t}}}function $H(e,t){if(hH)return e();let n=!1;t||(hH=[]),pH?n=!0:pH=[],fH++;try{const t=e();return function(e){if(hH&&(lH&&uH&&uH.running?function(e){for(let t=0;t<e.length;t++){const n=e[t],r=uH.queue;r.has(n)||(r.add(n),lH(()=>{r.delete(n),$H(()=>{uH.running=!0,CH(n)},!1),uH&&(uH.running=!1)}))}}(hH):EH(hH),hH=null),e)return;let t;if(uH)if(uH.promises.size||uH.queue.size){if(uH.running)return uH.running=!1,uH.effects.push.apply(uH.effects,pH),pH=null,void wH(!0)}else{const e=uH.sources,n=uH.disposed;pH.push.apply(pH,uH.effects),t=uH.resolve;for(const e of pH)"tState"in e&&(e.state=e.tState),delete e.tState;uH=null,$H(()=>{for(const e of n)RH(e);for(const t of e){if(t.value=t.tValue,t.owned)for(let e=0,n=t.owned.length;e<n;e++)RH(t.owned[e]);t.tOwned&&(t.owned=t.tOwned),delete t.tValue,delete t.tOwned,t.tState=0}wH(!1)},!1)}const n=pH;pH=null,n.length&&$H(()=>rH(n),!1),t&&t()}(n),t}catch(e){n||(pH=null),hH=null,DH(e)}}function EH(e){for(let t=0;t<e.length;t++)CH(e[t])}function _H(e,t){const n=uH&&uH.running;n?e.tState=0:e.state=0;for(let r=0;r<e.sources.length;r+=1){const a=e.sources[r];if(a.sources){const e=n?a.tState:a.state;e===aH?a!==t&&(!a.updatedAt||a.updatedAt<fH)&&CH(a):e===sH&&_H(a,t)}}}function AH(e){const t=uH&&uH.running;for(let n=0;n<e.observers.length;n+=1){const r=e.observers[n];(t?r.tState:r.state)||(t?r.tState=sH:r.state=sH,r.pure?hH.push(r):pH.push(r),r.observers&&AH(r))}}function RH(e){let t;if(e.sources)for(;e.sources.length;){const t=e.sources.pop(),n=e.sourceSlots.pop(),r=t.observers;if(r&&r.length){const e=r.pop(),a=t.observerSlots.pop();n<r.length&&(e.sourceSlots[a]=n,r[n]=e,t.observerSlots[n]=a)}}if(e.tOwned){for(t=e.tOwned.length-1;t>=0;t--)RH(e.tOwned[t]);delete e.tOwned}if(uH&&uH.running&&e.pure)FH(e,!0);else if(e.owned){for(t=e.owned.length-1;t>=0;t--)RH(e.owned[t]);e.owned=null}if(e.cleanups){for(t=e.cleanups.length-1;t>=0;t--)e.cleanups[t]();e.cleanups=null}uH&&uH.running?e.tState=0:e.state=0}function FH(e,t){if(t||(e.tState=0,uH.disposed.add(e)),e.owned)for(let t=0;t<e.owned.length;t++)FH(e.owned[t])}function DH(e,t=oH){const n=function(e){return e instanceof Error?e:new Error("string"==typeof e?e:"Unknown error",{cause:e})}(e);throw n}Symbol("fallback");function MH(e){const t=e.keyed,n=yH(()=>e.when,void 0,void 0),r=t?n:yH(n,void 0,{equals:(e,t)=>!e==!t});return yH(()=>{const a=r();if(a){const s=e.children;return"function"==typeof s&&s.length>0?bH(()=>s(t?a:()=>{if(!bH(r))throw`Stale read from <${"Show"}>.`;return n()})):s}return e.fallback},void 0,void 0)}Object.create(null),Object.create(null);const OH="_$DX_DELEGATE";function LH(e,t,n,r={}){let a;return function(e,t){const n=dH,r=oH,a=0===e.length,s=void 0===t?r:t,i=a?iH:{owned:null,cleanups:null,context:s?s.context:null,owner:s},o=a?e:()=>e(()=>bH(()=>RH(i)));oH=i,dH=null;try{return $H(o,!0)}finally{dH=n,oH=r}}(r=>{a=r,t===document?e():VH(t,e(),t.firstChild?null:void 0,n)},r.owner),()=>{a(),t.textContent=""}}function zH(e,t,n,r){let a;const s=()=>{const t=r?document.createElementNS("http://www.w3.org/1998/Math/MathML","template"):document.createElement("template");return t.innerHTML=e,n?t.content.firstChild.firstChild:r?t.firstChild:t.content.firstChild},i=t?()=>bH(()=>document.importNode(a||(a=s()),!0)):()=>(a||(a=s())).cloneNode(!0);return i.cloneNode=i,i}function PH(e,t){UH(e)||(null==t?e.removeAttribute("class"):e.className=t)}function BH(e,t,n,r){if(r)Array.isArray(n)?(e[`$$${t}`]=n[0],e[`$$${t}Data`]=n[1]):e[`$$${t}`]=n;else if(Array.isArray(n)){const r=n[0];e.addEventListener(t,n[0]=t=>r.call(e,n[1],t))}else e.addEventListener(t,n,"function"!=typeof n&&n)}function WH(e,t,n){return bH(()=>e(t,n))}function VH(e,t,n,r){if(void 0===n||r||(r=[]),"function"!=typeof t)return HH(e,t,r,n);gH(r=>HH(e,t(),r,n),r)}function UH(e){return!!eH.context&&!eH.done&&(!e||e.isConnected)}function GH(e){if(eH.registry&&eH.events&&eH.events.find(([t,n])=>n===e))return;let t=e.target;const n=`$$${e.type}`,r=e.target,a=e.currentTarget,s=t=>Object.defineProperty(e,"target",{configurable:!0,value:t}),i=()=>{const r=t[n];if(r&&!t.disabled){const a=t[`${n}Data`];if(void 0!==a?r.call(t,a,e):r.call(t,e),e.cancelBubble)return}return t.host&&"string"!=typeof t.host&&!t.host._$host&&t.contains(e.target)&&s(t.host),!0},o=()=>{for(;i()&&(t=t._$host||t.parentNode||t.host););};if(Object.defineProperty(e,"currentTarget",{configurable:!0,get:()=>t||document}),eH.registry&&!eH.done&&(eH.done=_$HY.done=!0),e.composedPath){const n=e.composedPath();s(n[0]);for(let e=0;e<n.length-2&&(t=n[e],i());e++){if(t._$host){t=t._$host,o();break}if(t.parentNode===a)break}}else o();s(r)}function HH(e,t,n,r,a){const s=UH(e);if(s){!n&&(n=[...e.childNodes]);let t=[];for(let e=0;e<n.length;e++){const r=n[e];8===r.nodeType&&"!$"===r.data.slice(0,2)?r.remove():t.push(r)}n=t}for(;"function"==typeof n;)n=n();if(t===n)return n;const i=typeof t,o=void 0!==r;if(e=o&&n[0]&&n[0].parentNode||e,"string"===i||"number"===i){if(s)return n;if("number"===i&&(t=t.toString())===n)return n;if(o){let a=n[0];a&&3===a.nodeType?a.data!==t&&(a.data=t):a=document.createTextNode(t),n=KH(e,n,r,a)}else n=""!==n&&"string"==typeof n?e.firstChild.data=t:e.textContent=t}else if(null==t||"boolean"===i){if(s)return n;n=KH(e,n,r)}else{if("function"===i)return gH(()=>{let a=t();for(;"function"==typeof a;)a=a();n=HH(e,a,n,r)}),()=>n;if(Array.isArray(t)){const i=[],u=n&&Array.isArray(n);if(jH(i,t,n,a))return gH(()=>n=HH(e,i,n,r,!0)),()=>n;if(s){if(!i.length)return n;if(void 0===r)return n=[...e.childNodes];let t=i[0];if(t.parentNode!==e)return n;const a=[t];for(;(t=t.nextSibling)!==r;)a.push(t);return n=a}if(0===i.length){if(n=KH(e,n,r),o)return n}else u?0===n.length?qH(e,i,r):function(e,t,n){let r=n.length,a=t.length,s=r,i=0,o=0,u=t[a-1].nextSibling,l=null;for(;i<a||o<s;)if(t[i]!==n[o]){for(;t[a-1]===n[s-1];)a--,s--;if(a===i){const t=s<r?o?n[o-1].nextSibling:n[s-o]:u;for(;o<s;)e.insertBefore(n[o++],t)}else if(s===o)for(;i<a;)l&&l.has(t[i])||t[i].remove(),i++;else if(t[i]===n[s-1]&&n[o]===t[a-1]){const r=t[--a].nextSibling;e.insertBefore(n[o++],t[i++].nextSibling),e.insertBefore(n[--s],r),t[a]=n[s]}else{if(!l){l=new Map;let e=o;for(;e<s;)l.set(n[e],e++)}const r=l.get(t[i]);if(null!=r)if(o<r&&r<s){let u,c=i,d=1;for(;++c<a&&c<s&&null!=(u=l.get(t[c]))&&u===r+d;)d++;if(d>r-o){const a=t[i];for(;o<r;)e.insertBefore(n[o++],a)}else e.replaceChild(n[o++],t[i++])}else i++;else t[i++].remove()}}else i++,o++}(e,n,i):(n&&KH(e),qH(e,i));n=i}else if(t.nodeType){if(s&&t.parentNode)return n=o?[t]:t;if(Array.isArray(n)){if(o)return n=KH(e,n,r,t);KH(e,n,null,t)}else null!=n&&""!==n&&e.firstChild?e.replaceChild(t,e.firstChild):e.appendChild(t);n=t}}return n}function jH(e,t,n,r){let a=!1;for(let s=0,i=t.length;s<i;s++){let i,o=t[s],u=n&&n[e.length];if(null==o||!0===o||!1===o);else if("object"==(i=typeof o)&&o.nodeType)e.push(o);else if(Array.isArray(o))a=jH(e,o,u)||a;else if("function"===i)if(r){for(;"function"==typeof o;)o=o();a=jH(e,Array.isArray(o)?o:[o],Array.isArray(u)?u:[u])||a}else e.push(o),a=!0;else{const t=String(o);u&&3===u.nodeType&&u.data===t?e.push(u):e.push(document.createTextNode(t))}}return a}function qH(e,t,n=null){for(let r=0,a=t.length;r<a;r++)e.insertBefore(t[r],n)}function KH(e,t,n,r){if(void 0===n)return e.textContent="";const a=r||document.createTextNode("");if(t.length){let r=!1;for(let s=t.length-1;s>=0;s--){const i=t[s];if(a!==i){const t=i.parentNode===e;r||s?t&&i.remove():t?e.replaceChild(a,i):e.insertBefore(a,n)}else r=!0}}else e.insertBefore(a,n);return[a]}Symbol();class XH{static getMaxCenteredRectangle(e,t,n,r,a){let s=n,i=s/a;return i>r&&(i=r,s=i*a),s>e&&(s=e,i=s/a),i>t&&(i=t,s=i*a),{width:s,height:i,x:(e-s)/2,y:(t-i)/2}}}const YH=class{#e;#t;constructor(e=10){this.#e=e,this.#t=0}setStatus(e){e?this.#t<this.#e&&this.#t++:this.#t>0&&this.#t--}getCount(){return this.#t}getWindowSize(){return this.#e}};function ZH(e){return ZH="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},ZH(e)}var JH,QH=zH('<div class="osc-abs-center osc-counter"id=autoCapturePendingInterval>'),ej=zH("<div><div id=smart-capture-sdk><video class=osc-video autoplay=true id=selfieVideo muted playsinline></video><canvas class=osc-canvas id=previewCanvas></canvas><canvas class=osc-canvas id=validationCanvas style=display:none;></canvas><img class=osc-loader><div><div class=osc-error-messages id=errorMessages><div></div><div></div><div></div><div></div><div></div></div></div><div class=osc-indicators><label></label><label></label><label></label></div><div class=osc-guidelines><div></div><div></div></div><div class=osc-actions><button class=osc-button type=button></button><button class=osc-button type=button>");function tj(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,s,i,o=[],u=!0,l=!1;try{if(s=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;u=!1}else for(;!(u=(r=s.call(n)).done)&&(o.push(r.value),o.length!==t);u=!0);}catch(e){l=!0,a=e}finally{try{if(!u&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(l)throw a}}return o}}(e,t)||function(e,t){if(e){if("string"==typeof e)return nj(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?nj(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function nj(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function rj(){var e,t,n="function"==typeof Symbol?Symbol:{},r=n.iterator||"@@iterator",a=n.toStringTag||"@@toStringTag";function s(n,r,a,s){var u=r&&r.prototype instanceof o?r:o,l=Object.create(u.prototype);return aj(l,"_invoke",function(n,r,a){var s,o,u,l=0,c=a||[],d=!1,h={p:0,n:0,v:e,a:p,f:p.bind(e,4),d:function(t,n){return s=t,o=0,u=e,h.n=n,i}};function p(n,r){for(o=n,u=r,t=0;!d&&l&&!a&&t<c.length;t++){var a,s=c[t],p=h.p,f=s[2];n>3?(a=f===r)&&(u=s[(o=s[4])?5:(o=3,3)],s[4]=s[5]=e):s[0]<=p&&((a=n<2&&p<s[1])?(o=0,h.v=r,h.n=s[1]):p<f&&(a=n<3||s[0]>r||r>f)&&(s[4]=n,s[5]=r,h.n=f,o=0))}if(a||n>1)return i;throw d=!0,r}return function(a,c,f){if(l>1)throw TypeError("Generator is already running");for(d&&1===c&&p(c,f),o=c,u=f;(t=o<2?e:u)||!d;){s||(o?o<3?(o>1&&(h.n=-1),p(o,u)):h.n=u:h.v=u);try{if(l=2,s){if(o||(a="next"),t=s[a]){if(!(t=t.call(s,u)))throw TypeError("iterator result is not an object");if(!t.done)return t;u=t.value,o<2&&(o=0)}else 1===o&&(t=s.return)&&t.call(s),o<2&&(u=TypeError("The iterator does not provide a '"+a+"' method"),o=1);s=e}else if((t=(d=h.n<0)?u:n.call(r,h))!==i)break}catch(t){s=e,o=1,u=t}finally{l=1}}return{value:t,done:d}}}(n,a,s),!0),l}var i={};function o(){}function u(){}function l(){}t=Object.getPrototypeOf;var c=[][r]?t(t([][r]())):(aj(t={},r,function(){return this}),t),d=l.prototype=o.prototype=Object.create(c);function h(e){return Object.setPrototypeOf?Object.setPrototypeOf(e,l):(e.__proto__=l,aj(e,a,"GeneratorFunction")),e.prototype=Object.create(d),e}return u.prototype=l,aj(d,"constructor",l),aj(l,"constructor",u),u.displayName="GeneratorFunction",aj(l,a,"GeneratorFunction"),aj(d),aj(d,a,"Generator"),aj(d,r,function(){return this}),aj(d,"toString",function(){return"[object Generator]"}),(rj=function(){return{w:s,m:h}})()}function aj(e,t,n,r){var a=Object.defineProperty;try{a({},"",{})}catch(e){a=0}aj=function(e,t,n,r){if(t)a?a(e,t,{value:n,enumerable:!r,configurable:!r,writable:!r}):e[t]=n;else{var s=function(t,n){aj(e,t,function(e){return this._invoke(t,n,e)})};s("next",0),s("throw",1),s("return",2)}},aj(e,t,n,r)}function sj(e,t,n,r,a,s,i){try{var o=e[s](i),u=o.value}catch(e){return void n(e)}o.done?t(u):Promise.resolve(u).then(r,a)}function ij(e){return function(){var t=this,n=arguments;return new Promise(function(r,a){var s=e.apply(t,n);function i(e){sj(s,r,a,i,o,"next",e)}function o(e){sj(s,r,a,i,o,"throw",e)}i(void 0)})}}function oj(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,lj(r.key),r)}}function uj(e,t,n){return(t=lj(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function lj(e){var t=function(e){if("object"!=ZH(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=ZH(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==ZH(t)?t:t+""}function cj(e,t,n){if("function"==typeof e?e===t:e.has(t))return arguments.length<3?t:n;throw new TypeError("Private element is not present on this object")}var dj=function(){function e(){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e)}return t=e,n=[{key:"renderSmartCaptureUI",value:(r=ij(rj().m(function t(n){var r;return rj().w(function(t){for(;;)switch(t.n){case 0:if(!pj._){t.n=1;break}return t.a(2);case 1:return hj.call(e),t.p=2,t.n=3,navigator.mediaDevices.getUserMedia(fj._);case 3:r=t.v,mj._=r,pj._=LH(function(){return rq._.call(e)},n),uq._.call(e),t.n=6;break;case 4:return t.p=4,t.v,lq._.notification(QG.CAMERA_NOT_FOUND),t.n=5,Promise.reject(QG.CAMERA_NOT_FOUND);case 5:return t.a(2,t.v);case 6:return t.a(2)}},t,null,[[2,4]])})),function(e){return r.apply(this,arguments)})}],n&&oj(t,n),Object.defineProperty(t,"prototype",{writable:!1}),t;var t,n,r}();function hj(){Zj._.call(JH,3),Uj._.call(JH,!1),Wj._.call(JH,!1),Pj._.call(JH,!1),Hj._.call(JH,!0),qj._.call(JH,!0),Ej._.call(JH,!1),Lj._.call(JH,!1),Aj._.call(JH,!1),Fj._.call(JH,!1),tq._.call(JH,0),Mj._.call(JH,!1),Xj._.call(JH,!1),Qj._.call(JH,!1),JH.capturedPic=null}JH=dj;var pj={_:void 0},fj={_:{audio:!1,video:{facingMode:"user",width:{min:1280},height:{min:720}}}},mj={_:void 0},gj={_:void 0},yj={_:0},bj={_:0},xj={_:0},wj={_:0},vj={_:void 0},kj={_:null},Ij={_:void 0},Sj={_:void 0},Nj={_:null},Tj={_:!1},Cj={_:0},$j={_:void 0},Ej={_:void 0},_j={_:void 0},Aj={_:void 0},Rj={_:void 0},Fj={_:void 0},Dj={_:void 0},Mj={_:void 0},Oj={_:void 0},Lj={_:void 0},zj={_:void 0},Pj={_:void 0},Bj={_:void 0},Wj={_:void 0},Vj={_:void 0},Uj={_:void 0},Gj={_:void 0},Hj={_:void 0},jj={_:void 0},qj={_:void 0},Kj={_:void 0},Xj={_:void 0},Yj={_:void 0},Zj={_:void 0},Jj={_:void 0},Qj={_:void 0},eq={_:void 0},tq={_:void 0};uj(dj,"capturedPic",null),function(){var e=tj(mH(!0),2);$j._=e[0],Ej._=e[1];var t=tj(mH(!0),2);_j._=t[0],Aj._=t[1];var n=tj(mH(!0),2);Rj._=n[0],Fj._=n[1];var r=tj(mH(!1),2);Dj._=r[0],Mj._=r[1];var a=tj(mH(!1),2);Oj._=a[0],Lj._=a[1];var s=tj(mH(!1),2);zj._=s[0],Pj._=s[1];var i=tj(mH(!1),2);Bj._=i[0],Wj._=i[1];var o=tj(mH(!1),2);Vj._=o[0],Uj._=o[1];var u=tj(mH(!0),2);Gj._=u[0],Hj._=u[1];var l=tj(mH(!1),2);jj._=l[0],qj._=l[1];var c=tj(mH(!1),2);Kj._=c[0],Xj._=c[1];var d=tj(mH(3),2);Yj._=d[0],Zj._=d[1];var h=tj(mH(0),2);eq._=h[0],tq._=h[1];var p=tj(mH(!1),2);Jj._=p[0],Qj._=p[1]}();var nq,rq={_:function(){return function(){var e=ej(),t=e.firstChild,n=t.firstChild,r=n.nextSibling,a=r.nextSibling,s=a.nextSibling,i=s.nextSibling,o=i.firstChild,u=o.firstChild,l=u.nextSibling,c=l.nextSibling,d=c.nextSibling,h=d.nextSibling,p=i.nextSibling,f=p.firstChild,m=f.nextSibling,g=m.nextSibling,y=p.nextSibling,b=y.firstChild,x=b.nextSibling,w=y.nextSibling.firstChild,v=w.nextSibling,k=gj._;"function"==typeof k?WH(k,n):gj._=n;var I=vj._;"function"==typeof I?WH(I,r):vj._=r;var S,N,T=Sj._;return"function"==typeof T?WH(T,a):Sj._=a,VH(u,function(){return j.SMART_CAPTURE.MSG1}),VH(l,function(){return j.SMART_CAPTURE.MSG2}),VH(c,function(){return j.SMART_CAPTURE.MSG3}),VH(d,function(){return j.SMART_CAPTURE.MSG4}),VH(h,function(){return j.SMART_CAPTURE.MSG8}),VH(t,(S=MH,N={get when(){return Kj._.call(JH)},get children(){var e=QH();return VH(e,function(){return Yj._.call(JH)||""}),e}},bH(()=>S(N||{}))),p),VH(f,function(){return j.SMART_CAPTURE.MSG5}),VH(m,function(){return j.SMART_CAPTURE.MSG6}),VH(g,function(){return j.SMART_CAPTURE.MSG7}),VH(b,function(){return j.SMART_CAPTURE.GUIDELINES.GUIDELINE1}),VH(x,function(){return j.SMART_CAPTURE.GUIDELINES.GUIDELINE2}),BH(w,"click",aq._,!0),VH(w,function(){return j.SMART_CAPTURE.MSG10}),BH(v,"click",sq._,!0),VH(v,function(){return j.SMART_CAPTURE.MSG9}),gH(function(n){var r,a,p,y="".concat(Jj._.call(JH)?"":"osc-veiled"," osc-smart-capture-container"),b="osc-smart-capture-sdk ".concat(0===eq._.call(JH)?"osc-capture-mode":1===eq._.call(JH)?"osc-review-mode":"osc-processing-mode"),x=H.ASSETS_BASE_URL+"loader.svg",w="osc-overlay-border ".concat(Gj._.call(JH)?"":"osc-invalid-border"," osc-center osc-guidance-ellipse osc-abs-center"),v=Gj._.call(JH)?"none":"block",k="osc-div ".concat(Dj._.call(JH)?"osc-active":""),I="osc-div ".concat(Oj._.call(JH)?"osc-active":""),S="osc-div ".concat(zj._.call(JH)?"osc-active":""),N="osc-div ".concat(Bj._.call(JH)?"osc-active":""),T="osc-div ".concat(Vj._.call(JH)?"osc-active":""),C="osc-label ".concat($j._.call(JH)?"osc-invalid":""),$="osc-label ".concat(_j._.call(JH)?"osc-invalid":""),E="osc-label ".concat(Rj._.call(JH)?"osc-invalid":"");return y!==n.e&&PH(e,n.e=y),b!==n.t&&PH(t,n.t=b),x!==n.a&&(r=s,a="src",p=n.a=x,UH(r)||(null==p?r.removeAttribute(a):r.setAttribute(a,p))),w!==n.o&&PH(i,n.o=w),v!==n.i&&(null!=(n.i=v)?o.style.setProperty("display",v):o.style.removeProperty("display")),k!==n.n&&PH(u,n.n=k),I!==n.s&&PH(l,n.s=I),S!==n.h&&PH(c,n.h=S),N!==n.r&&PH(d,n.r=N),T!==n.d&&PH(h,n.d=T),C!==n.l&&PH(f,n.l=C),$!==n.u&&PH(m,n.u=$),E!==n.c&&PH(g,n.c=E),n},{e:void 0,t:void 0,a:void 0,o:void 0,i:void 0,n:void 0,s:void 0,h:void 0,r:void 0,d:void 0,l:void 0,u:void 0,c:void 0}),e}()}},aq={_:(nq=ij(rj().m(function e(){var t;return rj().w(function(e){for(;;)switch(e.n){case 0:return Tj._=!1,tq._.call(JH,0),e.p=1,e.n=2,navigator.mediaDevices.getUserMedia(fj._);case 2:t=e.v,mj._=t,e.n=4;break;case 3:throw e.p=3,e.v,lq._.notification(QG.CAMERA_NOT_FOUND),new Error(QG.CAMERA_NOT_FOUND);case 4:uq._.call(JH);case 5:return e.a(2)}},e,null,[[1,3]])})),function(){return nq.apply(this,arguments)})},sq={_:function(){tq._.call(JH,2);var e=document.createElement("canvas");e.width=Ij._.width,e.height=Ij._.height,e.getContext("2d").drawImage(vj._,Ij._.x,Ij._.y,Ij._.width,Ij._.height,0,0,Ij._.width,Ij._.height),e.toBlob(function(e){JH.capturedPic=e,lq._.autoCaptureCallback(e)})}},iq={_:0},oq={_:new class{#n;#r;#a;constructor(e=1,t=1){this.#n={faceFound:new YH(e),outsideGuide:new YH(e),far:new YH(e),close:new YH(e),misAligned:new YH(e),noSufficientLite:new YH(e)},this.#r=["faceFound","outsideGuide","far","close","misAligned","noSufficientLite"],this.#a=t}updateStatus(e){this.#n.faceFound.setStatus(!e.faceFound),this.#n.outsideGuide.setStatus(e.outsideGuide),this.#n.far.setStatus(e.far),this.#n.close.setStatus(e.close),this.#n.misAligned.setStatus(e.misAligned),this.#n.noSufficientLite.setStatus(e.noSufficientLite)}getStatusCount(e){if(this.#n[e])return this.#n[e].getCount();throw new Error(`Invalid status type: ${e}`)}getValidationError(){for(const e of this.#r)if(this.#n[e].getCount()>=this.#a)return e;return null}}},uq={_:function(){kj._&&kj._.clearRect(0,0,vj._.width,vj._.height),Nj._&&Nj._.clearRect(0,0,Sj._.width,Sj._.height),gj._.srcObject=mj._,gj._.play();var e=function(){var t=gj._,n=t.videoWidth,r=t.videoHeight,a=r/.7,s=n/.7;Ij._=XH.getMaxCenteredRectangle(n,r,s,a,.75),xj._=210,wj._=4*xj._/3,yj._=(300-xj._)/2,bj._=(400-wj._)/2,kj._=vj._.getContext("2d",{alpha:!1,willReadFrequently:!0}),Nj._=Sj._.getContext("2d",{alpha:!1,desynchronized:!0,willReadFrequently:!0}),vj._.width=n,vj._.height=r,kj._.translate(n,0),kj._.scale(-1,1),Nj._.translate(n,0),Nj._.scale(-1,1),Sj._.width=300,Sj._.height=400,gj._.removeEventListener("loadeddata",e),KG().then(function(){var e,t,n,r,a,s;e=gj._,t=vj._,n=Sj._,r=Ij._,a=function(e){var t;iq._=cj(JH,JH,(t=cj(JH,JH,iq)._,++t));var n=e.faceFound&&!e.far&&!e.close&&!e.noSufficientLite&&!e.misAligned&&!e.outsideGuide;cj(JH,JH,qj)._.call(JH,n),cj(JH,JH,oq)._.updateStatus(e),cj(JH,JH,Hj)._.call(JH,null===cj(JH,JH,oq)._.getValidationError()),Tj._!==Gj._.call(JH)&&(Tj._=Gj._.call(JH),Gj._.call(JH)?setTimeout(function(){Gj._.call(JH)&&(Zj._.call(JH,3),Xj._.call(JH,!0),Cj._&&(clearInterval(Cj._),Cj._=0),Cj._=setInterval(function(){Gj._.call(JH)||(clearInterval(Cj._),Cj._=0),Yj._.call(JH)>1&&(Zj._.call(JH,Yj._.call(JH)-1),1===Yj._.call(JH)&&setTimeout(function(){Gj._.call(JH)&&(async()=>{const e=OG.getImageData(0,0,BG,PG);return await jG(e)})()&&(cq._.call(JH),Xj._.call(JH,!1),tq._.call(JH,1)),clearInterval(Cj._),Cj._=0},250))},1e3))},500):(clearInterval(Cj._),Cj._=0,Zj._.call(JH,3),Xj._.call(JH,!1)));var r=cj(JH,JH,oq)._.getStatusCount("noSufficientLite")>=1,a=cj(JH,JH,oq)._.getStatusCount("outsideGuide")>=1||cj(JH,JH,oq)._.getStatusCount("far")>=1||cj(JH,JH,oq)._.getStatusCount("close")>=1,s=cj(JH,JH,oq)._.getStatusCount("misAligned")>=1,i=!1,o=!1,u=!1,l=!1,c=!1;switch(cj(JH,JH,oq)._.getValidationError()){case"noSufficientLite":u=!0,r=!0;break;case"outsideGuide":c=!0,a=!0;break;case"far":i=!0,a=!0;break;case"close":o=!0,a=!0;break;case"misAligned":l=!0,s=!0;break;case"faceFound":c=!0,r=!0,s=!0,a=!0}cj(JH,JH,Mj)._.call(JH,i),cj(JH,JH,Lj)._.call(JH,o),cj(JH,JH,Pj)._.call(JH,u),cj(JH,JH,Wj)._.call(JH,l),cj(JH,JH,Uj)._.call(JH,c),cj(JH,JH,Ej)._.call(JH,r),cj(JH,JH,Aj)._.call(JH,s),cj(JH,JH,Fj)._.call(JH,a)},s={tx:yj._,ty:bj._,bx:yj._+xj._,by:bj._+wj._},VG=t.getContext("2d"),WG=e,UG=r,LG=a,zG=s,BG=n.width,PG=n.height,OG=n.getContext("2d"),HG=!1,requestAnimationFrame(qG),Qj._.call(JH,!0)})};gj._.addEventListener("loadeddata",e)}},lq={_:{autoCaptureCallback:function(){},notification:function(){}}},cq={_:function(){JG(),mj._&&mj._.getTracks().forEach(function(e){return e.stop()}),mj._=null,clearInterval(Cj._)}};uj(dj,"addEventListener",function(e,t){switch(e){case"autoCapture":lq._.autoCaptureCallback=t;break;case"notification":lq._.notification=t}});var dq={_:function(e){switch(e){case"autoCapture":lq._.autoCaptureCallback=function(){};break;case"notification":lq._.notification=function(){}}}};uj(dj,"stopSmartCaptureUI",function(){var e;cq._.call(JH),pj._&&pj._.call(JH),null===(e=document.getElementById("otfs-smart-capture-cntr"))||void 0===e||e.remove(),pj._=void 0,hj.call(JH),dq._.call(JH)}),function(e,t=window.document){const n=t[OH]||(t[OH]=new Set);for(let r=0,a=e.length;r<a;r++){const a=e[r];n.has(a)||(n.add(a),t.addEventListener(a,GH))}}(["click"]);let hq=null;const pq=()=>{hq=null,dj.stopSmartCaptureUI(),(async()=>{JG();try{(()=>{if(G&&Zo(),CG){try{CG.blazeFaceModel&&CG.blazeFaceModel.dispose(),CG.anchors&&CG.anchors.dispose(),CG.inputSize&&CG.inputSize.dispose()}catch(e){console.error("Error disposing face detector:",e)}CG=null}$G=!1})()}catch(e){console.error("Error disposing TensorFlow.js resources:",e)}if(null!==GG&&AG&&(AG._free(GG),GG=null),null!==DG&&AG&&(AG._free(DG),DG=null),RG){try{RG.dispose()}catch(e){console.error("Error disposing landmark model:",e)}RG=null}AG&&(AG=null),MG&&(MG=null),OG=void 0,LG=void 0,zG=void 0,PG=void 0,BG=void 0,WG=void 0,VG=void 0,UG=void 0})()},fq=e=>(async e=>hq||(hq=new Promise(async(t,n)=>{if(!e)return n(QG.CONTAINER_MISSING);try{dj.addEventListener("autoCapture",async e=>{try{t(e)}catch(e){pq(),n(e)}}),await KG(),await dj.renderSmartCaptureUI(e)}catch(e){hq=null,console.error(e),pq(),n(e)}}),hq))(e),mq=()=>pq(),gq=()=>H.VERSION,yq=e=>{(e=>{e.STATIC_ASSETS_BASE_URL&&(H.STATIC_ASSETS_BASE_URL=e.STATIC_ASSETS_BASE_URL),e.ASSETS_BASE_URL&&(H.ASSETS_BASE_URL=e.ASSETS_BASE_URL),e.UIConfig&&(j=Object.assign(j,e.UIConfig))})(e)}})(),r})());